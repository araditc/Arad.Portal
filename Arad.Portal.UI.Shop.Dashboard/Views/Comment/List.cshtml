@using System.Web;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Comment;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model PagedItems<CommentViewModel>
@{

    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var to = "";
    var from ="";
    var domainId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["fDate"]) || !string.IsNullOrWhiteSpace(queryString["tDate"]) || !string.IsNullOrWhiteSpace(queryString["domainId"]);
                 
       
        if (isSearch)
        {
            if(queryString["fDate"] != null)
            from = queryString["fDate"].ToString();

            if(queryString["tDate"] != null)
            to = queryString["tDate"].ToString();

            if(queryString["domainId"] != null)
            domainId = queryString["domainId"].ToString();
        }
        queryString.Remove("page");
    }
    var searchCollapseClass = isSearch ? "collapse show" : "collapse";
     var baseAdd = Config["BaseAddress"];
}
@section Styles
{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="@Url.Content($"~/lib/datePicker/kamadatepicker.css")" rel="stylesheet" />
    }
    else
    {
        <link href="@Url.Content($"~/lib/bootstrap-datepicker/css/bootstrap-datepicker.standalone.css")" rel="stylesheet" />
    }
}

<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>

    <div id="searchCollapse" class="@searchCollapseClass">
        <div class="card-body">
            <div class="row">
                @if(@ViewBag.IsSysAcc)
                {
                     <div class="form-group col-12 col-md-3">
                          <label for="domainId" class="form-label">@Language.GetString("AssociatedDomain")</label>
                          <select class="form-control selectpicker" data-live-search="true" 
                             id="domainId" asp-items="@(new SelectList(ViewBag.Domains,"Value","Text"))">
                        </select>
                     </div>
                }
                <div class="form-group col-md-3">
                    <label class="form-label">@Language.GetString("StartDate")</label>
                    
                    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                    {
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <input autocomplete="off" id="dtpStartDate" type="text" class="form-control" />
                        </div>
                    }
                    else
                    {
                        <div class="input-group date" data-provide="datepicker">
                            <input type="text" class="form-control datepicker" id="dtpStartDate">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                        </div>
                      
                    }
                </div>
                <div class="form-group col-md-3">
                    <label class="form-label">@Language.GetString("EndDate")</label>
                    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                    {
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <input autocomplete="off" id="dtpEndDate" type="text" class="form-control" />
                        </div>
                    }
                    else
                    {
                        
                        <div class="input-group date" data-provide="datepicker">
                                                    <input type="text" class="form-control datepicker" id="dtpEndDate">
                                                    <span class="input-group-text">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                </div>
                    }
                </div>
                
            </div>
        </div>
        <div class="card-footer">
            <button id="btnSearch" class="btn btn-primary btn-sm bg-gradient float-end" type="button">
                <i class="fa fa-search"></i>
                @Language.GetString("btn_Search")
            </button>
        </div>
    </div>
    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-md-3">
                    <h5 class="card-title">@ViewBag.Title</h5>
                </div>
                <div class="col-md-3 offset-md-6">
                    <div class="card-tools float-end">
                       
                    </div>
                </div>
            </div>

        </div>
        <div class="card-body table-responsive" id="CommentListCard">
            <table class="table table-bordered table-striped align-middle">
                <thead>
                    <tr style="text-align:center;">
                        <th>@Language.GetString("tbl_RowName")</th>
                        <th>@Language.GetString("ReferenceType")</th>
                        <th>@Language.GetString("DomainName")</th>
                        <th>@Language.GetString("ReferenceTitle")</th>
                        <th>@Language.GetString("CreationDate")</th>
                        <th>@Language.GetString("Role_CreatorUserName")</th>
                        <th>@Language.GetString("LikeCount")</th>
                        <th>@Language.GetString("DisLikeCount")</th>
                        <th>@Language.GetString("Menu_Content")</th>
                        <th>@Language.GetString("ParentComment")</th>
                        <th>@Language.GetString("IsApproved")</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Items.Any())
                    {

                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="ListCell">@(++i)</td>
                                <td class="ListCell">@item.ReferenceType</td>
                                <td class="ListCell">@item.domainName</td>
                                <td class="ListCell">@item.ReferenceTitle</td>
                                <td class="ListCell">@item.PersianCreationDate</td>
                                <td class="ListCell">@item.CreatorUserName</td>
                                <td class="ListCell">@item.LikeCount</td>
                                <td class="ListCell">@item.DislikeCount</td>
                                <td class="ListCell">@item.Content</td>
                                <td class="ListCell">@item.ParentCommentContent</td>
                                <td class="ListCell">
                                    <div class="form-check d-flex justify-content-center p-0">
                                        <input type="radio" name=@($"isApproved_{@item.CommentId}")  checked="@item.IsApproved"
                                        class="form-check-input rdbIsMain" disabled='disabled'>
                                    </div>
                                </td>
                                <td>
                                 
                                        <button class="btn btn-sm btn-success btn-sm btnApprove" cmd="@item.CommentId">
                                            <i  class="fa fa-edit"></i>@Language.GetString("btn_Approved")
                                        </button>
                                   
                                    @if (!item.IsDeleted)
                                    {
                                        <button onclick="EntityDelete('@item.CommentId')" class="btn btn-sm btn-danger bg-gradient">
                                            <i  class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                        </button>
                                    }
                                    @if (item.IsDeleted)
                                    {
                                        <button id="restoreRecord" onclick="EntityRestore('@item.CommentId')" class="btn btn-sm btn-secondary bg-gradient">
                                            <i style="position: relative;left: 5px;top: 2px;" class="fa fa-refresh"></i>
                                            @Language.GetString("btn_Restore")
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="ListCell">
                                <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            @await Component.InvokeAsync("Pagination", new PageViewModel
            {
                CurrentPage = Model.CurrentPage,
                ItemsCount = Model.ItemsCount,
                PageSize = Model.PageSize,
                Navigation = Url.Action("List", "ProductComment"),
                QueryParams = Model.QueryString
            })
        </div>

    </div>
</div>

@section Scripts{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="@Url.Content($"~/lib/datePicker/kamadatepicker.min.js")"></script>
    }
    else
    {
    <script src="@Url.Content($"~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
    }
<script>
        $(document).ready(function () {
           //datetimepicker

           if('@domainId' != "")
           {
               $("#domainId").val('@domainId');
               $("#domainId").selectpicker("refresh");
           }
           if('@from' != "")
           {
               $("#dtpStartDate").val('@from');
           }
           if('@to' != "")
           {
               $("#dtpEndDate").val("@to");
           }
             if ("@CultureInfo.CurrentCulture.Name" == "fa-IR") {
                 kamaDatepicker('dtpStartDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
                kamaDatepicker('dtpEndDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            } else {
                $('.datepicker').datepicker();
            }

            $("#btnSearch").click(function () {
                debugger;
                var queryString = "";
                if ($("#dtpStartDate").val() != "") {
                    queryString = "?fDate=" + $("#dtpStartDate").val();
                }
                if ($("#dtpEndDate").val() != "") {
                    if (queryString != "") {
                        queryString += "&tDate=" + $("#dtpEndDate").val();
                    }
                    else
                    {
                        queryString = "?tDate=" + $("#dtpEndDate").val();
                    }
                }
                if($("#domainId").val() != "-1" && $("#domainId").val() != "")
                {
                    if (queryString != "") {
                        queryString += "&domainId=" + $("#domainId").val();
                    }
                    else
                    {
                        queryString = "?domainId=" + $("#domainId").val();
                    }
                }
               window.location.href = '@Url.Action("List", "ProductComments")' + queryString;
            });

            $(".btnApprove").click(function(){
                debugger;
                var cmt = $(this).attr("cmd");
                 $.ajax({
                        url:'@Url.Action("ApproveComment", "ProductComments")'+`?commentId=${cmt}`,
                        contentType: "application/json",
                        type: "Get",
                        beforeSend: function () {
                        },
                        success: function (result) {
                            debugger;
                            if (result.status === "Success") {
                              document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            var toastDiv = $("#mainToast");
                            $("#toastPanel").show();
                            var toast = new bootstrap.Toast(toastDiv);
                            toast.show();
                             setTimeout(function()
                            {
                                $("#toastPanel").hide();
                                window.location.reload();
                            },
                            2500);
                            }else
                            {
                                showError(result.message);
                            }

                        }
                    });
            });
        });

        function EntityDelete(id) {
            entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = '@Url.Action("Delete", "ProductComments")' + "/" + id,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Delete")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_DeletionSureness")';
			$('#confirmModal').modal('show');
        }

    function EntityRestore(id) {
         entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = '@Url.Action("Restore", "ProductComments")' + "/" + id,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Restore")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_RestorationSureness")';
			$('#confirmModal').modal('show');
    }

</script>
}
