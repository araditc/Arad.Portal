@model Arad.Portal.DataLayer.Models.Comment.CommentDTO;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <style>
        .text-danger {
            font-size: 12px;
        }
    </style>
}

<h4>  @Language.GetString(@ViewBag.Title) </h4>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addEditCommentCard">
            <form asp-controller="Comment" asp-action="ApproveComment" id="approveCommentFrm">
                <div class="card-header">
                    <h5 class="card-title" data-toggle="tab">@($"!string.IsNullOrWhiteSpace(Model.CommentId) ? Language.GetString('EditCommen_Title') : Language.GetString('AddComment_Title'){ViewBag.Name}") </h5>
                </div>

                <div class="card-body" id="addEditCommentCardBody">
                    <div class="row">
                        <input type="hidden" value="@Model.CommentId" asp-for="CommentId" />
                        <input type="hidden" value="@Model.ParentId" asp-for="@Model.ParentId" />
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label" asp-for="@Model.ReferenceTitle">@Language.GetString(ViewBag.lbl)</label>
                            <input type="text" asp-for="@Model.ReferenceTitle" value="@Model.ReferenceTitle" class="form-control" readonly="readonly" />
                        </div>
                        <div class="form-group col-12 col-md-3 pt-1 pb-2">
                            <div class="form-check m-auto d-inline-block pt-3">
                                <input class="form-check-input" type="checkbox" value="IsVendor" asp-for="@Model.IsApproved">
                                <label class="form-check-label" asp-for="IsApproved">
                                    @Language.GetString("IsApproved")
                                </label>
                            </div>
                        </div>
                       
                    </div>

                    <div class="row">
                        <div class="form-group col-12 col-md-6">
                            <label class="form-label" asp-for="@Model.ParentId">@Language.GetString("ParentComment")</label>
                            <input type="text" asp-for="@Model.ParentCommentContent" value="@Model.ParentCommentContent" class="form-control" readonly="readonly" />
                            <span data-val-result="ParentCommentContent" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-6">
                            <label class="form-label" asp-for="@Model.Content">@Language.GetString("ContentComment")</label>
                            <input type="text" asp-for="@Model.Content" value="@Model.Content" class="form-control" readonly="readonly" />
                            <span data-val-result="Content" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-4 offset-md-8 col-12">
                            <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                            <input type="button" id="btnApproveComment" value="@Language.GetString("btn_Approved")" class="btn btn-primary bg-gradient float-end m-2" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    
<script>

        $(document).ready(function () {
            debugger;
            
            if ("@Model.CommentId" != "") {
                $("#IsApproved").prop('checked', '@Model.IsApproved');
            }
            $("#btnApproveComment").click(function () {
            debugger;
            var commenId = $("#CommentId").val();
            var isApproved = $("input[type=checkbox][id='IsApproved']").is(":checked");

                $.ajax({
                    url: `@Url.Action("ApproveComment", "Comment")?commentId=${commenId}&isApproved=${isApproved}`, 
                    type: 'Get',
                    processData: false,
                    contentType: false,
                    beforeSend: function () {
                        debugger;
                       /* AddLoading($("#addEditCommentCardBody"));*/
                    },
                    success: function (result) {
                    debugger;
                        if (result.status === "Success") {
                             document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            $('#mainToastBody').removeClass("alert-danger");
                            $('#mainToastBody').addClass("alert-success");
                            $("#toastPanel").show();

                            var bsAlert = new bootstrap.Toast($("#mainToast"));
                                bsAlert.show();
                            setTimeout(function()
                                {
                                    $("#toastPanel").hide();
                                    window.location.href = '@Url.Action("List")';
                                },
                                1500);
                        } 
                        else
                        if(result.status =="ModelError")
                        {
                                var spanErrorList = $('span[data-val-result]');

                                if (spanErrorList.length > 0) {
                                    spanErrorList.each(function () {
                                        $(this).html("");
                                        $(this).parent().removeClass("has-error");
                                    });
                                }
                                else {
                                    spanErrorList.html("");
                                    spanErrorList.parent().removeClass("has-error");
                                }

                                if (result.modelStateErrors.length > 0) {
                                    debugger;
                                    result.modelStateErrors.forEach(function (value, index) {
                                        $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                        $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                    });
                        }else
                        if (result.status === "Error")
                        {
                            showError(result.message);
                        }
                    },
                    complete: function () {
                        /*removeLoading($("#addEditCommentCardBody"));*/
                    }
                });

            });
        });
</script>
}




