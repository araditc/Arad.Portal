@model Arad.Portal.DataLayer.Models.ProductSpecificationGroup.SpecificationGroupDTO
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <style>
        .text-danger {
            font-size: 12px;
        }
      
    </style>
}

<h4>  @Language.GetString("Menu_ProductSpecificationGroup") </h4>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addProductSpecificationGroupCard">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.SpecificationGroupId) ?
               Language.GetString("EditProSpecGroupPart_Title") : Language.GetString("AddProSpecGroupPart_Title"))
                </h5>
            </div>

            <div class="card-body" id="addEditProductGroupCard">
                <input type="hidden" value="@Model.SpecificationGroupId" asp-for="SpecificationGroupId" />
                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="groupName">@Language.GetString("tbl_GroupName")</label><br />
                        <input type="text" class="form-control" id="groupName" placeholder=" ">
                        <span data-val-result="groupName" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="languageId">@Language.GetString("LanguageName")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                        </select>
                        <span data-val-result="languageId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="currencyId">@Language.GetString("Currency")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" id="currencyId" asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text"))">
                        </select>
                        <span data-val-result="currencyId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3" style="text-align:center;margin:auto;">
                        <div style="margin:auto;display:inline-block;">
                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addToTable();">
                                <i class="fa fa-plus pt-1"></i>
                            </button>
                        </div>

                    </div>
                </div>


                <div class="row" style="margin-top:1%;">
                    <div class="card-body table-bordered  table-responsive p-0">
                        <table class="table table-hover">
                            <thead>
                                <tr style="text-align:center;">
                                    <th>@Language.GetString("tbl_GroupName")</th>
                                    <th>@Language.GetString("LanguageName")</th>
                                    <th style="display:none"></th>
                                    <th style="display:none"></th>
                                    <th>@Language.GetString("Currency")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="multiLingualList">
                                @foreach (var item in Model.GroupNames)
                                {
                                    <tr style="text-align:center;">
                                        <td>@item.Name</td>
                                        <td>@item.LanguageName</td>
                                        <td style="display:none;">@item.LanguageId</td>
                                        <td style="display:none;">@item.CurrencyId</td>
                                        <td>@item.CurrencyName</td>
                                        <td>
                                            <button type="button" class="btn btn-danger bg-gradient" onclick="deleteFromTable(this);">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddProductSpecificationGroup" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {
           

      $("#btnAddProductSpecificationGroup").click(function () {
            debugger;
                var flag = false;

          var dataModel = FillDataToSend();

          if (dataModel.GroupNames.length == 0) {
                    $("span[data-val-result='GroupNames']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                    flag = true;
                }
                if (!flag) {
            $.ajax({
                url: "@Model.SpecificationGroupId" != "" ? '@Url.Action("Edit", "ProductSpecificationGroup")': '@Url.Action("Add", "ProductSpecificationGroup")',
                  /*  data: dataModel,*/
                    contentType: 'application/json',
                    data: JSON.stringify(dataModel),
                type: 'Post',
                beforeSend: function () {
                    debugger;
                   /* AddLoading($("#addProductSpecificationGroupCard"));*/
                },
                success: function (result) {
                    debugger;
                    if (result.status === "Success")
                    {
                       
                          document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            $("#toastPanel").show();
                             var bsAlert = new bootstrap.Toast($("#mainToast"));
                            bsAlert.show();
                            setTimeout(function()
                            {
                                $("#toastPanel").hide();
                                 window.location.href = '@Url.Action("List")';
                            },
                            3000);
                    }
                    else
                    if (result.status === "ModelError")
                    {
                            var spanErrorList = $('span[data-val-result]');
                            if (spanErrorList.length > 1)
                            {
                                spanErrorList.each(function() {
                                    $(this).html("");
                                    $(this).parent().removeClass("has-error");
                                });
                            } 
                            else
                            {
                                spanErrorList.html("");
                                spanErrorList.parent().removeClass("has-error");
                            }
                           if (result.modelStateErrors != null && result.modelStateErrors.length > 0) 
                           { 
                            result.modelStateErrors.forEach(function(value, index) 
                            {
                                $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                            });
                           }
                          else
                           {
                               showError(result.message);
                           }
                     }
                     else if(result.status == "Error")
                     {
                         showError(result.message);
                     }
                },
                @*error: function (xhr, ajaxOptions, thrownError) {
                    alert("@error");
                    alert(xhr.status);
                    alert(thrownError);
                },*@
                complete: function () {
                    //removeLoading($("#addProductSpecificationGroupCard"));
                }
                });
                }

            });
        });

        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.GroupNames = [];
            obj.SpecificationGroupId = $("#SpecificationGroupId").val();
          /* obj.ModificationReason = $("#ModificationReason").val();*/
            $("#multiLingualList tr").each(function () {
                debugger;
                var innerModel = {};

                innerModel.Name = $(this).find("td:eq(0)").text();
                innerModel.LanguageId = $(this).find("td:eq(2)").text();
                innerModel.CurrencyId = $(this).find("td:eq(3)").text();

                obj.GroupNames.push(innerModel);
        });
            return obj;
        }

        function deleteFromTable(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        function addToTable() {
            var flag = false;
            debugger;

            if ($("#groupName").val() == "") {
                $("span[data-val-result='groupName']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#languageId").val() == "-1") {
                 $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#currencyId").val() == "-1") {
                 $("span[data-val-result='currencyId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if (!flag) {
                var tr = "<tr style='text-align:center;'><td>" + $("#groupName").val() +
                    "</td><td>" + $('#languageId option:selected').text() +
                    "</td><td style='display:none;'>" + $("#languageId").val() +
                    "</td><td style='display:none;'>" + $("#currencyId").val() +
                    "</td><td>" + $("#currencyId option:selected").text() +
                    "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromTable(this);'>" +
                    "<i class='fa fa-trash' ></i></button></td></tr>";

                $("#multiLingualList").append(tr);
                $("#groupName").val("");
                $("#languageId").val("-1");
                $("#currencyId").val("-1");
            }
        }
    </script>
}




