@model Arad.Portal.DataLayer.Models.Product.ProductOutputDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var lan = HelpersMethods.GetHtmlLang(CultureInfo.CurrentCulture);
    var count = @Model.MultiLingualProperties.Count + 1;
     var baseAdd = Config["BaseAddress"];
}

@section Styles{
<style type="text/css">
    .text-danger {
        font-size: 12px;
    }

    .removeImage {
        display: inline-block;
        position: absolute;
        top: -7px;
        right: -5px;
        width: 20px;
        height: 21px;
        background: #dc3545;
        text-align: center;
        border-radius: 50%;
        color: white !important;
        cursor: pointer;
    }

    .divCenter {
        text-align: center;
        border: 1px solid;
    }

    table tr {
        text-align: center;
    }

    tbody tr td {
        vertical-align: middle;
    }

    .valign {
        vertical-align: middle;
    }
</style>

<link href="@Url.Content($"~/lib/cropperjs/cropper.css")" rel="stylesheet" />
   @* <link href="~/lib/ckeditor/prism_1.0.1/prism/lib/prism/prism_patched.min.css" rel="stylesheet" />*@
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
       <link href="@Url.Content($"~/lib/datePicker/kamadatepicker.css")" rel="stylesheet" />
    }
    else
    {
       <link href="@Url.Content($"~/lib/bootstrap-datepicker/css/bootstrap-datepicker.standalone.css")" rel="stylesheet" />
    }
}
<h4>@Language.GetString("Menu_Products")</h4>

<div aria-hidden="true" aria-labelledby="confirmLabel" class="modal fade" id="showModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="confirmLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="confirmBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="onConfirmDialog();" type="button">
                    @Language.GetString("btn_Confirm")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_NotConfirm")
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="uploadModal" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content col-md-12">
            <div class="modal-header">
                <div class="col-md-1">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="col-md-11" style="text-align: center">
                    <h5 class="modal-title align-content-center" id="exampleModalLongTitle">@Language.GetString("CropImage")</h5>
                </div>
            </div>
            <div class="modal-body">
                <div class="modal-body" id="upload-modal-body">
                    <div id="rowContainer" class="row justify-content-center align-items-center">
                        <div id="container" style="position: relative;display: inline; height: 400px; width: 400px;max-width:100%;">
                            <img onchange="getURL(this)" class="img-fluid" hidden="hidden" id="croppedImg"
                                 alt="your image" style="max-width: 100%;width: 356px;height: 356px;border: 1px solid black" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-center align-items-center">
                <div>
                    <button class="btn btn-success bg-gradient" id="send_pic" type="button"><i style="margin-left: 5px;font-size:13px" class="fas fa-check"></i>@Language.GetString("btn_Approve")</button>
                    <button class="btn btn-primary bg-gradient" id="crop_button"><i style="margin-left: 5px;font-size:13px" class="fas fa-cut"></i>@Language.GetString("btn_Crop")</button>
                    <button class="btn btn-primary bg-gradient" onclick="rotatePic()"> <i style="margin-left: 5px;font-size:13px" class="fas fa-retweet"></i> @Language.GetString("btn_Rotate")</button>

                </div>
            </div>
        </div>
    </div>
</div>


<hr />
<div class="row">
    <div class="col-md-12">
        <div class="card" id="addProductCard">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.ProductId) ?
                    Language.GetString("EditProductPart_Title") : Language.GetString("AddProductPart_Title"))
                </h5>
            </div>

            <div class="card-body" id="addEditProductCard">
                <input type="hidden" value="@Model.ProductId" asp-for="ProductId" />
                <div class="row">
                    <div class="form-group col-12 col-md-3">
                          <label asp-for="ProductType" class="form-label">@Language.GetString("ProductType")</label>
                          <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.ProductType" asp-items="@(new MultiSelectList(ViewBag.ProductType,"Value","Text"))">
                        </select>
                        <span data-val-result="ProductType" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3 d-none fileSec downloadType">
                         <label asp-for="DownloadLimitationType" class="form-label">@Language.GetString("DownloadLimitation")</label>
                         <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.DownloadLimitationType" asp-items="@(new MultiSelectList(ViewBag.DownloadOptions,"Value","Text"))">
                        </select>
                        <span data-val-result="DownloadLimitationType" class="text-danger"></span>
                    </div>
                     <div class="form-group col-12 col-md-3 d-none fileSec timeDuration">
                          <label asp-for="AllowedDownloadDurationDay" class="form-label">@Language.GetString("AllowedDownloadDuration")</label>
                          <input type="number" min="1" class="form-control" asp-for="@Model.AllowedDownloadDurationDay" />
                           <span data-val-result="AllowedDownloadDurationDay" class="text-danger"></span>
                     </div>
                      <div class="form-group col-12 col-md-3 d-none fileSec downloadCnt">
                           <label asp-for="AllowedDownloadCount"  class="form-label">@Language.GetString("AllowedDownloadNumber")</label>
                            <input type="number" min="1" class="form-control" asp-for="@Model.AllowedDownloadCount" />
                            <span data-val-result="AllowedDownloadCount" class="text-danger"></span>

                      </div>
                </div>
                <div class="row">
                     <div class="form-group col-12 col-md-6 fileSec d-none productFileUpload">
                    <label class="form-label">
                        @Language.GetString("ProductFile")
                    </label>
                    <input accept=".zip,.rar" class="form-control"  id="ProductFileContent"   type="file" />
                    <span data-val-result="ProductFileContent" class="text-danger"></span>
                </div>
                @if(!string.IsNullOrWhiteSpace(Model.ProductFileName))
                {
                     <div class="form-group col-12 col-md-3">
                          <label class="form-label" asp-for="@Model.ProductFileName">
                              @Language.GetString("ProductFileName")
                        </label>
                       <input type="text" min="1" class="form-control" asp-for="@Model.ProductFileName" />
                    </div>
                }
               
                </div>

                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <label asp-for="@Model.GroupIds" class="form-label">@Language.GetString("tbl_ProductGroup")</label>
                        <select class="form-control selectpicker" data-live-search="true" multiple asp-for="@Model.GroupIds" asp-items="@(new MultiSelectList(ViewBag.ProductGroupList,"Value","Text"))">
                        </select>
                        <span data-val-result="GroupIds" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label asp-for="@Model.UniqueCode" class="form-label">@Language.GetString("tbl_UniqeCode")</label>
                        <input type="text" class="form-control" asp-for="@Model.UniqueCode" value="@Model.UniqueCode" />
                        <span data-val-result="UniqueCode" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label asp-for="@Model.Inventory" class="form-label">@Language.GetString("tbl_Inventory")</label>
                        <input type="number" class="form-control" asp-for="@Model.Inventory" value="@Model.Inventory" min="0" />
                        <span data-val-result="Inventory" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label asp-for="@Model.Unit.ProductUnitId" class="form-label">@Language.GetString("Menu_ProductUnit")</label>
                        <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.Unit.ProductUnitId" asp-items="@(new SelectList(ViewBag.ProductUnitList,"Value","Text"))">
                        </select>
                        <span data-val-result="productUnitId" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <lable asp-for="@Model.MinimumCount"> @Language.GetString("AlertAndMessage_NotifyWhenCountIsLessThan")</lable>
                        <input type="number" class="form-control" asp-for="@Model.MinimumCount" value="@Model.MinimumCount" min="0" />

                    </div>
                    <div class="form-group col-12 col-md-3 pt-1 pb-2">
                        <div class="form-check m-auto d-inline-block pt-3">
                            <input class="form-check-input" type="checkbox" value="@Model.ShowInLackOfInventory" asp-for="@Model.ShowInLackOfInventory">
                            <label class="form-check-label" asp-for="@Model.ShowInLackOfInventory">
                                @Language.GetString("ShowInLackOfInventory")
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        @if (ViewBag.Vendors != "-1")
                        {
                            <label class="form-label" asp-for="@Model.SellerUserId">@Language.GetString("ProductVendor")</label>
                            <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.SellerUserId" asp-items="@(new SelectList(ViewBag.Vendors,"Value","Text"))">
                            </select>
                            <span data-val-result="sellerUserId" class="text-danger"></span>
                        }
                    </div>
                    <div class="form-group col-12 col-md-3 pt-4 pb-2">
                        <div class="form-check m-auto d-inline-block pt-3">
                            <input class="form-check-input" type="checkbox" value="@Model.IsPublishedOnMainDomain" asp-for="@Model.IsPublishedOnMainDomain" >
                            <label class="form-check-label" asp-for="@Model.IsPublishedOnMainDomain">
                                @Language.GetString("AlertAndMessage_IsPublishedOnMainDomain")
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <label asp-for="@Model.ProductCode" class="form-label">@Language.GetString("tbl_ProductCode")</label>
                        <input type="text" class="form-control" asp-for="@Model.ProductCode" value="@Model.ProductCode" placeholder=" " disabled>
                        <span data-val-result="ProductCode" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label">@Language.GetString("Promotion")</label>
                        <select class="form-control selectpicker" data-live-search="true" id="PromotionId" asp-items="@(new SelectList(ViewBag.PromotionList,"Value","Text"))">
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card border border-dark m-2">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("Menu_ProductSpecifications")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="form-group col-12 col-md-2">
                                        <label class="form-label">@Language.GetString("LanguageName")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))" data-live-search="true">
                                        </select>
                                        <span data-val-result="languageId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("SpecificationGroup")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="specGroupId" asp-items="@(new SelectList(ViewBag.SpecificationGroupList,"Value","Text"))" data-live-search="true">
                                        </select>
                                        <span data-val-result="specGroupId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_SpecificationName")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="specificationId">
                                        </select>
                                        <span data-val-result="specificationId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-11 col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_SpecificationValues")</label>
                                        <select class="form-control selectpicker" multiple="multiple" id="specValues" data-live-search="true">
                                        </select>
                                        <span data-val-result="specValues" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-1 col-md-1" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addSpecToList();">
                                                <i class="fa fa-plus pt-1"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12 col-md-3 offset-md-3">
                                        <span data-val-result="specifications" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row" style="margin-top:1%;">
                                    <div class="col-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("LanguageName")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("SpecificationGroup")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("tbl_SpecificationName")</th>
                                                    <th style="display:none"></th>
                                                    <th>@Language.GetString("tbl_SpecificationValues")</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="specificationList">
                                                @if (Model.Specifications.Any())
                                                {
                                                    @foreach (var item in Model.Specifications)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@item.LanguageName</td>
                                                            <td style="display:none;">@item.LanguageId</td>
                                                            <td>@item.SpecificationGroupName</td>
                                                            <td style="display:none;">@item.SpecificationGroupId</td>
                                                            <td>@item.SpecificationName</td>
                                                            <td style="display:none;">@item.SpecificationId</td>
                                                            <td>@item.Values</td>
                                                            <td>
                                                                <button type="button" class="btn btn-danger bg-gradient" onclick="deleteFromSpecList(this)">
                                                                    <i class="fa fa-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="8">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                           
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("MultiLingualProperty")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="form-group col-12">
                                        <label class="form-label">@Language.GetString("ProductSpecs")</label>
                                        <textarea id="editorCk" name="editorCk" class="form-control" rows="30"></textarea>
                                       
                                        <script src="@Url.Content($"~/lib/ckeditor_4.15.1_full/ckeditor/ckeditor.js")"></script>
                                        <script>
                                                var config =
                                                {
                                                    height: 300,
                                                    filebrowserUploadUrl: '@Url.Action("ProductImageUpload", "Image")',
                                                    language: '@lan',
                                                    scayt_sLang: '@lan',
                                                    allowedContent: true,
                                                    toolbarGroups: [
                                                        { name: 'clipboard', groups: ['clipboard', 'undo'] },
                                                        { name: 'editing', groups: ['find', 'selection', 'spellchecker'] },
                                                        { name: 'links' },
                                                        { name: 'insert' },
                                                        { name: 'forms' },
                                                        { name: 'tools' },
                                                        { name: 'document', groups: ['mode', 'document', 'doctools'] },
                                                        { name: 'others' },
                                                        '/',
                                                        { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },
                                                        { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'] },
                                                        { name: 'styles' },
                                                        { name: 'colors' },
                                                        { name: 'about' }
                                                    ]
                                            };
                                            config.font_names =
                                                'Arial/Arial, Helvetica, sans-serif;' +
                                                'Times New Roman/Times New Roman, Times, serif;' +
                                                'Verdana;' +
                                                'IRANSansWeb;' +
                                                'WeblogmaYekan;' +
                                                'Vazir;' +
                                                'Shabnam';
                                            config.baseHref ="@ViewBag.Url";
                                            config.extraPlugins = '';

                                            var editor = document.getElementById("editorCk");
                                            CKEDITOR.replace(editor, config);
                                            CKEDITOR.dtd.$removeEmpty['i'] = false;
                                            CKEDITOR.dtd.$removeEmpty['span'] = false;
                                        </script>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-12 col-md-2">
                                        <label class="form-label">@Language.GetString("LanguageName")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="multiLangId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                                        </select>
                                        <span data-val-result="multiLangId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_ProductName")</label>
                                        <input type="text" class="form-control" id="productName" placeholder="" />
                                        <span data-val-result="productName" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("UrlFriend")</label>
                                        <input type="text" class="form-control" dir="ltr" id="urlFriend" placeholder=" " />
                                        <span data-val-result="urlFriend" class="text-danger"></span>

                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("SeoTitle")</label>
                                        <input type="text" class="form-control" id="seoTitle" placeholder=" " maxlength="70">

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("SeoDescription")</label>
                                        <input type="text" class="form-control" id="seoDescription" placeholder=" " maxlength="150">

                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("Description")</label>
                                        <input type="text" class="form-control" id="description" placeholder=" ">

                                    </div>
                                    <div class="form-group col-12 col-md-3">
                                        <span data-val-result="multiLinguals" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-3" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addToTable();">
                                                <i class="fa fa-plus pt-1"></i>
                                            </button>
                                        </div>
                                    </div>

                                </div>



                                <div class="row">
                                    <div class="col-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("LanguageName")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("tbl_ProductName")</th>
                                                    <th>@Language.GetString("SeoTitle")</th>
                                                    <th>@Language.GetString("SeoDescription")</th>
                                                    <th>@Language.GetString("Description")</th>
                                                    <th>@Language.GetString("UrlFriend")</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="multiLingualList">
                                                @if (Model.MultiLingualProperties.Count != 0)
                                                {
                                                    @foreach (var item in Model.MultiLingualProperties)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@item.LanguageName</td>
                                                            <td style="display:none;">@item.LanguageId</td>
                                                            <td>@item.Name</td>
                                                            <td>@item.SeoTitle</td>
                                                            <td>@item.SeoDescription</td>
                                                            <td>@item.Description</td>
                                                            <td dir="ltr">@(!string.IsNullOrWhiteSpace(item.UrlFriend) ? item.UrlFriend.Replace("/product/", "") : item.UrlFriend)</td>
                                                            <td>
                                                                <button type="button" class="btn btn-danger btnDel bg-gradient" cnt="@item.Tag" onclick="deleteFromTable(this);">
                                                                    <i class="fa fa-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>

                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="8">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("PriceHistory")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="form-group col-12 col-md-3">
                                        <label class="form-label">@Language.GetString("Currency")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="currencyId" asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text"))">
                                        </select>
                                        <span data-val-result="currencyId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-12 col-md-2">
                                        <label class="form-label">@Language.GetString("PriceValue")</label>
                                        <input type="number" class="form-control" id="priceValue" />
                                        <span data-val-result="priceValue" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-11 col-md-3">
                                        <label class="form-label">@Language.GetString("StartDate")</label>

                                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                                        {
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fa fa-calendar"></i>
                                                </span>
                                                <input autocomplete="off" id="dtpStartDate" type="text" class="form-control" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="input-group date" data-provide="datepicker">
                                                <input type="text" class="form-control" id="dtpStartDate">
                                                <span class="input-group-text">
                                                    <i class="fa fa-calendar"></i>
                                                </span>
                                            </div>
                                        }
                                        <span data-val-result="startDate" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-1" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addPriceToList();">
                                                <i class="fa fa-plus pt-1"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-12 col-md-3">
                                        <span data-val-result="priceList" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("Currency")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("PriceValue")</th>
                                                    <th>@Language.GetString("StartDate")</th>
                                                    <th>@Language.GetString("EndDate")</th>
                                                    <th>@Language.GetString("ActivationState")</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="priceList">
                                                @if (Model.Prices.Count != 0)
                                                {
                                                    @foreach (var price in Model.Prices)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@price.CurrencyName</td>
                                                            <td style="display:none;">@price.CurrencyId</td>
                                                            <td>@price.PriceValue</td>
                                                            <td style="direction:ltr;">@price.StartDate</td>
                                                            <td>@price.EndDate</td>
                                                            <td>@(price.IsActive ? Language.GetString("Active") : Language.GetString("InActive")) </td>
                                                            <td>
                                                                <button type="button" class="btn btn-danger bg-gradient" onclick="deleteFromPriceList(this);">
                                                                    <i class="fa fa-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="6">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("tbl_ProductImages")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 col-md-4 border pt-3">
                                        <label class="form-label custom-file-label float-start pt-2" for="image">@Language.GetString("btn_UploadImage")</label>
                                        <input accept="image/x-png,image/jpeg"
                                               type="file" class="btn btn-sm bg-gradient float-end" name="image" id="image" onchange="getURL(this)" />
                                    </div>
                                    <div class="col-12 col-md-2 mb-1">
                                        <label class="form-label">@Language.GetString("tbl_AspectRatioImage")</label>
                                        <select id="imgAspectRatio" class="form-control selectpicker" data-live-search="true"
                                                asp-items="@(new SelectList(ViewBag.ImageRatio,"Value","Text"))"></select>
                                    </div>
                                </div>
                                <div class="row" id="proGallery" style="padding:1%;">
                                    <div class="col-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>@Language.GetString("Image")</th>
                                                    <th class="d-none"></th>
                                                    <th>@Language.GetString("tbl_AspectRatioImage")</th>
                                                    <th class="d-none"></th>
                                                    <th>@Language.GetString("Title")</th>
                                                    <th>@Language.GetString("Description")</th>
                                                    <th>@Language.GetString("MainPhoto")</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="imageList">
                                                @foreach (var pic in Model.Images)
                                                {
                                                    <tr>
                                                        <td><img src='@($"../../filemanager/GetScaledImageOnWidth?path={pic.Url}&width={120}")' /></td>
                                                        <td class="d-none">@pic.ImageId</td>
                                                        <td>@pic.ImageRatio.GetDescription()</td>
                                                        <td class="d-none">@((int)@pic.ImageRatio)</td>
                                                        <td><input type="text" class="form-control txtTitle" value="@pic.Title" /></td>
                                                        <td><input type="text" class="form-control txtDesc" value="@pic.Description" /></td>
                                                        <td>
                                                            <div class="form-check d-flex justify-content-center p-0">
                                                                <input class="form-check-input rdbIsMain" type="radio" checked="@pic.IsMain" name="isMainImage" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-danger bg-gradient" imgId="@pic.ImageId" onclick="deleteFromImageList(this);">
                                                                <i class="fa fa-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddProduct" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="@Url.Content($"~/lib/cropperjs/cropper.js")"></script>
@*<script src="~/plugins/select2/js/select2.js"></script>*@

@if (CultureInfo.CurrentCulture.Name == "fa-IR")
{
    <script src="@Url.Content($"~/lib/datePicker/kamadatepicker.min.js")"></script>
}
else
{
    <script src="@Url.Content($"~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
}
 <script src="@Url.Content($"~/js/character-counter.js")"></script>
<script>
    var fileName;
    var fileContent;
    var globalSender;
    var cropper;
    var productFileContent;
    var currentFileSize;
    var currentFileName;
    var images = [];
    var cnt = @count ;
    var multiLingualArr = [];
    var counter = 1000;
    var active = '@Language.GetString("Active")';
    var inActive = '@Language.GetString("InActive")';


    $(document).ready(function () {
        debugger;
        
        $("#seoTitle").characterCounter({
             //opacity : ".8",
             max: 70,
             color: "red"
        });
        $("#seoDescription").characterCounter({
             //opacity : ".8",
             max: 150,
             color: "red"
        });
      
        var multiLingualList = @Json.Serialize(@Model.MultiLingualProperties);
        for (var i = 0; i < multiLingualList.length; i++) {
           
            var obj = {};
            obj.Tag = multiLingualList[i].tag;
            obj.MultiLingualPropertyId = multiLingualList[i].multiLingualPropertyId;
            obj.Name = multiLingualList[i].name;
            obj.LanguageId = multiLingualList[i].languageId;
            obj.LanguageName = multiLingualList[i].languageName;
            obj.SeoTitle = multiLingualList[i].seoTitle;
            obj.SeoDescription = multiLingualList[i].seoDescription;
            obj.Description = multiLingualList[i].description;
            obj.UrlFriend = multiLingualList[i].urlFriend;
            obj.BodyContent = multiLingualList[i].bodyContent;

            multiLingualArr.push(obj);
        }


            //datetimepicker
            if ("@CultureInfo.CurrentCulture.Name" == "fa-IR")
            {
                kamaDatepicker('dtpStartDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            }
            else
            {
                $('.datepicker').datepicker();
            }
       //multiselect

        if ('@Model.Images.Any()' == 'True') {

            var serverImages = @Json.Serialize(@Model.Images);
            for (var i = 0; i < serverImages.length; i++) {
                var model = {};
                model.ImageId = serverImages[i].imageId;
                model.Title = serverImages[i].title;
                model.Description = serverImages[i].description;
                model.Content = serverImages[i].content;
                model.IsMain = serverImages[i].isMain;
                model.Url = serverImages[i].url;

                images.push(model);
            }
        }

        debugger;
        if('@Model.ProductType' == "File")
        {
            $(".downloadType").removeClass("d-none");
            $(".productFileUpload").removeClass("d-none");
            switch('@Model.DownloadLimitationType')
            { 
                case "NoLimitation": //nolimitation
                   $(".timeDuration").addClass("d-none");
                   $(".downloadCnt").addClass("d-none");
                break;
                case "TimeDuration": //timeduration
                 $(".timeDuration").removeClass("d-none");
                  $(".downloadCnt").addClass("d-none");
                break;
                case "TimeDurationWithCnt": //timedurationwithcount
                 $(".timeDuration").removeClass("d-none");
                   $(".downloadCnt").removeClass("d-none");
                break;
                case "DownloadCount"://downloadedcount
                   $(".timeDuration").addClass("d-none");
                   $(".downloadCnt").removeClass("d-none");
                break;
            }
        }
        
        $("#languageId").val('@ViewBag.LangId');
         $("#languageId").selectpicker("refresh");
        $("#multiLangId").val('@ViewBag.LangId');
        $("#multiLangId").selectpicker("refresh");
        $("#currencyId").val('@ViewBag.DefCurrency');
        $("#currencyId").selectpicker("refresh");

        if ("@ViewBag.ActivePromotionId" != "-1") {
            $("#promotionId").val("@ViewBag.ActivePromotionId");
            $("#promotionId").selectpicker("refresh");
        }

        $("#btnAddProduct").click(function () {
            debugger;
            var flag = false;
            if ($("#GroupIds").val().length == 0) {
                $("span[data-val-result='GroupIds']").html('@Language.GetString("AlertAndMessage_SelectAtLeastOneItem")');
                flag = true;
            }

            if ($("#Inventory").val() == "0")
            {
                $("span[data-val-result='Inventory']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if (($("#ProductType").val() == "1" && $("#Unit_ProductUnitId").val() == "-1") || $("#Unit_ProductUnitId").val() == "" )
            {
                $("span[data-val-result='productUnitId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if ('@ViewBag.Vendors' != "-1" && $("#SellerUserId").val() == "-1") {

                $("span[data-val-result='sellerUserId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if ($("#specificationList tr").length == 0) {
                $("span[data-val-result='specifications']").html('@Language.GetString("AlertAndMessage_Specifications")');
                flag = true;
            }
            if ($("#multiLingualList tr").length == 0) {
                $("span[data-val-result='multiLinguals']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                flag = true;
            }
            if ($("#priceList tr").length == 0) {
                 $("span[data-val-result='priceList']").html('@Language.GetString("AlertAndMessage_FillPriceList")');
                flag = true;
            }

            if($("#ProductType").val() ==""  )
            {
                $("span[data-val-result='ProductType']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }

            if($("#ProductType").val() == "2" &&  $("#DownloadLimitationType").val() == "-1")
            {
                 $("span[data-val-result='DownloadLimitationType']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if($("#ProductType").val() == "2" && $("#DownloadLimitationType").val() == "2" && $("#AllowedDownloadDurationDay").val() == "" )
            {
                 $("span[data-val-result='AllowedDownloadDurationDay']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if($("#ProductType").val() == "2" && $("#DownloadLimitationType").val() == "3" &&
             ( $("#AllowedDownloadDurationDay").val() == "" || $("#AllowedDownloadCount").val() == "" ))
            {
                 $("span[data-val-result='AllowedDownloadCount']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                  $("span[data-val-result='AllowedDownloadDurationDay']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }

             if($("#ProductType").val() == "2" && $("#DownloadLimitationType").val() == "4" && $("#AllowedDownloadCount").val() == "" )
            {
                 $("span[data-val-result='AllowedDownloadCount']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }
            if($("#ProductType").val() == "2" && !$("#ProductFileContent").prop("files")[0])
            {
                 $("span[data-val-result='ProductFileContent']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                flag = true;
            }

              debugger;
                if (!flag) {
                    var dto = FillDataToSend();
                    debugger;
                    $.ajax({
                        url: "@Model.ProductId" != "" ? '@Url.Action("Edit", "Product")' : '@Url.Action("Add", "Product")'+"?isFromContent=false",
                        contentType: 'application/json',
                        data:  JSON.stringify(dto),
                        type: 'Post',
                        dataType:'json',
                        beforeSend: function () {
                           /* AddLoading($("#addProductCard"));*/
                        },
                        success: function (result) {

                            if (result.status === "Success") {
                                debugger;
                                document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                                document.getElementById('mainToastBody').classList.add('alert-success');
                                $("#toastPanel").show();
                                var bsAlert = new bootstrap.Toast($("#mainToast"));
                                bsAlert.show();
                                setTimeout(function()
                                {
                                    $("#toastPanel").hide();
                                     window.location.href = '@Url.Action("List")';
                                },
                                3000);
                            }
                            else
                            if (result.status === "ModelError")
                            {
                                    var spanErrorList = $('span[data-val-result]');
                                    if (spanErrorList.length > 1)
                                    {
                                        spanErrorList.each(function() 
                                        {
                                            $(this).html("");
                                            $(this).parent().removeClass("has-error");
                                        });
                                    } 
                                    else
                                    {
                                        spanErrorList.html("");
                                        spanErrorList.parent().removeClass("has-error");
                                    }

                                    if (result.modelStateErrors != null && result.modelStateErrors.length > 0)
                                    {
                                        debugger;
                                        result.modelStateErrors.forEach(function(value, index)
                                        {
                                            $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                            $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                        });
                                    }
                                    else
                                    {
                                            showError(result.message);
                                    }
                            }
                            else
                            if(result.status == "Error")
                            {
                                showError(result.message);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("@error");
                            alert(xhr.status);
                            alert(thrownError);
                        },
                        complete: function () {
                           /* removeLoading($("#addProductCard"));*/
                        }
                });
                }
      });

        $("#send_pic").click(function () {

            $("#uploadModal").modal("hide");
            var url = $("#galleryPic").attr("src");
            var model = {};
            var ratio="";
             var width ="";
            var height ="";
            switch($("#imgAspectRatio").val())
            {
                case "1":
                ratio ="1*1";
                 width = 120;
                height = 120;
                break;
                case "2":
                ratio = "2*1";
                 width = 120;
                height = 60;
                break;
                case "4":
                ratio="4*1";
                 width = 120;
                height = 30;
                break;
            }
            model.ImageId = counter;
            model.Content = url;
            model.ImageRatioId =
            images.push(model);
            var tr = "";

            tr = "<tr><td><img imgId='img_" + counter + "' src='" + model.Content +
                "' width='"+width+"' height='"+height+"'/></td><td style='display:none;'>" + model.ImageId +
                "</td><td>"+ratio+"</td><td class='d-none'>"+$("#imgAspectRatio").val()+"</td><td style='vertical-align:middle;'><input type='text' class='form-control txtTitle' value='' placeHolder='" + '@Language.GetString("Title")' +
                "'/></td><td style='vertical-align:middle;'><input type='text' class='form-control txtDesc' value='' placeHolder='" + '@Language.GetString("Description")' +
                "'/></td><td style='vertical-align:middle;'><div class='form-check d-flex justify-content-center p-0'><input type='radio'  name='isMainImage' class='rdbIsMain form-check-input'></div></td><td style='vertical-align:middle;'><button type='button' class='btn btn-danger bg-gradient' onclick='deleteFromImageList(this);'><i class='fa fa-trash'></i></button></td></tr>";

            $("#imageList").append(tr);
            counter = counter + 1;
        });

        $("#languageId").change(function () {

                var langId = $("#languageId").val();
                $.ajax({
                    url: '@Url.Action("GetSpecificationGroupList", "ProductSpecification")'+"/"+ langId,
                    type: 'Get',
                    dataType : 'json',
                    success: function (result) {

                        var options = "<option value='-1'> " +'@Language.GetString("AlertAndMessage_Choose")'+" </option>";
                        if (result.status === "success") {

                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });

                                $("#specGroupId").html(options);
                                $("#specGroupId").selectpicker("refresh");
                            }
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
            });
       });

        $("#specGroupId").change(function () {
           debugger;
            var langId = $("#languageId").val();
            var groupId = $("#specGroupId").val();
            if (groupId != "") {
                $.ajax({
                    url: '@Url.Action("GetSpecificationInGroupAndLang", "ProductSpecification")'+"?groupId=" + groupId + "&langId=" + langId,
                    type: 'Get',
                    dataType : 'json',
                    success: function (result) {
                        debugger;
                        var options = "<option value='-1'> " +'@Language.GetString("AlertAndMessage_Choose")'+" </option>";
                        if (result.status === "success") {

                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });

                                $("#specificationId").html(options);
                                $("#specificationId").selectpicker('refresh');
                            }
                        }
                    },
                    error: function (xhr, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
        });
        }
    });

        $("#specificationId").change(function () {
            debugger;
            var langId = $("#languageId").val();
            var specId = $("#specificationId").val();
            if (specId != "-1") {
                $.ajax({
                    url: '@Url.Action("GetSpecificationValuesInLanguage", "ProductSpecification")'+"?specId=" + specId + "&langId=" + langId,
                    type: 'Get',
                    dataType : 'json',
                    success: function (result) {

                        var options = "<option value='-1'> " +'@Language.GetString("AlertAndMessage_Choose")'+" </option>";
                        if (result.status === "success") {

                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });
                                $("#specValues").empty();
                                $("#specValues").html(options);
                                $("#specValues").selectpicker('refresh');
                            }
                        }
                    },
                    error: function (xhr, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
            });
            }
        });

        $("#ProductType").change(function(){

            var typeId = $("#ProductType").val();
            if(typeId == "2") //file
            {
                $(".downloadType").removeClass("d-none");
                $(".productFileUpload").removeClass("d-none");
            }else
            {
                $(".fileSec").addClass("d-none");
                
            }
        });


        $("#DownloadLimitationType").change(function(){
            debugger;
            var typeId = $("#DownloadLimitationType").val();
            switch(typeId)
            {
                case "1": //nolimitation
                   $(".timeDuration").addClass("d-none");
                   $(".downloadCnt").addClass("d-none");
                break;
                case "2": //timeduration
                 $(".timeDuration").removeClass("d-none");
                  $(".downloadCnt").addClass("d-none");
                break;
                case "3": //timedurationwithcount
                 $(".timeDuration").removeClass("d-none");
                   $(".downloadCnt").removeClass("d-none");
                break;
                case "4"://downloadedcount
                   $(".timeDuration").addClass("d-none");
                   $(".downloadCnt").removeClass("d-none");
                break;
            }
        });
    });

     $('#ProductFileContent').on('change', function () {
         debugger;
            var fileReader = new FileReader();
            fileReader.onload = function () {
              productFileContent = fileReader.result; 
            };
            fileReader.readAsDataURL($('#ProductFileContent').prop('files')[0]);
        });


    function onConfirmDialog() {
        $(globalSender).parent().find("td:eq(5)").text(inActive);
        appendToPriceList(tr);
    }

    function deleteFromImageList(sender) {

        var id = $(sender).attr("imgId");
        //removeFromArray
        var item = images.find(_ => _.ImageId === id);
        var index = images.indexOf(item);
        images.splice(index, 1);
        //remove in view
        $(sender).parent().parent().remove();
     }

    function addPriceToList() {

        var flag = false;
        $("span[data-val-result='priceValue']").html("");
        $("span[data-val-result='startDate']").html("");
        $("span[data-val-result='endDate']").html("");
        if ($("#priceValue").val() == "") {
            $("span[data-val-result='priceValue']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
            flag = true;
        }
        if ($("#dtpStartDate").val() == "") {
            $("span[data-val-result='startDate']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
            flag = true;
        }

        if (!flag) {
            var currencyId = $('#currencyId').val();

            var tr = "";
            if ($("#priceList").find("td:eq(1)").length > 0) {
                $("#priceList").find("td:eq(1)").each(function () {

                    if ($(this).text() == currencyId && $(this).parent().find("td:eq(4)").text() == "" &&
                        $(this).parent().find("td:eq(5)").text().trim() == active) {
                        /*confirm = false;*/

                        globalSender = this;
                        document.getElementById('confirmLabel').innerHTML = '@Language.GetString("AlertAndMessage_AreYouSure")';
                        document.getElementById('confirmBody').innerHTML = '@Language.GetString("AlertAndMessage_PricePerCurrencyUniqueness")';
                        $('#showModal').modal('show');

                    }
                });
            } else {
                appendToPriceList(tr);
            }
        }
    }

    function appendToPriceList(tr) {
         tr = "<tr style='text-align:center;'><td>" + $("#currencyId option:selected").text() +
                    "</td><td style='display:none;'>" + $('#currencyId').val() +
                    "</td><td>" + $('#priceValue').val() +
                    "</td><td style='direction:ltr;'>" + $("#dtpStartDate").val() +
                    "</td><td></td><td>" + active +
                    "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromPriceList(this);'>" +
                    "<i class='fa fa-trash' ></i></button></td></tr>";
                if ($("#priceList tr").length == 1 && $("#priceList tr")[0].children.length == 1) {
                       $("#priceList tr")[0].remove();
                     }
                    $("#priceList").append(tr);
                    $("#currencyId").val('@ViewBag.DefCurrency');
                    $("#currencyId").selectpicker("refresh");
                    $("#priceValue").val("0");
                    $("#dtpStartDate").val("");
    }

    function deleteFromPriceList(sender) {
        var tr = $(sender).parent().parent();
        $(tr).remove();
    }

    function addSpecToList() {
        debugger;
        var selectedLang = $("#LanguageId").val();

            var flag = false;
            $("span[data-val-result='languageId']").html("");
            $("span[data-val-result='specGroupId']").html("");
            $("span[data-val-result='specificationId']").html("");
            $("span[data-val-result='specValues']").html("");

            if ($("#languageId").val() == "-1") {
                $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#specGroupId").val() == "-1") {
                $("span[data-val-result='specGroupId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#specificationId").val() == "-1") {
                $("span[data-val-result='specificationId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#specValues").val().length == 0) {
                $("span[data-val-result='specValues']").html('@Language.GetString("AlertAndMessage_SelectAtLeastOneItem")');
                flag = true;
            }

            if (!flag) {
                var vals = "";
                for (var i = 0; i < $("#specValues option:selected").length; i++) {

                    vals += $("#specValues option:selected")[i].innerText + "|";
                }
                //remove last '|'
                vals = vals.substring(0, vals.length - 1);

                var tr = "<tr style='text-align:center;'><td>" + $("#languageId option:selected").text() +
                    "</td><td style='display:none;'>" + $('#languageId').val() +
                    "</td><td>" + $('#specGroupId option:selected').text() +
                    "</td><td style='display:none;'>" + $('#specGroupId').val() +
                    "</td><td>" + $("#specificationId option:selected").text() +
                    "</td><td style='display:none;'>" + $("#specificationId").val() +
                    "</td><td>" + vals +
                    "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromSpecList(this)'>" +
                    "<i class='fa fa-trash'></i></button></td></tr>";


                if ($("#specificationList tr").length == 1 && $("#specificationList tr")[0].children.length == 1) {
                    $("#specificationList tr")[0].remove();
                }

                $("#specificationList").append(tr);
                $("#languageId").val("@ViewBag.LangId");
                 $("#languageId").selectpicker("refresh");
                $("#specGroupId").val("-1");
                $("#specGroupId").selectpicker("refresh");
                $("#specificationId").val("-1");
                $("#specificationId").selectpicker("refresh");

                $("#specValues").empty();
                $("#specValues").selectpicker('refresh');

            }
     }

    function deleteFromSpecList(sender) {
        var tr = $(sender).parent().parent();
        $(tr).remove();
    }

    function FillDataToSend() {
        debugger
        var dto = {};
        dto.GroupNames = [];
        dto.GroupIds = [];
        dto.MultiLingualProperties = [];
        dto.Specifications = [];
        dto.Pictures = [];
        dto.Prices = [];
        dto.ProductId = $("#ProductId").val();
        dto.IsActive = true;
        dto.ProductCode = Number($("#ProductCode").val());

        //groupIds
        for (var i = 0; i < $("#GroupIds").val().length; i++) {
            debugger;
            dto.GroupIds.push($("#GroupIds").val()[i]);
        }

        //GroupNames
        for (var i = 0; i < $("#GroupIds option:selected").length; i++) {

            dto.GroupNames.push($("#GroupIds option:selected")[i].innerText);
        }

        //multilingualProperties
        debugger;
        dto.MultiLingualProperties = multiLingualArr;


         //downloadLimitation
        debugger;
        dto.ProductType = parseInt($("#ProductType").val());
        if($("#ProductType").val() == "2")
        {
            dto.DownloadLimitationType = parseInt($("#DownloadLimitationType").val());
        }

        if($("#DownloadLimitationType").val() == "2")
        {
            dto.AllowedDownloadDurationDay = $("#AllowedDownloadDurationDay").val();
        }
        else 
        if($("#DownloadLimitationType").val() == "3")
        {
            dto.AllowedDownloadDurationDay = $("#AllowedDownloadDurationDay").val();
            dto.AllowedDownloadCount = $("#AllowedDownloadCount").val();
        }
        else
        if($("#DownloadLimitationType").val() == "4")
        {
            dto.AllowedDownloadCount = $("#AllowedDownloadCount").val();
        }

        //ProductFile
        var file = $("#ProductFileContent").prop("files")[0];
        if(file != undefined)
        {
            dto.ProductFileContent = productFileContent
            dto.ProductFileName = file.name ;
        }
        

        //prices
        $("#priceList tr").each(function () {

            var innerModel = {};
            innerModel.CurrencyId = $(this).find("td:eq(1)").text();
            innerModel.CurrencyName = $(this).find("td:eq(0)").text();
            innerModel.PriceValue = parseFloat($(this).find("td:eq(2)").text());
            innerModel.StartDate = $(this).find("td:eq(3)").text();
            innerModel.EndDate = $(this).find("td:eq(4)").text();
            if ($(this).find("td:eq(5)").text().trim() == active)
                innerModel.IsActive = true;
            else
                innerModel.IsActive = false;
            innerModel.PriceId = "";
            innerModel.Symbol = "";
            innerModel.Prefix = "";

            dto.Prices.push(innerModel);
        });

        //specifications
        $("#specificationList tr").each(function () {
            var innerModel = {};
            innerModel.LanguageName = $(this).find("td:eq(0)").text();
            innerModel.LanguageId = $(this).find("td:eq(1)").text();
            innerModel.SpecificationGroupName = $(this).find("td:eq(2)").text();
            innerModel.SpecificationGroupId = $(this).find("td:eq(3)").text();
            innerModel.SpecificationName = $(this).find("td:eq(4)").text();
            innerModel.SpecificationId = $(this).find("td:eq(5)").text();
            innerModel.Values = $(this).find("td:eq(6)").text();

            dto.Specifications.push(innerModel);
        });

        //pictures
        $("#imageList tr").each(function () {
            debugger;
            var id = $(this).find("td:eq(1)").text();
            var item = images.find(_ => _.ImageId == id);
            index = images.indexOf(item);

            item.IsMain = $(this).find("td:eq(6) .rdbIsMain").is(":checked");
            item.Title = $(this).find("td:eq(4) .txtTitle").val();
            item.Description = $(this).find("td:eq(5) .txtDesc").val();
            item.ImageRatio = parseInt($(this).find("td:eq(2)").text());
            item.ImageRatioId = parseInt($(this).find("td:eq(3)").text());
            item.ImageId = item.ImageId.toString();
            //images[index] = item;
            dto.Pictures.push(images[index]);
        });

       


        dto.UniqueCode = $("#UniqueCode").val();
        dto.Inventory = parseInt($("#Inventory").val());
        dto.MinimumCount = parseInt($("#MinimumCount").val());
        dto.ShowInLackOfInventory = $("#ShowInLackOfInventory").is(":checked");
        if ("@ViewBag.Vendors" != "-1") {
            dto.SellerUserId = $("#SellerUserId").val();
            dto.SellerUserName = $("#SellerUserId option:selected").text();
        }
        dto.UnitId = $("#Unit_ProductUnitId").val();
        dto.PromotionId = $("#PromotionId").val();
        dto.IsPublishedOnMainDomain = $("#chbIsPublishedOnMainDomain").is(":checked");

        return dto;
    }

    function deleteFromTable(sender) {
        var tag = $(sender).attr("cnt");
        var item = multiLingualArr.find(_ => _.Tag == tag);
        var index = multiLingualArr.indexOf(item);
        multiLingualArr.splice(index, 1);

        var tr = $(sender).parent().parent();
        $(tr).remove();
    }

    function addToTable() {
        debugger;
        var flag = false;
        var selectedLang = $('#multiLangId').val();
        if(isUnique(selectedLang, 'multiLingualList', 1, '@Language.GetString("AlertAndMessage_LangUniqueness")'))
        {
             $("span[data-val-result='multiLangId']").html("");
            $("span[data-val-result='productName']").html("");

            if ($("#multiLangId").val() == "") {
                $("span[data-val-result='multiLangId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#productName").val() == "") {
                    $("span[data-val-result='productName']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if($("#urlFriend").val() == "")
            {
                $("span[data-val-result='urlFriend']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }

            if (!flag)
            {

                $.ajax({
                url: '@Url.Action("CheckUrlFriendUniqueness", "Product")'+"?id="+ '@Model.ProductId' +"&url=" + $("#urlFriend").val(),
                type: 'Get',
                dataType: 'json',
                        success: function(result) {
                            if (result.status == "Success") 
                            {
                                var obj = {};
                                var urlFriend = $("#urlFriend").val();
                                var finalUrl = "";
                                obj.LanguageId = $('#multiLangId').val();
                                obj.LanguageName = $("#multiLangId option:selected").text();
                                obj.Name = $('#productName').val();
                                obj.SeoTitle = $("#seoTitle").val();
                                obj.SeoDescription = $("#seoDescription").val();
                                obj.Description = $("#description").val();
                                if (urlFriend != "") {
                                    obj.UrlFriend = `/product/${urlFriend}`;
                                    finalUrl = `/product/${urlFriend}`;
                                }
                                var dataToSend = JSON.stringify(CKEDITOR.instances.editorCk.getData());
                                $.ajax({
                                    url: "@Url.Action("SanitizeCkEditorContent","Domain")",
                                    type: 'Post',
                                    data: dataToSend,
                                    contentType: "application/json; charset=utf-8",
                                    statusCode:
                                    {
                                        200: function(data) {

                                            //show whether this html is valid or not
                                            if (!data.isvalid) {
                                                $('#mainToastBody').html('<i class="fas fa-exclamation-triangle"></i>@Language.GetString("AlertAndMessage_InvalidEditorContent")');
                                                $('#mainToastBody').addClass('alert-danger');
                                                var toastDiv = $("#mainToast");
                                                $("#toastPanel").show();
                                                var toast = new bootstrap.Toast(toastDiv);
                                                toast.show();
                                                setTimeout(function() {
                                                    CKEDITOR.instances.editorId.setData(""), 3000
                                                });
                                            }
                                            else //it is valid
                                            {
                                                obj.BodyContent = CKEDITOR.instances.editorCk.getData();
                                                obj.Tag = cnt.toString();

                                                multiLingualArr.push(obj);

                                                var tr = "<tr style='text-align:center;'><td>" + $("#multiLangId option:selected").text() +
                                                    "</td><td style='display:none;'>" + $('#multiLangId').val() +
                                                    "</td><td>" + $('#productName').val() +
                                                    "</td><td>" + $("#seoTitle").val() +
                                                    "</td><td>" + $("#seoDescription").val() +
                                                    "</td><td>" + $("#description").val() +
                                                    "</td><td dir='ltr'>" + finalUrl +
                                                    "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' cnt='" + obj.Tag + "' onclick='deleteFromTable(this);'>" +
                                                    "<i class='fa fa-trash' ></i></button></td></tr>";

                                                if ($("#multiLingualList tr").length == 1 && $("#multiLingualList tr")[0].children.length == 1) {
                                                    $("#multiLingualList tr")[0].remove();
                                                }
                                                $("#multiLingualList").append(tr);
                                                cnt = cnt + 1;
                                                $("#multiLangId").val("@ViewBag.LangId");
                                                $("#multiLangId").selectpicker("refresh");
                                                $("#productName").val("");
                                                $("#seoTitle").val("");
                                                $("#seoDescription").val("");
                                                $("#description").val("");
                                                CKEDITOR.instances.editorCk.setData("");
                                                $("#urlFriend").val("");
                                            }
                                        }
                                    }
                                });
                            }
                            else
                            {
                                $("span[data-val-result='urlFriend']").html('@Language.GetString("AlertAndMessage_UrlFriendIsNotUnique")');
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            return false;
                        }
                   });
             }
        }
     }

    $("#uploadModal").on("shown.bs.modal", function() {

              var image = document.getElementById('croppedImg');
              $("#send_pic").attr("disabled", true);
              debugger;
                var ratio = $("#imgAspectRatio").val();
                if (cropper !== null && cropper !== undefined) {
                cropper.destroy();
               }

                cropper = new Cropper(image,
                    {
                        background: true,
                        aspectRatio: ratio,
                        viewMode: 1,
                        responsive: true,
                        rotatable: true

                    });
       });

    $('#uploadModal').on('hidden.bs.modal',
        function () {

            cropper.destroy();
            document.getElementById("image").value = "";
            $("#cropped_result").remove();
        });

    function rotatePic() {
        cropper.rotate(90);
    }

    $(document).on("click", "#crop_button",
        function () {
                var imgUrl = cropper.getCroppedCanvas({imageSmoothingEnabled: true,
                        imageSmoothingQuality: 'high' }).toDataURL('image/jpeg', 1);
            var img = document.createElement("img");
            img.setAttribute("id", "galleryPic");
            img.setAttribute("class", "img-fluid");
            var height = $("#container").attr("height");
            var croppedContainer = document.createElement("div");
            croppedContainer.setAttribute("id", "cropped_result");
            croppedContainer.setAttribute("style", "max-width:100%; max-height:100%; width: 400px; height:" + height + "; border: none");
            document.getElementById("rowContainer").appendChild(croppedContainer);
            img.setAttribute("style", "max-width:100%;max-height:100%;width: 400px;height: " + height + ";position: relative;left: 0px;border: 1px solid black");
            img.src = imgUrl;
            document.getElementById("cropped_result").innerHTML = "";
            document.getElementById("cropped_result").appendChild(img);
            $("#send_pic").attr("disabled", false);
        });

    function getURL(input)
    {
     $("#cropped_result").remove();
     if (input.files && input.files[0]) {
        var file = input.files[0];
        currentFileName = file.name;
        currentFileSize = file.size;

        if (currentFileSize <= @ViewBag.PicSize) {
            var reader = new FileReader();
            try {
                reader.readAsDataURL(file);
            } catch (e) {

            }
            reader.onload = function (e) {
                var content = e.target.result;
                //if file format is incorrect, then the 'content' won't have any src.
                if (content !== "data:") {
                    var reducedContent = content.slice(5);

                    if (reducedContent.startsWith("image")) {
                        //setTimeout(upRiseModal, 100);
                        //setTimeout(initCropper, 500);
                         $('#croppedImg').attr('src', content);
                        $("#uploadModal").modal("show");
                    } else {
                        showError('@Language.GetString("AlertAndMessage_InvalidFormat")');
                        document.getElementById("image").value = "";
                        $("#cropped_result").remove();
                    }
                } else {

                    showError('@Language.GetString("AlertAndMessage_InvalidFormat")');
                    document.getElementById("image").value = "";
                    $("#cropped_result").remove();
                }
            };
        }
        else
        {

            showError('@Language.GetString("AlertAndMessage_InvalidFileSize")');
            document.getElementById("image").value = "";
            $("#cropped_result").remove();
        }
    }
    }
</script>





