@model Arad.Portal.DataLayer.Models.Setting.ShippingSettingDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href=@Url.Content("~/lib/datePicker/kamadatepicker.css") rel="stylesheet" />
    }
    else
    {
        <link href=@Url.Content($"~/lib/bootstrap-datepicker/css/bootstrap-datepicker.standalone.css") rel="stylesheet" />
    }
    <style>
        .text-danger {
            font-size: 12px;
        }
    </style>
}

<h4>  @Language.GetString("Menu_ShippingSetting") </h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="card" id="addShippingSettingCard">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.ShippingSettingId) ?
                     Language.GetString("Edit_ShippingSetting") : Language.GetString("Add_ShippingSetting"))
                </h5>
            </div>

            <div class="card-body">
                <input type="hidden" value="@Model.ShippingSettingId" asp-for="ShippingSettingId" />
              

                  @if (@ViewBag.IsSysAcc)
                    {
                        <div class="row">
                            <div class="form-group col-12 col-md-3">
                                <label asp-for="AssociatedDomainId" class="form-label">@Language.GetString("AssociatedDomain")</label>
                                <select class="form-control selectpicker" data-live-search="true"
                                    asp-for="@Model.AssociatedDomainId" asp-items="@(new SelectList(ViewBag.Domains,"Value","Text", Model.AssociatedDomainId))">
                                </select>
                                <span data-val-result="AssociatedDomainId" class="text-danger"></span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <input type="hidden" value="@Model.AssociatedDomainId" asp-for="AssociatedDomainId" />
                    }

                <div class="row">
                    <div class="form-group col-md-3">
                        <label class="form-label" asp-for="CurrencyId">@Language.GetString("Currency")</label><br />
                        <select class="form-control selectpicker" asp-for="CurrencyId" data-live-search="true" asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text", Model.CurrencyId))">
                        </select>
                        <span data-val-result="currencyId" class="text-danger"></span>
                    </div>
                   
                </div>

                <div class="row mt-2">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("tbl_ShippingTypes")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="form-group col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_ShippingType")</label>
                                        <select class="form-control selectpicker" id="shippingTypeId" data-live-search="true" asp-items="@(new SelectList(ViewBag.ShippngTypes,"Value","Text"))">
                                        </select>
                                        <span data-val-result="shippingTypeId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-md-2">


                                        <div class="form-group col-12 col-md-4 pt-1 pb-2 m-auto">
                                            <div class="form-check d-inline-block pt-3">
                                                <input class="form-check-input" type="checkbox" id="chbIsFixedExpense">
                                                <label class="form-check-label" for="chbIsFixedExpense">
                                                    @Language.GetString("tbl_HasFixedExpense")
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_FixedExpenseValue")</label>
                                        <input type="number" class="form-control" id="fixedExpenseValue" disabled />
                                        <span data-val-result="fixedExpenseValue" class="text-danger"></span>
                                    </div>
                                   @* <div class="form-group col-md-3">
                                        <label class="form-label">@Language.GetString("tbl_Provider")</label>
                                        <select class="form-control selectpicker" id="ProviderId" data-live-search="true"
                                                asp-items="@(new SelectList(ViewBag.Providers,"Value","Text"))">
                                        </select>
                                        <span data-val-result="ProviderId" class="text-danger"></span>
                                    </div>*@
                                    <div class="form-group col-md-1" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-success btn-sm bg-gradient" onclick="addToList();">
                                                <i class="fa fa-plus pt-1"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-md-3">
                                        <span data-val-result="shippingList" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-md-12 mt-2">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("tbl_ShippingType")</th>
                                                    <th class="d-none"></th>
                                                    <th>@Language.GetString("tbl_HasFixedExpense")</th>
                                                    <th>@Language.GetString("tbl_FixedExpenseValue")</th>
                                                  @*  <th>@Language.GetString("tbl_Provider")</th>*@
                                                    @*<th class="d-none"></th>*@
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="shippingList">
                                                @if (Model.AllowedShippingTypes.Count != 0)
                                                {
                                                    @foreach (var item in Model.AllowedShippingTypes)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@item.ShippingTypeText</td>
                                                            <td class="d-none">@item.ShippingTypeId</td>
                                                            <td>@(item.HasFixedExpense ? Language.GetString("Yes") : Language.GetString("No"))</td>
                                                            <td>@($"{@item.FixedExpenseValue} {Model.CurrencySymbol}")</td>
                                                            @*<td>@item.ProviderName</td>
                                                            <td class="d-none">@item.ProviderId</td>*@
                                                            <td>
                                                                <button type="button" class="btn btn-danger bg-gradient" onclick="deleteFromList(this);">
                                                                    <i class="fa fa-trash" style="position: relative;padding:3px;"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="7">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-3">
                        <label class="form-label" asp-for="@Model.ShippingCoupon.FromInvoiceExpense">@Language.GetString("tbl_FreeShipping")</label>
                        <input type="number" class="form-control" asp-for="@Model.ShippingCoupon.FromInvoiceExpense"
                               value="@Model.ShippingCoupon.FromInvoiceExpense" min="0" />
                        <span data-val-result="fromInvoiceExpense" class="text-danger"></span>
                    </div>
                   @* <div class="form-group col-md-3">
                        <label class="form-label" asp-for="@Model.ShippingCoupon.ShippingExpense">@Language.GetString("tbl_ShippingExpense")</label>
                        <input type="number" class="form-control" asp-for="@Model.ShippingCoupon.ShippingExpense"
                               value="@Model.ShippingCoupon.ShippingExpense" min="0" />
                        <span data-val-result="shippingExpense" class="text-danger"></span>
                    </div>*@
                    <div class="form-group col-md-3">
                        <label class="form-label">@Language.GetString("StartDate")</label>
                        
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpStartDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" data-provide="datepicker">
                                <input type="text" class="form-control" id="dtpStartDate">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        }
                        <span data-val-result="startDate" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-3">
                        <label class="form-label">@Language.GetString("EndDate")</label>
                        
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpEndDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" data-provide="datepicker">
                                <input type="text" class="form-control" id="dtpEndDate">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        }
                        <span data-val-result="endDate" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddShippingSetting" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="@Url.Content($"~/lib/datePicker/kamadatepicker.min.js")"></script>
    }
    else
    {
        <script src="@Url.Content($"~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
    }

    <script>
    var currentCurrencySymbol = "";
        $(document).ready(function () {

            if ("@Model.ShippingSettingId" != "")
            {
                LoadData();
            }

             //datetimepicker
            if ("@CultureInfo.CurrentCulture.Name" == "fa-IR")
            {
                kamaDatepicker('dtpStartDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
                kamaDatepicker('dtpEndDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            }
            else
            {
                $('.datepicker').datepicker();
            }


            $("#CurrencyId").change(function () {
                if ($("#CurrencyId").val() != "" && $("#CurrencyId").val() != "-1") {
                    var currencyId = $("#CurrencyId").val();
                    $.ajax({
                        url: '@Url.Action("GetSymbolOfCurrency", "Shipping")'+ `?currencyId=${currencyId}`,
                        /*data: dataModel,*/
                        contentType: 'application/json',
                        type: 'Get',
                        success: function (result) {
                            currentCurrencySymbol = result.symbol;

                        }
                    });
                }
            });


            $("#chbIsFixedExpense").click(function () {
                debugger;
                if ($(this).is(":checked"))
                {
                    $("#fixedExpenseValue").removeAttr("disabled");
                    $("#ProviderId").attr("disabled", "disabled");
                } else
                {
                    $("#ProviderId").removeAttr("disabled")
                    $("#fixedExpenseValue").attr("disabled", "disabled");
                }
            });
        $("#btnAddShippingSetting").click(function () {
            debugger;
                var flag = false;
                if ($("#CurrencyId").val() == "" || $("#CurrencyId").val() == "-1" )
                {
                    $("span[data-val-result='CurrencyId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                    flag = true;
                }

                if ($("#shippingList tr").length == 0) {
                    $("span[data-val-result='shippingList']").html('@Language.GetString("AlertAndMessage_FillShippingWay")');
                    flag = true;
                }

            if ($("#ShippingCoupon_FromInvoiceExpense").val() != "0" ) {
                    if($("#dtpStartDate").val() == "")
                    {
                            $("span[data-val-result='startDate']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                            flag = true;
                    }
                }
                if (!flag) 
                {
                    var dto = FillDataToSend();
                    $.ajax({
                        url: "@Model.ShippingSettingId" != "" ? '@Url.Action("Edit", "Shipping")' : '@Url.Action("Add", "Shipping")',
                    /*data: dataModel,*/
                    contentType: 'application/json',
                    data: JSON.stringify(dto),
                type: 'Post',
                beforeSend: function () {
                    debugger;
                    /*AddLoading($("#addShippingSettingCard"));*/
                },
                success: function (result) {
                    debugger;
                    if (result.status === "Success")
                    {
                       
                            document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            $("#toastPanel").show();
                             var bsAlert = new bootstrap.Toast($("#mainToast"));
                            bsAlert.show();
                            setTimeout(function()
                            {
                                $("#toastPanel").hide();
                                 window.location.href = '@Url.Action("List")';
                            },
                            1500);
                    }else
                    if (result.status === "ModelError")
                    {
                            var spanErrorList = $('span[data-val-result]');
                            if (spanErrorList.length > 1) {
                                spanErrorList.each(function() {
                                    $(this).html("");
                                    $(this).parent().removeClass("has-error");
                                });
                            } 
                            else
                            {
                                spanErrorList.html("");
                                spanErrorList.parent().removeClass("has-error");
                            }
                            if (result.modelStateErrors != null && result.modelStateErrors.length > 0)
                            {
                                debugger;
                                        result.modelStateErrors.forEach(function(value, index) 
                                        {
                                        $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                        $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                        });
                            }
                            else
                            {
                            showError(result.message);
                            }
                     }else if(result.status == "Error")
                     {
                         showError(result.message);
                     }
                },
                @*error: function (xhr, ajaxOptions, thrownError) {
                    alert("@error");
                    alert(xhr.status);
                    alert(thrownError);
                },*@
                complete: function () {
                    //removeLoading($("#addShippingSettingCard"));
                }
                });
                }

        });
        });


    function LoadData()
    {
        @*if ('@Model.ShippingCoupon' != "") {*@
            if ("@Model.ShippingCoupon.PersianStartDate" != "") {
                $("#dtpStartDate").val('@Model.ShippingCoupon.PersianStartDate');
            }
            if ("@Model.ShippingCoupon.PersianEndDate" != "") {
                $("#dtpEndDate").val('@Model.ShippingCoupon.PersianEndDate');
            }
      /*  }*/

    }
    
   

        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.AllowedShippingTypes = [];
            obj.ShippingCoupon = {};
            obj.ShippingSettingId = $("#ShippingSettingId").val();
            obj.AssociatedDomainId = $("#AssociatedDomainId").val();
            obj.DomainName = $("#AssociatedDomainId option:selected").text();
            
            obj.CurrencyId = $("#CurrencyId").val();

            //shipping
            $("#shippingList tr").each(function () {

                var innerModel = {};
                innerModel.ShippingTypeText = $(this).find("td:eq(0)").text();
                innerModel.ShippingTypeId = $(this).find("td:eq(1)").text();
                if ($(this).find("td:eq(2)").text() == '@Language.GetString("Yes")')
                {
                    innerModel.HasFixedExpense = true;
                } else
                {
                    innerModel.HasFixedExpense = false;
                }
                innerModel.FixedExpenseValue = parseFloat($(this).find("td:eq(3)").text().split(" ")[0]);
                innerModel.ProviderId = $(this).find("td:eq(5)").text();
                obj.AllowedShippingTypes.push(innerModel);

            });

            if ($("#ShippingCoupon_FromInvoiceExpense").val() != "0") {
                obj.ShippingCoupon.FromInvoiceExpense = parseFloat($("#ShippingCoupon_FromInvoiceExpense").val());
                obj.ShippingCoupon.ShippingExpense = parseFloat(0);
                if('@CultureInfo.CurrentCulture.Name.ToLower()' == "fa-ir")
                {
                    if ($("#dtpStartDate").val() != "")
                    {
                        debugger;
                        obj.ShippingCoupon.PersianStartDate = $("#dtpStartDate").val();
                    }
                    if ($("#dtpEndDate").val() != "")
                    {
                        debugger;
                        obj.ShippingCoupon.PersianEndDate = $("#dtpEndDate").val();
                    }
                }else
                {
                    obj.obj.ShippingCoupon.StartDate = $("#dtpStartDate").val();
                    obj.obj.ShippingCoupon.EndDate = $("#dtpEndDate").val();
                }
                
            }
            return obj;
        }

       function addToList() {
           debugger;
        var flag = false;
        $("span[data-val-result='shippingTypeId']").html("");
        $("span[data-val-result='fixedExpenseValue']").html("");
        $("span[data-val-result='ProviderId']").html("");
           if ($("#shippingTypeId").val() == "" || $("#shippingTypeId").val() == "-1") {
               $("span[data-val-result='shippingTypeId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
            flag = true;
           }
           if ($("#chbIsFixedExpense").is(":checked") && $("#fixedExpenseValue").val() == "") {
               $("span[data-val-result='fixedExpenseValue']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
               flag = true;
           }
           //else
           //    if (!$("#chbIsFixedExpense").is(":checked") &&
           //    ($("#ProviderId").val() == "" || $("#ProviderId").val() == "-1")) {
           //    $("span[data-val-result='ProviderId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
           //    flag = true;
           //}


        if (!flag) {
           appendToList();
        }
    }

    function appendToList() {
        debugger;
        var col = "";
        //var providerName = "";
        //var providerId = "";
        //if($("#ProviderId").val() != "-1")
        //{
        //    providerId = $("#ProviderId").val();
        //    providerName = $("#ProviderId option:selected").text();
        //}
       

        if (currentCurrencySymbol == "")
        {
            currentCurrencySymbol = '@Model.CurrencySymbol';
        }
        debugger;
        if ($("#chbIsFixedExpense").is(":checked"))
            col = '@Language.GetString("Yes")';
        else
            col = '@Language.GetString("No")';
        tr = "<tr style='text-align:center;'><td>" + $("#shippingTypeId option:selected").text() +
            "</td><td class='d-none'>" + $('#shippingTypeId').val()  +
            "</td><td>" + col +
            "</td><td>" + `${$("#fixedExpenseValue").val()} ${currentCurrencySymbol}` +
            "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromList(this);'>" +
            "<i class='fa fa-trash' ></i></button></td></tr>";
        if ($("#shippingList tr").length == 1 && $("#shippingList tr")[0].children.length == 1) {
            $("#shippingList tr")[0].remove();
                     }
        $("#shippingList").append(tr);

        $("#fixedExpenseValue").val("0");
    }

    function deleteFromList(sender) {
        var tr = $(sender).parent().parent();
        $(tr).remove();
    }
    </script>
}




