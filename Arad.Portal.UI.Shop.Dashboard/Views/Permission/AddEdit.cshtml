@model Arad.Portal.DataLayer.Models.Permission.UserPermissionViewModel
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <link href="@Url.Content($"~/lib/bootstrap-iconpicker/css/bootstrap-iconpicker.css")" rel="stylesheet" />
    <style>
        .text-danger {
            font-size: 12px;
        }

    </style>
}


<h4>  @Language.GetString("Menu_Permissions") </h4>
<hr />
@*<div class="row">
    <div class="col-md-12">
        <div class="card" id="addPermissionCard">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">@(Model.IsEditView ? Language.GetString("EditPermissionPart_Title") : Language.GetString("AddPermissionPart_Title"))</h5>
            </div>
            <form asp-controller="Permission" role="form" asp-action="Save" id="addEditPermissionFrm" method="post">
                @{
                    if (Model.IsEditView)
                    {
                        <input type="hidden" value="@Model.Id" data-val="true" asp-for="Id">
                        <input type="hidden" value="@Model.IsEditView" data-val="true" asp-for="IsEditView" />
                    }
                }
                <div class="card-body" id="addEditPermissionCard">
                    <div class="row">
                        <div class="form-group col-md-3">

                            <label class="form-label" asp-for="Title">@Language.GetString("Per_PermissionTitle")</label>
                            <input type="text" class="form-control" asp-for="Title" placeholder=" ">
                            <span data-val-result="Title" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3" id="TypeSelect">
                            <label class="form-label" asp-for="Type">@Language.GetString("Per_PermissionType")</label>
                            <select asp-for="Type" class="form-control selectpicker" name="Type" asp-items="Html.GetEnumSelectList<Enums.PermissionType>()" data-live-search="true">
                            </select>
                            <span data-val-result="Type" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3" id="MethodSelect">
                            <label class="form-label" asp-for="Method">@Language.GetString("Per_PermissionMethod")</label>
                            <select asp-for="Method" class="form-control selectpicker" data-live-search="true" name="Method" asp-items="Html.GetEnumSelectList<Enums.PermissionMethod>()">
                            </select>
                            <span class="text-danger" data-val-result="Method"></span>
                        </div>
                        <div class="form-group col-md-3" id="MenuIdOfModulePart">
                            <label class="form-label" asp-for="MenuIdOfModule">@Language.GetString("Per_MenuIdOfModule")</label>
                            <select asp-for="MenuIdOfModule" class="form-control selectpicker" name="MenuIdOfModule" data-live-search="true">
                            </select>
                            <span class="text-danger" data-val-result="MenuIdOfModule"></span>
                        </div>

                    </div>
                    <div class="row">
                        <div class="form-group col-md-6" id="RoutePer">
                            <label class="form-label" asp-for="Routes">@Language.GetString("Per_Routes")</label>
                            <textarea class="form-control" asp-for="Routes"
                                      dir="ltr" placeholder="@Language.GetString("Menu_RoutePlaceHolder")">@Model.Routes</textarea>
                            <span class="text-danger" data-val-result="Routes"></span>
                        </div>
                        <div class="form-group col-md-4" id="ParentMenuSelect" style="display:none;">
                            <label class="form-label" asp-for="ParentMenuId">@Language.GetString("Per_ParentMenuId")</label>
                            <select asp-for="ParentMenuId" class="form-control selectpicker" data-live-search="true">
                            </select>
                            <span class="text-danger" data-val-result="ParentMenuId"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-3" id="IconPart">
                            <label class="form-label" asp-for="Icon">@Language.GetString("Per_Icon")</label>
                            <input type="text" class="form-control" asp-for="Icon" dir="ltr">
                            <span class="text-danger" data-val-result="Icon"></span>
                        </div>
                        <div class="form-group col-md-3" id="PriorityPart">
                            <label class="form-label" asp-for="Priority">@Language.GetString("Per_Priority")</label>
                            <input type="number" class="form-control" asp-for="Priority" dir="ltr" value="1" min="1">
                            <span class="text-danger" data-val-result="Priority"></span>
                        </div>
                        <div class="form-group col-md-3" id="ClientAddressPart">
                            <label class="form-label" asp-for="ClientAddress">@Language.GetString("Per_ClientAddress")</label>
                            <input type="tel" class="form-control" asp-for="ClientAddress" dir="ltr">
                            <span class="text-danger" data-val-result="ClientAddress"></span>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-4 offset-md-8 col-12">
                            <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                            <input type="submit" id="btnAddMenu" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>*@


@section Scripts{
    <script>
        $(document).ready(function () {
           
            MenusSelectList(1);
            MenusSelectList(2);

            ChangingType();

          $("#Type").change(function () {

               /* alert("fire;")*/
                ChangingType();
            });

              $("#addEditPermissionFrm").submit(function (e) {
            debugger;
            e.preventDefault();
            var form = $(this).serialize();
            $.ajax({
                url: $(this).attr('action'),
                data: form,
                type: 'Post',
                beforeSend: function () {
                    debugger;
                  /*  AddLoading($("#addEditPermissionCard"));*/
                },
                success: function (result) {
                    debugger;
                   /* $("#loading").removeClass('is-active');*/
                    if (result.status === "Success") {
                      
                        document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            $("#toastPanel").show();
                             var bsAlert = new bootstrap.Toast($("#mainToast"));
                            bsAlert.show();
                            setTimeout(function()
                            {
                                $("#toastPanel").hide();
                                 window.location.href = '@Url.Action("List")';
                            },
                            3000);
                    }
                    if (result.status === "ModelError") {
                        var spanErrorList = $('span[data-val-result]');
                        if (spanErrorList.length > 1) {
                            spanErrorList.each(function() {
                                $(this).html("");
                                $(this).parent().removeClass("has-error");
                            });
                        } else {
                            spanErrorList.html("");
                            spanErrorList.parent().removeClass("has-error");
                        }

                        if (result.modelStateErrors !== null) {
                            result.modelStateErrors.forEach(function(value, index) {

                                $('[data-val-result=' + value.key + ']').html(value.errorMessage);
                                $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                            });
                        }
                    }
                },
                //error: function (xhr, ajaxOptions, thrownError) {
                //    alert("@error");
                //    alert(xhr.status);
                //    alert(thrownError);
                //},
                complete: function () {
                   /* removeLoading($("#addEditPermissionCard"));*/
                }
            });
        });
        });

        function ChangingType() {

            switch ($("#Type").val()) {
                case "0":

                    $("#MethodSelect").css("display", "block");
                    $("#PriorityPart").css("display", "none");
                    $("#IconPart").css("display", "none");
                    $("#MenuIdOfModulePart").css("display", "block");
                    $("#ParentMenuSelect").css("display", "none");
                    $("#RoutePer").css("display", "block");
                    $("#ClientAddressPart").css("display", "none");
                    break;
                case "1":
                    $("#MethodSelect").css("display", "none");
                    $("#PriorityPart").css("display", "block");
                    $("#IconPart").css("display", "block");
                    $("#MenuIdOfModulePart").css("display", "none");
                    $("#ParentMenuSelect").css("display", "block");
                    $("#RoutePer").css("display", "block");
                    $("#ClientAddressPart").css("display", "block");
                    break;
                case "2":
                    $("#MethodSelect").css("display", "none");
                    $("#PriorityPart").css("display", "block");
                    $("#IconPart").css("display", "block");
                    $("#MenuIdOfModulePart").css("display", "none");
                    $("#ParentMenuSelect").css("display", "none");
                    $("#RoutePer").css("display", "block");
                    $("#ClientAddressPart").css("display", "none");
                    break;
            }
        }
        function MenusSelectList(typemenu) {

                data = { typeMenu: typemenu };
                $.ajax({
                    url: "@Url.Action("MenusSelectList")",
                    type: 'Get',
                    data: data,
                    success: function (result) {
                        var options = "<option value='-1'>انتخاب کنید..</option>";
                        if (result.status === "success") {
                            if (result.data.length != 0) {
                                (result.data).forEach(function(item) {
                                    var op = "<option value='" + item.permissionId + "'>" + item.title + "</option>";
                                    options += op;
                                });
                            }

                        } else if (result.status === "error") {


                        }
                        if (typemenu === 1) {
                            $("#MenuIdOfModule").html(options);
                             if ('@Model.IsEditView' == 'True') {
                                if ('@Model.MenuIdOfModule' != '-1') {
                                    $("#MenuIdOfModule").val('@Model.MenuIdOfModule');
                                }
                               }
                        } else if (typemenu === 2) {
                            $("#ParentMenuId").html(options);
                             if ('@Model.IsEditView' == 'True') {
                            if ('@Model.ParentMenuId' != '-1') {
                                $('#ParentMenuId').val('@Model.ParentMenuId');
                            }
                         }
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert("error");
                        alert(xhr.status);
                        alert(thrownError);
                    },
                    complete: function () {
                       /* removeLoading($("#addUserCard"));*/
                    }
                });
            }
    </script>
}
