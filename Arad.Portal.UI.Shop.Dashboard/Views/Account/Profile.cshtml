@model Arad.Portal.DataLayer.Models.User.UserProfileDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}

@section Styles
    {
    <link href="~/lib/intl-tel-input/css/intlTelInput.css" rel="stylesheet" />
    <link href="~/lib/cropperjs/cropper.css" rel="stylesheet" />


    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="~/lib/datePicker/kamadatepicker.css" rel="stylesheet" />
    }

    <style>
        .iti--separate-dial-code { width: 100% }

        #bd-root-userBirthDate { width: 100% }

        #bd-root-firmEstablishDate { width: 100% }

        #bd-root-ceoBirthDate { width: 100% }
        .warp {
             word-wrap: break-word;
        }
    </style>
}

    <div aria-hidden="true" aria-labelledby="uploadModalLabel" class="modal fade" id="uploadModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header bg-light">
                    <h5 class="modal-title" id="uploadModalLabel">
                        @Language.GetString("CropImage")
                    </h5>
                    <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row justify-content-center align-items-center" id="rowContainer">
                        <div id="container" style="display: inline; height: 400px; max-width: 100%; position: relative; width: 400px;">
                            <img alt="your image" class="img-fluid" hidden="hidden" id="croppedImg" onchange="getURL(this)" src="#"
                             style="border: 1px solid black; height: 356px; max-width: 100%; width: 356px;" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success" id="send_pic" type="button">
                        @Language.GetString("btn_Approved")
                    </button>
                    <button class="btn btn-primary" id="crop_button">
                        @Language.GetString("btn_Crop")
                    </button>
                    <button class="btn btn-default" style="background-color: crimson;color: white;border: 1px solid crimson" onclick="rotatePic()">
                        <i style="margin-left: 5px;font-size:13px" class="fas fa-retweet"></i>@Language.GetString("btn_Rotate")
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="card pb-0 rounded-3 shadow-sm">
            <div class="card-header py-2 bg-secondary bg-gradient bg-opacity-10">
                <p class="my-0 fw-bold col fs-5">
                    <i class="fa fa-user fs-3"></i>
                    @Language.GetString("EditUserProfile")
                </p>
            </div>

            <div class="card-body px-4 ">

                <form asp-action="Profile" class="row g-3 p-2" id="upsertForm" method="post">

                    <input asp-for="UserID" type="hidden" value="@Model.UserID" />

                    <input id="fileContent" type="hidden" value="@Model.FileContent" />

                    <input id="fileName" type="hidden" value="@Model.FileName" />


                    <div class="row">
                        <div class="col-8 col-md-4">
                            <div class="card" style="height: 325px !important">
                                <div class="card-header bg-primary bg-gradient bg-opacity-10">
                                    @Language.GetString("ProfilePic")
                                </div>
                                <div class="card-body">
                                    <div class="d-flex justify-content-center p-2">
                                        <img id="userProfileImage"  style="cursor: pointer"
                                         imgid="@(!string.IsNullOrWhiteSpace(@Model.ProfilePhoto.ImageId) ? @Model.ProfilePhoto.ImageId : "-1")"
                                         class="rounded-circle" src="@(!string.IsNullOrWhiteSpace(@Model.ProfilePhoto.Url) ? @Url.Content($"~/GetScaledImageOnWidth?path={@Model.ProfilePhoto.Url}&width={230}") : "/imgs/NoImage.png")" alt="user Image">
                                    </div>
                                    <div class="text-center">
                                        <label for="image" style="cursor: pointer;color: red;">
                                            @Language.GetString("ChangeImage")
                                        </label>
                                        <input accept="image/x-png,image/jpeg" id="image" name="image" onchange="getURL(this)" style="opacity: 0;
                                       position: absolute; z-index: -1;" type="file">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="card">
                                <div class="card-header bg-primary bg-gradient bg-opacity-10">
                                    @Language.GetString("Title_BasicInfo")
                                </div>
                                <div class="card-body">
                                    <div class="row  g-3">

                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.Gender" class="form-label">
                                                <span class="text-danger pe-1">*</span>@Language.GetString("AlertAndMessage_Gender")
                                            </label>
                                            <select asp-for="@Model.Gender" class="form-select">
                                                <option selected="@(Model.Gender == Arad.Portal.DataLayer.Models.User.Gender.Male ? null : "selected")" value="1">
                                                    @Arad.Portal.DataLayer.Models.User.Gender.Male.GetDescription()
                                                </option>
                                                <option selected="@(Model.Gender == Arad.Portal.DataLayer.Models.User.Gender.Female ? null : "selected")" value="2">
                                                    @Arad.Portal.DataLayer.Models.User.Gender.Female.GetDescription()
                                                </option>
                                            </select>
                                        </div>

                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.FirstName" class="form-label">
                                                <span class="text-danger pe-1">*</span>@Language.GetString("User_FirstName")
                                            </label>
                                            <input asp-for="@Model.FirstName" class="form-control" type="text" value="@Model.FirstName" />
                                            <span data-val-result="FirstName" class="text-danger form-validation-alert">
                                            </span>
                                        </div>

                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.LastName" class="form-label">
                                                <span class="text-danger pe-1">*</span>@Language.GetString("User_LastName")
                                            </label>
                                            <input asp-for="@Model.LastName" class="form-control" type="text" value="@Model.LastName" />
                                            <span data-val-result="LastName" class="text-danger form-validation-alert">
                                            </span>
                                        </div>

                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.FatherName" class="form-label">
                                                @Language.GetString("User_FatherName")
                                            </label>
                                            <input asp-for="FatherName" class="form-control" type="text" value="@Model.FatherName" />
                                        </div>

                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.NationalCode" class="form-label">
                                                <span class="text-danger pe-1">*</span>@Language.GetString("User_NationalCode")
                                            </label>
                                            <input asp-for="@Model.NationalCode" class="form-control" type="text" value="@Model.NationalCode" />
                                            <span data-val-result="NationalCode" class="text-danger form-validation-alert">
                                            </span>
                                        </div>
                                        <div class="col-12 col-md-4">
                                            <label asp-for="@Model.CompanyName" class="form-label">
                                                @Language.GetString("User_CompanyName")
                                            </label>
                                            <input asp-for="@Model.CompanyName" class="form-control" type="text" value="@Model.CompanyName" />
                                            <span data-val-result="CompanyName" class="text-danger form-validation-alert">
                                            </span>
                                        </div>


                                        <div class="col-12 col-md-6">
                                            <label class="form-label" for="userBirthDate">
                                                @Language.GetString("User_BirthDate")
                                            </label>
                                            @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                                            {
                                                <div class="input-group">
                                                    <span class="input-group-text">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                    <input autocomplete="off" id="dtpBirthDate" type="text" class="form-control" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="input-group date" data-provide="datepicker">
                                                    <input type="text" class="form-control" id="dtpBirthDate">
                                                    <span class="input-group-text">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                </div>
                                            }
                                        <span data-val-result="BirthDate" class="text-danger form-validation-alert">
                                        </span>
                                    </div>

                                    <div class="form-group col-6 col-md-3">
                                        <label class="form-label">@Language.GetString("LanguageName")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="LanguageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))" data-live-search="true">
                                        </select>
                                        <span data-val-result="LanguageId" class="text-danger"></span>
                                    </div>

                                    <div class="form-group col-6 col-md-3">
                                        <label class="form-label">@Language.GetString("Currency")</label>
                                        <select class="form-control selectpicker" data-live-search="true" id="CurrenyId" asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text"))" data-live-search="true">
                                        </select>
                                        <span data-val-result="CurrenyId" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row pt-2">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5>
                                    @Language.GetString("Profile_BankAccountInfoes")
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-4">
                                        <label class="form-label" for="accountNumber">@Language.GetString("User_AccountNumber")</label>
                                        <input type="text" class="form-control" id="accountNumber" name="accountNumber" placeholder=" " value="@Model.BankAccount.AccountNumber">
                                        <span data-val-result="accountNumber" class="text-danger"></span>
                                    </div>
                                    <div class="col-4">
                                        <label class="form-label" for="accountName">@Language.GetString("User_AccountName")</label>
                                        <input type="text" class="form-control" id="accountName" name="accountName" placeholder=" " value="@Model.BankAccount.AccountName">
                                        <span data-val-result="accountName" class="text-danger"></span>
                                    </div>
                                    <div class="col-4">
                                        <label class="form-label" for="Iban">@Language.GetString("User_Iban")</label>
                                        <input type="text" class="form-control" id="Iban" name="Iban" placeholder=" " value="@Model.BankAccount.Iban">
                                        <span data-val-result="Iban" class="text-danger"></span>
                                    </div>
                                    <div class="col-4">
                                        <label class="form-label" for="BankName">@Language.GetString("User_BankName")</label>
                                        <input type="text" class="form-control" id="BankName" name="BankName" placeholder=" " value="@Model.BankAccount.BankName">
                                        <span data-val-result="BankName" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row pt-2">
                    <div class="col-12">
                        <div class="card">

                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6 col-md-4">
                                        <label asp-for="UserName" class="form-label">
                                            <span class="text-danger pe-1">*</span>@Language.GetString("User_UserName")
                                        </label>
                                        <input asp-for="UserName" autocomplete="off" class="form-control" dir="ltr" disabled="disabled" type="text" value="@Model.UserName" />
                                        <span data-val-result="UserName" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row pt-2">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header bg-primary bg-gradient bg-opacity-10">
                                @Language.GetString("User_AddressInfoes")
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-6 col-md-4">
                                        <label for="AddressCountryId" class="form-label">
                                            <span class="text-danger pe-1">*</span>@Language.GetString("Profile_Country")
                                        </label>
                                        <select id="AddressCountryId" asp-items="@(new SelectList(ViewBag.Countries,"Value","Text"))" class="form-control selectpicker">
                                        </select>
                                        <span data-val-result="CountryId" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="col-6 col-md-4">
                                        <label for="AddressProvinceId" class="form-label">
                                            <span class="text-danger pe-1">*</span>@Language.GetString("Profile_Province")
                                        </label>
                                        <select id="AddressProvinceId" class="form-control selectpicker">
                                        </select>
                                        <span data-val-result="ProvinceId" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="col-6 col-md-4">
                                        <label for="AddressCityId" class="form-label">
                                            <span class="text-danger pe-1">*</span>@Language.GetString("Profile_City")
                                        </label>
                                        <select class="form-control selectpicker" id="AddressCityId">
                                        </select>
                                        <span data-val-result="CityId" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="col-6 col-md-4">
                                        <div class="form-check m-auto d-inline-block pt-3">
                                            <input class="form-check-input" type="checkbox" id="isMainAddress">
                                            <label class="form-check-label" for="isMainAddress">
                                                @Language.GetString("Profile_IsMainAddress")
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label" for="AddressType">@Language.GetString("Profile_AddressType")</label><br />
                                        <select class="form-control selectpicker" id="AddressTypeId" data-live-search="true"
                                                asp-items="@(new SelectList(ViewBag.AddressTypes,"Value","Text"))">
                                        </select>
                                        <span data-val-result="AddressType" class="text-danger"></span>
                                    </div>

                                    <div class="col-6 col-md-4">
                                        <label>@Language.GetString("Profile_ZipCode") : </label>
                                        <input id="PostalCode" name="PostalCode" class="form-control" type="text" dir="rtl" maxlength="10" minlenght="10" />
                                        <span data-val-result="PostalCode" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="col-6 col-10">
                                        <label>@Language.GetString("Profile_Address1") : </label>
                                        <input id="Address1" name="Address1" class="form-control" type="text" dir="rtl" />
                                        <span data-val-result="Address1" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="col-10">
                                        <label>@Language.GetString("Profile_Address2") : </label>
                                        <input id="Address2" name="Address2" class="form-control" type="text" dir="rtl" />
                                        <span data-val-result="Address2" class="text-danger form-validation-alert">
                                        </span>
                                    </div>
                                    <div class="form-group col-1" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addAddress();">
                                                <i class="fa fa-plus pt-1"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6 col-md-3 offset-md-3">
                                        <span data-val-result="Addresses" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row" style="margin-top:1%;">
                                    <div class="col-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("Profile_Country")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("Profile_Province")</th>
                                                    <th style="display:none;"></th>
                                                    <th>@Language.GetString("Profile_City")</th>
                                                    <th style="display:none"></th>
                                                    <th style="">@Language.GetString("Profile_IsMainAddress")</th>
                                                    <th>@Language.GetString("Profile_AddressType")</th>
                                                    <th style="display:none"></th>
                                                    <th>@Language.GetString("Profile_ZipCode")</th>
                                                    <th>@Language.GetString("Profile_Address1")</th>
                                                    <th>@Language.GetString("Profile_Address2")</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="addressList">
                                                @if (Model.Addresses.Any())
                                                {
                                                    @foreach (var item in Model.Addresses)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@item.CountryName</td>
                                                            <td style="display:none;">@item.CountryId</td>
                                                            <td>@item.ProvinceName</td>
                                                            <td style="display:none;">@item.ProvinceId</td>
                                                            <td>@item.CityName</td>
                                                            <td style="display:none;">@item.CityId</td>
                                                            <td>
                                                                <div class="form-check d-flex justify-content-center p-0">
                                                                    <input class="form-check-input rdbIsMain" type="radio" checked="@item.IsMain" name="isMainAddress" />
                                                                </div>
                                                            </td>
                                                            <td>@item.AddressType</td>
                                                            <td style="display:none;">@item.AddressTypeId</td>
                                                            <td>@item.PostalCode</td>
                                                            <td class="wrap">@item.Address1</td>
                                                            <td class="wrap">@item.Address2</td>
                                                            <td>
                                                                <button type="button" class="btn btn-danger bg-gradient" onclick="deleteAddress(this)">
                                                                    <i class="fa fa-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="12">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12 text-end p-2">
                    <button class="btn btn-success btn-sm pe-3" id="btnSave" type="button">
                        <i class="far fa-save px-1 mt-1">
                        </i>@Language.GetString("btn_Save")
                    </button>
                    <a asp-action="index" asp-controller="Home" asp-area="" class="btn btn-light border border-1 btn-sm">
                        <i class="far fa-share-square px-1 mt-1"></i>
                        @Language.GetString("btn_Back")
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>



    <script src="~/lib/cropperjs/cropper.js"></script>
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="~/lib/datePicker/kamadatepicker.min.js"></script>
    }
    else
    {
        <script src="~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    }
    <script>
        if ("@CultureInfo.CurrentCulture.Name" === "fa-IR") {
            kamaDatepicker('dtpBirthDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });

        }
        else {
            $('.datepicker').datepicker();
        }
    </script>


    <script>

        function addAddress() {
            var flag = false;
            $("span[data-val-result='CountryId']").html("");
            $("span[data-val-result='ProvinceId']").html("");
            $("span[data-val-result='CityId']").html("");
                $("span[data-val-result='CountryId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#AddressProvinceId").val() == "-1") {
            $("span[data-val-result='AddressType']").html("");
            $("span[data-val-result='PostalCode']").html("");
            $("span[data-val-result='Address1']").html("");
            if ($("#AddressCountryId").val() == "-1") {
                $("span[data-val-result='ProvinceId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#AddressCityId").val() == "-1") {
                $("span[data-val-result='CityId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#AddressTypeId").val() == "-1") {
                $("span[data-val-result='AddressType']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#PostalCode").val() == "") {
                $("span[data-val-result='PostalCode']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#Address1").val() == "") {
                $("span[data-val-result='Address1']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if (!flag) {
                var main = "";
                if($("#isMainAddress").is(":checked"))
                main = '@Language.GetString("btn_Confirm")';
                else
                main ='@Language.GetString("btn_NotConfirm")';
                 
                var tr = "<tr><td>" + $("#AddressCountryId option:selected").text() +
                    "</td><td class='d-none'>" + $("#AddressCountryId").val() +
                    "</td><td>" + $("#AddressProvinceId option:selected").text() +
                    "</td><td class='d-none'>" + $("#AddressProvinceId").val() +
                    "</td><td>" + $("#AddressCityId option:selected").text() +
                    "</td><td class='d-none'>" + $("#AddressCityId").val() +
                    "</td><td>" + '<div class="form-check d-flex justify-content-center p-0">
                                                                    <input class="form-check-input rdbIsMain" type="radio" checked="'+ $("#isMainAddress").val() +'" name="isMainAddress" />
                                                                </div>' +
                    "</td><td>" + $("#AddressTypeId option:selected").text() +
                    "</td><td class='d-none'>" + $("#AddressTypeId").val() +
                    "</td><td>" + $("#PostalCode").val() +
                    "</td><td>" + $("#Address1").val() +
                    "</td><td>" + $("#Address2").val() +
                    "</td><td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteAddress(this)'>" +
                    "<i class='fa fa-trash'></i></button></td></td></tr>";

                if ($("#addressList tr").length == 1 && $("#addressList tr")[0].children.length == 1) {
                    $("#addressList tr")[0].remove();

                    $("#addressList").append(tr);


                    $("#AddressCountryId").val("-1");
                    $("#AddressCountryId").selectpicker("refresh");
                    $("#AddressProvinceId").val("-1");
                    $("#AddressProvinceId").selectpicker("refresh");
                    $("#AddressCityId").val("-1");
                    $("#AddressCityId").selectpicker("refresh");
                    $("#AddressTypeId").val("-1");
                    $("#AddressTypeId").selectpicker("refresh");
                    $("#isMainAddress").prop("checked", false);
                    $("#PostalCode").val("");
                    $("#Address1").val("");
                    $("#Address2").val("");
                }

            }

        }

        function deleteAddress(sender) {
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        var cropper;
        var currentFileSize;
        var currentFileName;

        $('#uploadModal')
            .on('hidden.bs.modal',
                function() {
                    cropper.destroy();
                    document.getElementById("image").value = "";
                    $("#cropped_result").remove();
                });



        function upRiseModal() {
            debugger;
            $("#send_pic").attr("disabled", true);
            $("#uploadModal").modal("show");
        }

        function initCropper() {
            debugger;
            const image = document.getElementById('croppedImg');
            if (cropper !== null && cropper !== undefined) {
                cropper.destroy();
            }

            cropper = new Cropper(image,
                {
                    background: true,
                    aspectRatio: 1,
                    viewMode: 2,
                    responsive: true
                });

            document.getElementById('crop_button')
                .addEventListener('click',
                    function() {
                        const imgUrl = cropper.getCroppedCanvas().toDataURL('image/jpeg');
                        const img = document.createElement("img");
                        img.setAttribute("id", "profilePhoto");
                        img.setAttribute("class", "img-fluid");
                        const height = document.getElementById("container").getAttribute("width");
                        const croppedContainer = document.createElement("div");
                        croppedContainer.setAttribute("id", "cropped_result");
                        croppedContainer.setAttribute("style", `max-width:100%; max-height:100%; width: 400px; height:${height}; border: none`);
                        document.getElementById("rowContainer").appendChild(croppedContainer);
                        img.setAttribute("style", `max-width:100%;max-height:100%;width: 400px;height: ${height};position: relative;left: 0px;border: 1px solid black`);
                        img.src = imgUrl;
                        document.getElementById("cropped_result").innerHTML = "";
                        document.getElementById("cropped_result").appendChild(img);
                        $("#send_pic").attr("disabled", false);
                    });
        }

        function getURL(input) {
            debugger;
            $("#cropped_result").remove();
            if (input.files && input.files[0]) {
                const file = input.files[0];
                currentFileName = file.name;
                currentFileSize = file.size;

                if (currentFileSize <= 500 * 1024) {
                    const reader = new FileReader();
                    reader.readAsDataURL(input.files[0]);
                    reader.onload = function(e) {
                        const content = e.target.result;
                        const reducedContent = content.slice(5);

                        if (content === "data:" || !reducedContent.startsWith("image")) {
                            ShowError('@Language.GetString("AlertAndMessage_InvalidFormat")');
                        }
                        else {
                            $('#croppedImg').attr('src', content);
                            setTimeout(upRiseModal, 100);
                            setTimeout(initCropper, 500);
                        }
                    };
                }
                else {
                    ShowError('@Language.GetString("AlertAndMessage_InvalidFileSize")');
                }
            }
        }

        function ShowError(message) {
            const bsAlert = new bootstrap.Toast(document.getElementById('notificationToast'));
            document.getElementById('notificationToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${message}`;
            document.getElementById('notificationToastBody').classList.add('alert-danger');
            bsAlert.show();

            document.getElementById("image").value = "";
            $("#cropped_result").remove();
        }

        function FillDataToSend() {
            debugger;
            var dto = {};
            dto.BankAccount = {};
            dto.Addresses = [];
            dto.UserID = $("#UserID").val();
            dto.UserName = $("#UserName").val();
            dto.FirstName = $("#FirstName").val();
            dto.LastName = $("#LastName").val();
            dto.FatherName = $("#FatherName").val();
            dto.GenderId = $("#Gender").val();
            dto.NationalCode = $("#NationalCode").val();
            dto.PersianBirthDate = $("#dtpBirthDate").val();
            dto.FileContent = $("#fileContent").val();
            dto.FileName = currentFileName;
            dto.DefaultCurrencyId = $("#CurrencyId").val();
            dto.DefaultLanguageId = $("#LanguageId").val();

            dto.BankAccount.AccountNumber = $("#AccountNumber").val();
            dto.BankAccount.AccountName = $("#AccountName").val();
            dto.BankAccount.Iban = $("#Iban").val();
            dto.BankAccount.BankName = $("#BankName").val();

            $("#addressList tr").each(function() {

                var obj = {};
                obj.CountryId = $(this).find("td:eq(1)").text();
                obj.ProvinceId = $(this).find("td:eq(3)").text();
                obj.CountryName = $(this).find("td:eq(0)").text();
                obj.ProvinceName = $(this).find("td:eq(2)").text();
                obj.CityName = $(this).find("td:eq(4)").text();
                obj.CityId = $(this).find("td:eq(5)").text();
                obj.IsMain = $(this).find("td:eq(6) .rdbIsMain").is(":checked");
                obj.AddressTypeId = $(this).find("td:eq(8)").text();
                obj.PostalCode = $(this).find("td:eq(9)").text();
                obj.Address1 = $(this).find("td:eq(10)").text();
                obj.Address2 = $(this).find("td:eq(11)").text();

                dto.Addresses.push(obj);
            });

            return dto;

        }


        $(document)
            .ready(function() {
                $("#AddressCountryId").selectpicker();

                $("#AddressCountryId").on('change',
                    function() {
                        debugger;
                        var name = $("#AddressCountryId option:selected").text();

                        $.ajax({
                            type: "Get",
                            url: "@Url.Action("GetStates","Account")" + "?countryName=" + name,
                            success: function(result) {
                                var data = result.data;
                                var html = '';
                                //html += '<option disabled value="-1" selected>' + '@Language.GetString("AlertAndMessage_Choose")' + '</option>';
                                if (result.status === "success") {
                                    debugger;
                                    data.forEach(function(item) {
                                        html += '<option value="' + item.id + '">' + item.name + '</option>';
                                    });
                                    $("#AddressProvinceId").html(html);
                                    $("#AddressProvinceId").selectpicker('refresh');
                                } else {

                                }
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert(xhr.status);
                            },
                            complete: function() {

                            }
                        });
                    });

             $(document).on("change", "#AddressProvinceId", function (e) {
                debugger;
                var statId = $("#AddressProvinceId").val();

         
                $.ajax({
                    type: "Get",
                    url: "@Url.Action("GetCities","Account")"+"?stateId="+statId,
                    success: function(result) {
                        var data = result.data;
                        var html = '';
                        html += '<option disabled value=null selected>'+'@Language.GetString("AlertAndMessage_Choose")'+'</option>';
                        if (result.status === "success") {
                            data.forEach(function (item) {
                                html += '<option value="' + item.id + '">' + item.name + '</option>';
                            });
                            $("#AddressCityId").html(html);
                            $("#AddressCityId").selectpicker('refresh');
                        } else {

                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(xhr.status);
                    },
                    complete: function() {
                
                    }
                });
            });

                $("#btnSave").click(function() {
                    debugger;
                    var dto = FillDataToSend();

                    $.ajax({
                        url: `/${'@ViewBag.LanIcon'}/Account/Profile`,
                        contentType: 'application/json',
                        data: JSON.stringify(dto),
                        type: 'Post',
                        beforeSend: function() {
                            debugger;
                            /*  AddLoading($("#addContentCardBody"));*/
                        },
                        success: function(result) {
                            debugger;
                            if (result.status === "Success") {
                                document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>' + result.message;
                                document.getElementById('mainToastBody').classList.add('alert-success');
                                $("#toastPanel").show();
                                var bsAlert = new bootstrap.Toast($("#mainToast"));
                                bsAlert.show();
                                setTimeout(function() {
                                    $("#toastPanel").hide();
                                    window.location.href = '@Url.Action("Index", "Home")';
                                },
                                    1500);
                            }
                            else
                                if (result.status === "ModelError") {
                                    var spanErrorList = $('span[data-val-result]');
                                    if (spanErrorList.length > 1) {
                                        spanErrorList.each(function() {
                                            $(this).html("");
                                            $(this).parent().removeClass("has-error");
                                        });
                                    }
                                    else {
                                        spanErrorList.html("");
                                        spanErrorList.parent().removeClass("has-error");
                                    }
                                    if (result.modelStateErrors !== null) {
                                        $('[data-val-result=' + result.key + ']').html(result.errorMessage);
                                        $('[data-val-result=' + result.key + ']').parent().addClass("has-error");
                                    }
                                }
                                else if (result.status === "Error") {
                                    showError(result.message);
                                }

                        },

                    });
                });

                $("#send_pic")
                    .click(function() {
                        debugger;
                        $("#uploadModal").modal("hide");
                        const url = $("#profilePhoto").attr("src");
                        $("#userProfileImage").attr('src', url);
                        $("#fileContent").val(url);
                        $("#fileName").val(currentFileName);
                    });
            });



        $(document).on("change", "#ProvinceId", function(e) {
            debugger;
            var statId = $("#ProvinceId").val();


            $.ajax({
                type: "Get",
                url: "@Url.Action("GetCities","Account")" + "?stateId=" + statId,
                success: function(result) {
                    var data = result.data;
                    var html = '';
                    html += '<option disabled value="-1" selected>' + '@Language.GetString("AlertAndMessage_Choose")' + '</option>';
                    if (result.status === "success") {
                        data.forEach(function(item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        $("#AddressCityId").html(html);
                        $("#AddressCityId").selectpicker('refresh');
                    } else {

                    }
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(xhr.status);
                },
                complete: function() {

                }
            });
        });

       


    </script>