@model Arad.Portal.DataLayer.Models.User.RegisterUserModel
@{
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles
{
    <style>
        .text-danger {
            font-size: 12px;
        }
    </style>
    <link href="@Url.Content($"~/lib/intl-tel-input/css/intlTelInput.css")" rel="stylesheet" />

}


<h4>  @Language.GetString("AddUserPart_Title") </h4>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addUserCard">
            <div class="card-header">
                <h5 class="card-title">@Language.GetString("AddUserPart_Title")</h5>
            </div>
            <form role="form" id="addUserFrm" asp-action="Add" asp-controller="Account" method="post">
                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-12 col-md-3 p-2">
                            <label asp-for="Name" class="form-label">@Language.GetString("User_FirstName")</label>
                            <input asp-for="Name" type="text" class="form-control" placeholder=" ">
                            <span data-val-result="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3 p-2">
                            <label asp-for="LastName" class="form-label">@Language.GetString("User_LastName")</label>
                            <input asp-for="LastName" type="text" class="form-control" placeholder=" ">
                            <span data-val-result="LastName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3 p-2">
                            <label asp-for="UserName" class="form-label">@Language.GetString("User_UserName")</label>
                            <input asp-for="UserName" type="text" class="form-control" placeholder=" " autocomplete="off">
                            <span data-val-result="UserName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3 p-2">
                            <label asp-for="Email" class="form-label">@Language.GetString("EnumDesc_Email")</label>
                            <input asp-for="Email" type="text"  dir="ltr" class="form-control" placeholder=" " autocomplete="off">
                            <span data-val-result="Email" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="row">
                        <div class="form-group col-12 col-md-4 p-2">
                            <label asp-for="Password" class="form-label">@Language.GetString("User_Password")</label>
                            <input asp-for="Password" type="password" class="form-control" placeholder=" " autocomplete="new-password">
                            <span data-val-result="Password" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-4 p-2">
                            <label class="form-label" asp-for="RePassword">@Language.GetString("User_RePassword")</label>
                            <input asp-for="RePassword" type="password" class="form-control" placeholder=" " autocomplete="new-password">
                            <span data-val-result="RePassword" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-4 p-2">
                            <label asp-for="PhoneNumber" class="form-label">@Language.GetString("User_PhoneNumber")</label><br />
                            <input asp-for="PhoneNumber" type="tel" class="form-control" placeholder=" "><br />
                            <span data-val-result="PhoneNumber" class="text-danger"></span>
                            <input id="hidePhone" type="hidden" value="" name="FullMobile" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-12 col-md-4 p-2">
                            <label asp-for="UserRoleId" class="form-label">@Language.GetString("User_Roles")</label>
                            <select class="form-select selectpicker" asp-for="UserRoleId" asp-items="@(new SelectList(Model.Roles, "Id", "Title"))" data-live-search="true">
                            </select>
                            <span data-val-result="UserRoleId" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12 col-md-4 p-2">
                            <div class="row p-2">
                                <label  class="form-label">@Language.GetString("ActivationState")</label>
                                <div class="form-check col-4">
                                    <input class="form-check-input" type="radio" id="Active" name="IsActive"  value="true">
                                    <label class="form-check-label" >
                                        @Language.GetString("Active")
                                    </label>
                                </div>
                                <div class="form-check col-12 col-md-4">
                                    <input class="form-check-input" type="radio" id="InActive" name="IsActive" value="false">
                                    <label class="form-check-label" >
                                        @Language.GetString("InActive")
                                    </label>
                                </div>
                                <span data-val-result="IsActive" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group col-12 col-md-4 pt-4 pb-2">
                            <div class="form-check m-auto d-inline-block pt-3">
                                <input class="form-check-input" type="checkbox" value="IsVendor" asp-for="IsVendor">
                                <label class="form-check-label" for="IsVendor">
                                    @Language.GetString("IsVendor")
                                </label>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="form-group col-12 col-md-4 p-2">
                            <label class="form-label" asp-for="DefaultLanguageId">@Language.GetString("DefaultLanguage")</label>
                            <select class="form-select selectpicker" asp-for="DefaultLanguageId" asp-items="@(new SelectList(ViewBag.LangList, "Value", "Text"))" data-live-search="true">
                            </select>
                            <span data-val-result="DefaultLanguageId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-4 pt-4 pb-2">
                                <div class="form-check m-auto d-inline-block pt-3">
                                    <input class="form-check-input" type="checkbox" value="IsSiteUser" asp-for="IsSiteUser">
                                    <label class="form-check-label" for="IsSiteUser">
                                        @Language.GetString("User_IsSiteUser")
                                    </label>
                                </div>
                        </div>

                    </div>
                </div>

                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-4 offset-md-8 col-12">
                            <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                            <input type="submit" value="@Language.GetString("btn_Add")" class="btn btn-primary bg-gradient float-end m-2" />
                        </div>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>






@section Scripts
{
    <script src="@Url.Content($"~/lib/twbs-pagination/jquery.twbsPagination.js")"></script>
    <script src="@Url.Content($"~/lib/intl-tel-input/js/intlTelInput-jquery.min.js")"></script>
    <script src="@Url.Content($"~/lib/intl-tel-input/js/intlTelInput.js")"></script>
    <script src="@Url.Content($"~/lib/MD.BootstrapPersianDateTimePicker/dist/jquery.md.bootstrap.datetimepicker.js")"></script>

    <script type="text/javascript">
            $(document).ready(function () {
         
            var input = document.querySelector("#PhoneNumber");

            window.intlTelInput(input,
            {
            initialCountry: "IR",
            placeholderNumberType: "MOBILE",
            separateDialCode: true,
            utilsScript: "../../lib/intl-tel-input/js/utils.js",
            nationalMode: true,
            hiddenInput: "FullMobile"
            });

                $("#DefaultLanguageId").val('@ViewBag.LangId');
                $("#DefaultLanguageId").selectpicker('refresh');

            $("#addUserFrm").submit(function (e) {
                debugger;
                e.preventDefault();
                $('span[data-val-result]').each(function () {
                    $(this).html("");
                });
            var frm = document.getElementById('addUserFrm');
            var form = new FormData(frm);
            form.set("IsVendor", $("#IsVendor").is(":checked"));
            form.set("IsSiteUser", $("#IsSiteUser").is(":checked"));
            form.set("IsDomainAdmin", $("#IsDomainAdmin").is(":checked"));
            form.append("IsActive", $("input[name='IsActive']:checked").val() == "true");

            $.ajax({
            url: $(this).attr('action'),
            data: form,
            type: 'Post',
            processData: false,
            contentType: false,
            beforeSend: function() {
          /*  AddLoading($("#addUserCard"));*/
            },
            success: function (result)
            {
                debugger;
                    if (result.status === "success")
                    {

                            document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            var toastDiv = $("#mainToast");
                            $("#toastPanel").show();
                            var toast = new bootstrap.Toast(toastDiv);
                            toast.show();
                            setTimeout(function()
                                {
                                     $("#toastPanel").hide();
                                     window.location.href = '@Url.Action("List")';
                                },
                                3000);
                        }
                    else if (result.status === "error")
                      {
                            var spanErrorList = $('span[data-val-result]');

                            if (spanErrorList.length > 0)
                            {
                            spanErrorList.each(function() {
                                $(this).html("");
                                $(this).parent().removeClass("has-error");
                                });
                            } 
                            else {
                            spanErrorList.html("");
                            spanErrorList.parent().removeClass("has-error");
                            }

                            if (result.modelStateErrors.length > 0) {
                            debugger;
                            result.modelStateErrors.forEach(function(value, index) {
                            $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                            $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                            });
                            }
                            else
                            {
                                showError(result.message);
                           }
                       }

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("@error");
                alert(xhr.status);
                alert(thrownError);
            },
            complete: function () {
           /* removeLoading($("#addUserCard"));*/
            }
            });
            });
            });

    </script>
}