@inject IHttpContextAccessor Accessor;
@using Arad.Portal.DataLayer.Models.User;
@using Microsoft.AspNetCore.Http;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Role;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model Arad.Portal.DataLayer.Models.Shared.PagedItems<UserListView>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    Layout = "~/Views/Shared/_Layout.cshtml";
    System.Collections.Specialized.NameValueCollection queryString = null;
    if (Model.QueryString != null)
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["userName"]) ||
                        !string.IsNullOrWhiteSpace(queryString["name"]) ||
                        !string.IsNullOrWhiteSpace(queryString["role"]);

        queryString.Remove("page");
    }
    var userSearchCollapseClass = isSearch ? "collapse show" : "collapse";
}
@section Styles
{
    <style>

        .btn {
            margin: 2px
        }

        img {
            max-width: 100%;
            max-height: 100%;
        }
    </style>
}


<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#changePassCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>

    <div id="changePassCollapse" class="@userSearchCollapseClass">
        <div class="card-body">
            <div class="row">

                <div class="form-group col-12 col-md-3">
                    <label class="form-label">@Language.GetString("User_UserName")</label>
                    <input id="userName" value="@(queryString != null ? @queryString["userName"] : "")" type="text" class="form-control" />
                </div>


                <div class="form-group col-12  col-md-3">
                    <label class="form-label">@Language.GetString("User_FullName")</label>
                    <input id="name" value="@(queryString != null ? @queryString["name"] : "")" type="text" class="form-control" />
                </div>
                <div class="form-group col-12 col-md-3">
                    <label class="form-label">@Language.GetString("Role")</label>
                    <select  id="roleSelect" class="form-control selectpicker" data-live-search="true">
                        <option value="0" selected="@(queryString != null && string.IsNullOrWhiteSpace(queryString["role"]) ? "selected" : null)">@Language.GetString("AlertAndMessage_SelectOne")</option>
                        @{
                            List<RoleListView> roles = ViewBag.Roles;

                            foreach (var role in roles)
                            {
                                                        <option selected="@(queryString != null && !string.IsNullOrWhiteSpace(queryString["role"])
                                        && queryString["role"] == role.Id ? "selected" : null)"
                                        value="@role.Id">
                                                            @role.Title
                                                        </option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-2 offset-md-10 col-12">
                    <button id="btnLoad" class="btn btn-sm btn-primary bg-gradient float-end" type="submit">@Language.GetString("btn_Find")</button>
                </div>
            </div>

        </div>
    </div>
</div>

<div aria-hidden="true" aria-labelledby="confirmChangePasswordModalLabel" class="modal fade" id="confirmChangePasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="confirmChangePasswordModalLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="confirmChangePasswordModalBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="onChangePassword()" type="button">
                    @Language.GetString("btn_Confirm")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_NotConfirm")
                </button>
            </div>
        </div>
    </div>
</div>
<div aria-hidden="true" aria-labelledby="showChangePasswordModalLabel" class="modal fade" id="showChangePasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="showChangePasswordModalLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="showChangePasswordModalBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="copyToClipboard()" type="button">
                    @Language.GetString("btn_Copy")
                </button>
                <button class="btn btn-success" onclick="SendPassword()" type="button">
                    @Language.GetString("Action_Send")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_Close")
                </button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header alert alert-secondary">
        <div class="row">
            <div class="col-12 col-md-3">
                <h5 class="card-title">@Language.GetString("PermissionTitle_UserManagement")</h5>
            </div>
            <div class="col-6 col-md-4 offset-md-5">
                <div class="card-tools float-end">
                        <a asp-action="AddUser" asp-controller="Account" class="btn btn-success bg-gradient btn-sm">
                            <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus pt-1"></i>&nbsp; @Language.GetString("btn_Add")
                        </a>
                </div>
               
            </div>
        </div>
    </div>
    <div class="card-body table-responsive" id="userListCard">
        <table id="userListTbl" class="table table-bordered table-striped align-middle">
            <thead>
                <tr>
                    <th class="ListCell">@Language.GetString("tbl_RowName")</th>
                    <th class="ListCell">@Language.GetString("User_UserName")</th>
                    <th class="ListCell">@Language.GetString("User_FullName")</th>
                    <th class="ListCell">@Language.GetString("User_RoleName")</th>
                    <th class="ListCell">@Language.GetString("CreationDate")</th>
                    <th class="ListCell">@Language.GetString("User_PhoneNumber")</th>
                    <th class="ListCell">@Language.GetString("ActivationState")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="table">
                @if (Model.Items.Count != 0)
                {
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ListCell">@(++i)</td>
                            <td class="ListCell">@item.UserName</td>
                            <td class="ListCell">@($"{@item.Name} {@item.LastName}")</td>
                            <td class="ListCell">@item.RoleName</td>
                            <td class="ListCell ltr">@item.CreateDate</td>
                            <td class="ListCell">@item.PhoneNumber</td>
                            <td id="@("activation" + item.Id)" class="ListCell">
                                @{
                                    if (item.IsActive)
                                    {
                                                                <button onclick='changeActivation("@item.Id")' class="btn-sm btn btn-success bg-gradient">@Language.GetString("Active")</button>
                                    }
                                    else
                                    {
                                                                <button onclick='changeActivation("@item.Id")' class="btn-sm btn btn-danger bg-gradient">@Language.GetString("InActive")</button>
                                    }
                                }
                            </td>
                            <td class="ListCell">
                                
                                    <a id=@($"editRecord_{@item.Id}") asp-action="EditUser" asp-controller="Account" asp-route-id="@item.Id" class="btn btn-sm btn-warning bg-gradient">
                                        @Language.GetString("btn_Edit")
                                    </a>

                                <button class="btn btn-sm btn-primary" data-placement="bottom" data-toggle="tooltip" onclick="changePassword('@item.Id')" title="@Language.GetString("btn_ChangePass")">
                                    <i class="fa fa-key"></i>
                                </button>
                               
                                @if (item.IsDelete)
                                {
                                    <button id=@($"restoreRecord_{@item.Id}") data-id="@item.Id" onclick="restoreUser('@item.Id')" class="btn btn-sm btn-secondary bg-gradient">
                                        @Language.GetString("btn_Restore")
                                    </button>
                                }else
                                {
                                    <button id=@($"deleteRecord_{@item.Id}") data-id="@item.Id" onclick="EntityDelete('@item.Id')" class="btn btn-sm btn-danger bg-gradient">
                                        @Language.GetString("btn_Delete")
                                    </button>
                                }
                                
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="ListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
   {
       CurrentPage = Model.CurrentPage,
       ItemsCount = Model.ItemsCount,
       PageSize = Model.PageSize,
       Navigation = Url.Action("List", "User"),
       QueryParams = Model.QueryString ?? "page=1&pageSize=20"
   })
    </div>
</div>

<div aria-hidden="true" aria-labelledby="confirmModalLabel" class="modal fade" id="confirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="confirmModalLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="confirmModalBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" onclick="onClickYes()" type="button">
                    @Language.GetString("btn_Confirm")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_NotConfirm")
                </button>
            </div>
        </div>
    </div>
</div>

@*<div class="position-fixed h-100 w-100 p-5 bg-dark" id="toastAlert" style="display: block; left: 0; top: 0; z-index: 11;">
    <div aria-atomic="true" aria-live="assertive" class="toast" id="notificationToast" role="alert">
        <div class="toast-body p-3 fs-5 rounded-3 text-center" style="top: 40%; left: 200px;position: absolute;width: calc(100% - 400px);" id="notificationToastBody">
        </div>
    </div>
</div>*@



@section Scripts
    {
    <script>
        var password;
        var userId;
        
        $(document).ready(function () {
            debugger;
         
             $("#btnLoad").click(function () {
            debugger;
                var queryString = '';
                if ($("#name").val() !== '') {
                    queryString = '?name=' + $("#name").val();
                }

                if ($("#userName").val() !== '') {
                    if (queryString === '') {
                        queryString = '?userName=' + $("#userName").val();
                    } else {
                        queryString = queryString + '&userName=' + $("#userName").val();
                    }
                }

                var role = $('#roleSelect').find(":selected").val();
                if (role !== '0') {
                    if (queryString === '') {
                        queryString = '?role=' + role;
                    } else {
                        queryString = queryString + '&role=' + role;
                    }
                }

                window.location.href = '@Url.Action("List", "Account")' + queryString;
            });
        });


            //function ViewImage(address) {
            //    var tag = '<img src="' + address + '" width="500px" />';
               
            //}

        function changeActivation(id) {
            debugger;
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("ChangeActivation", "Account")' + '?id=' + id,
                    success: function(resultData) {
                        if (resultData.status === "success") {
                            debugger;
                            var html = '';
                            if (resultData.result === true) {
                                html = '<button onclick="changeActivation(\'' + id + '\')" class="btn btn-sm btn-success bg-gradient"> ' + '@Language.GetString("Active")' +' </button>';
                            } else {
                                html = '<button onclick="changeActivation(\'' + id + '\')" class="btn btn-sm btn-danger bg-gradient"> '+ '@Language.GetString("InActive")' +' </button>';
                            }
                            $('#activation' + id).html(html);
                        }

                        if (resultData.status === "error") {
                            showError(resultData.message);
                        }
                    }
                });
            }

        function restoreUser(id) {
            entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = '@Url.Action("Restore", "Account")' + "/" + id,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Restore")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_RestorationSureness")';
			$('#confirmModal').modal('show');
        }

        function EntityDelete(id) {
            entityId = id;
            typeOfRequest = 'Get';
            confirmUrl = `@Url.Action("Delete", "Account")/${id}`,
                document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Delete")';
            document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_DeletionSureness")';
            $('#confirmModal').modal('show');
        }

        function onChangePassword() {
            debugger;
            $('#confirmChangePasswordModal').modal('hide');

            $.ajax({
                type: typeOfRequest,
                url: confirmUrl,
                statusCode: {
                    200: function (resultData) {
                        debugger;
                        if (resultData.result) {
                            password = resultData.data;
                            document.getElementById('showChangePasswordModalLabel').innerHTML = '@Language.GetString("btn_ChangePassword")';
                            document.getElementById('showChangePasswordModalBody').innerHTML = resultData.data;
                            $('#showChangePasswordModal').modal('show');
                        }
                        else {
                            showError(resultData.message);
                        }
                    },
                    404: function () {
                        showError('@Language.GetString("AlertAndMessage_UserNotFound")');
                    },
                    403: function () {
                        showError('@Language.GetString("AlertAndMessage_NotAllowed")');
                    }
                }
            });
        }

        function changePassword(id) {
            debugger;
            entityId = id;
            typeOfRequest = 'PUT';
            confirmUrl = `@Url.Action("ChangePassword")?id=${entityId}`;
            document.getElementById('confirmChangePasswordModalLabel').innerHTML = '@Language.GetString("btn_ChangePassword")';
            document.getElementById('confirmChangePasswordModalBody').innerHTML = '@Language.GetString("AlertAndMessage_ChangePassConfirmation")';
            $('#confirmChangePasswordModal').modal('show');
        }

        function copyToClipboard() {
           debugger;
            navigator.clipboard.writeText(password).then(() => {

                $('#showChangePasswordModal').modal('hide');

                $('#mainToastBody').removeClass("alert-danger");
                $('#mainToastBody').addClass("alert-success");
                document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i> @Language.GetString("AlertAndMessage_CopyDone")';

                var toastDiv = $("#mainToast");
                $("#toastPanel").show();
                var toast = new bootstrap.Toast(toastDiv);
                toast.show();

                setTimeout(function () {
                    window.location.reload();
                },
                    1500);
            });
        }

        function SendPassword() {
            debugger;
            $('#showChangePasswordModal').modal('hide');
            $("#toastPanel").show();
           $('#mainToastBody').removeClass("alert-danger");
            $('#mainToastBody').addClass("alert-success");

            $.ajax({
                type: "Get",
                url: `@Url.Action("CreatePasswordNotification")?userId=${entityId}&password=${password}`,
                statusCode: {
                    200: function (resultData) {
                        if (resultData.result) {
                           
                            document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i> @Language.GetString("AlertAndMessage_SuccessfullyDone")';
                            $('#mainToastBody').removeClass("alert-danger");
                            $('#mainToastBody').addClass("alert-success");
                        }
                        else {
                            var msg = '@Language.GetString("AlertAndMessage_ErrorTryAgain")';
                            document.getElementById('mainToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${msg}`;
                             $('#mainToastBody').removeClass("alert-success");
                             $('#mainToastBody').addClass("alert-danger");
                        }

                        var toastDiv = $("#mainToast");
                        $("#toastPanel").show();
                        var toast = new bootstrap.Toast(toastDiv);
                        toast.show();

                        setTimeout(function () {
                            $("#toastPanel").hide();
                        },
                            1500);
                    },
                    404: function () {
                        showError('@Language.GetString("AlertAndMessage_UserNotFound")');
                    },
                    403: function () {
                        showError('@Language.GetString("AlertAndMessage_NotAllowed")');
                    }
                }
            });
        }
        
    </script>
}





