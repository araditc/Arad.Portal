@model Arad.Portal.DataLayer.Models.Product.ProductUnitDTO
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <style>
        .text-danger {
            font-size: 12px;
        }
    </style>
}

<h5>  @Language.GetString("Menu_ProductUnits") </h5>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addProductUnitCard">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.ProductUnitId) ?
                Language.GetString("EditProductUnitPart_Title") : Language.GetString("AddProductUnitPart_Title"))
                </h5>
            </div>

            <div class="card-body">
                <input type="hidden" value="@Model.ProductUnitId" asp-for="@Model.ProductUnitId" />
                @if(@ViewBag.IsSysAcc)
                {
                    <div class="row">
                         <div class="form-group col-12 col-md-3">
                          <label asp-for="AssociatedDomainId" class="form-label">@Language.GetString("AssociatedDomain")</label>
                          <select class="form-control selectpicker" data-live-search="true" 
                             asp-for="@Model.AssociatedDomainId" asp-items="@(new SelectList(ViewBag.Domains,"Value","Text", Model.AssociatedDomainId))">
                        </select>
                        <span data-val-result="AssociatedDomainId" class="text-danger"></span>
                    </div>
                    </div>
                }else
                {
                    <input type="hidden" value="@Model.AssociatedDomainId" asp-for="@Model.AssociatedDomainId" />
                }
               
                <div class="row align-items-center alert alert-secondary">
                    <div class="form-group col-12 col-md-4">
                        <label class="form-label" for="unitName">@Language.GetString("ProductUnit_Name")</label><br />
                        <input type="text" class="form-control" id="unitName" placeholder=" ">
                        <span data-val-result="unitName" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-4">
                        <label class="form-label" for="languageId">@Language.GetString("LanguageName")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                        </select>
                        <span data-val-result="languageId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-4" style="text-align:center;margin:auto;">
                        <div style="margin:auto;display:inline-block;">
                            <button type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="@Language.GetString("btn_Add")" class="btn btn-success btn-sm bg-gradient" onclick="addToTable();">
                                <i class="fa fa-plus pt-1" ></i>
                            </button>
                        </div>

                    </div>
                </div>


                <div class="row" style="margin-top:1%;">
                    <div class="card-body table-bordered  table-responsive p-0">
                        <table class="table table-hover">
                            <thead>
                                <tr style="text-align:center;">
                                    <th>@Language.GetString("ProductUnit_Name")</th>
                                    <th>@Language.GetString("LanguageName")</th>
                                    <th style="display:none"></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="multiLingualList">
                                @foreach (var item in Model.UnitNames)
                                {
                                    <tr style="text-align:center;">
                                        <td>@item.Name</td>
                                        <td>@item.LanguageName</td>
                                        <td style="display:none;">@item.LanguageId</td>
                                        <td>
                                            <button type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="@Language.GetString("btn_Delete")"
                                                    class="btn btn-danger bg-gradient" onclick="deleteFromTable(this);">
                                                <i class="fa fa-trash" ></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddProductUnit" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts{
    <script>

        $(document).ready(function () {

         $("#btnAddProductUnit").click(function () {
            debugger;
                var flag = false;

                if ($("#multiLingualList tr").length == 0) {
                    $("span[data-val-result='UnitNames']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                    flag = true;
                }
                if($("#AssociatedDomainId").val() == "")
                {
                    $("span[data-val-result='AssociatedDomainId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
                }
                if (!flag) {
                    var dataModel = FillDataToSend();
                  $.ajax({
                    url: "@Model.ProductUnitId" != "" ? '@Url.Action("Edit", "ProductUnit")' : '@Url.Action("Add", "ProductUnit")',
                    contentType: 'application/json',
                    data: JSON.stringify(dataModel),
                    type: 'Post',
                    beforeSend: function () {
                    },
                    success: function (result) {
                        debugger;
                        if (result.status === "Success")
                        {
                           
                              document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                                document.getElementById('mainToastBody').classList.add('alert-success');
                                $("#toastPanel").show();
                                 var bsAlert = new bootstrap.Toast($("#mainToast"));
                                bsAlert.show();
                                setTimeout(function()
                                {
                                    $("#toastPanel").hide();
                                     window.location.href = '@Url.Action("List")';
                                },
                                3000);
                        }
                        else
                        if (result.status === "ModelError")
                        {
                                var spanErrorList = $('span[data-val-result]');
                                if (spanErrorList.length > 1) 
                                {
                                    spanErrorList.each(function() {
                                        $(this).html("");
                                        $(this).parent().removeClass("has-error");
                                    });
                                } 
                                else
                                {
                                    spanErrorList.html("");
                                    spanErrorList.parent().removeClass("has-error");
                                }
                                if (result.modelStateErrors != null && result.modelStateErrors.length > 0) 
                                {
                                    result.modelStateErrors.forEach(function(value, index)
                                    {
                                        $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                        $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                    });
                                }
                                else
                                {
                                    showError(result.message);
                                }
                         }
                         else 
                         if(result.status == "Error")
                         {
                             showError(result.message);
                         }
                   },
                    complete: function () {
                   
                    }
                });
                }

            });
        });

        function FillDataToSend() {
            debugger;
            var obj = {};
           
            obj.AssociatedDomainId = $("#AssociatedDomainId").val();
            obj.UnitNames = [];
            obj.ProductUnitId = $("#ProductUnitId").val();
            $("#multiLingualList tr").each(function () {
                debugger;
                var innerModel = {};

                innerModel.Name = $(this).find("td:eq(0)").text();
                innerModel.LanguageId = $(this).find("td:eq(2)").text();
                obj.UnitNames.push(innerModel);
        });
            return obj;
        }

        function deleteFromTable(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        function addToTable() {
            var flag = false;
            debugger;

            if ($("#unitName").val() == "") {
                $("span[data-val-result='unitName']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#languageId").val() == "-1") {
                 $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }

            if (!flag) {
                var tr = "<tr style='text-align:center;'><td>" + $("#unitName").val() +
                    "</td><td>" + $('#languageId option:selected').text() +
                    "</td><td style='display:none;'>" + $("#languageId").val() +
                    "</td><td><button type='button' data-bs-toggle='tooltip' data-bs-placement='top' title='@Language.GetString("btn_Delete")' " +
                    " class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromTable(this);'>" +
                    "<i class='fa fa-trash' ></i></button></td></tr>";

                $("#multiLingualList").append(tr);
                $("#unitName").val("");
                $("#languageId").val("-1");
                $("#languageId").selectpicker("refresh");
            }
        }
    </script>
}




