@model Arad.Portal.DataLayer.Models.ProductSpecification.ProductSpecificationDTO
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
    string selectedVal = ((int)@Model.ControlType).ToString();
}
@section Styles{
    <style>
        .text-danger {
            font-size: 12px;
        }


    </style>
}

    <h4>  @Language.GetString("Menu_ProductSpecifications") </h4>
    <hr />


    <div class="row">
        <div class="col-12">
            <div class="card" id="addProductGroupCard">
                <div class="card-header">
                    <h5 class="card-title">
                        @(!string.IsNullOrWhiteSpace(Model.ProductSpecificationId)
                        ? Language.GetString("EditProductSpecificationPart_Title")
                        : Language.GetString("AddProductSpecificationPart_Title"))
                </h5>
            </div>

            <div class="card-body" id="addEditProductSpecificationCard">
                <input type="hidden" value="@Model.ProductSpecificationId" asp-for="@Model.ProductSpecificationId" />
                @if (@ViewBag.IsSysAcc)
                {
                    <div class="row">
                        <div class="form-group col-12 col-md-3">
                            <label asp-for="AssociatedDomainId" class="form-label">@Language.GetString("AssociatedDomain")</label>
                            <select class="form-control selectpicker" data-live-search="true"
                                asp-for="@Model.AssociatedDomainId" asp-items="@(new SelectList(ViewBag.Domains,"Value","Text", Model.AssociatedDomainId))">
                            </select>
                            <span data-val-result="AssociatedDomainId" class="text-danger"></span>
                        </div>
                    </div>
                }else
                {
                    <input type="hidden" value="@Model.AssociatedDomainId" asp-for="@Model.AssociatedDomainId" />
                }
                <div class="row align-items-center p-2">
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="languageId">@Language.GetString("LanguageName")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                        </select>
                        <span data-val-result="languageId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" asp-for="@Model.SpecificationGroupId">@Language.GetString("tbl_GroupName")</label>
                        <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.SpecificationGroupId" asp-items="@(new SelectList(ViewBag.SpecificationGroupList,"Value","Text"))">
                        </select>
                        <span data-val-result="specificationGroupId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="name">@Language.GetString("Name")</label><br />
                        <input type="text" class="form-control" id="name" placeholder=" ">
                        <span data-val-result="name" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-2">
                        <label class="form-label" asp-for="@Model.ControlType">@Language.GetString("UIControlType")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" asp-for="@Model.ControlType" asp-items="@(new SelectList(ViewBag.ControlTypes,"Value","Text"))">
                        </select>
                        <span data-val-result="controlType" class="text-danger"></span>
                    </div>
                 
                </div>

                <div class="row align-items-center m-md-4 m-0">
                    <div class="col-9">
                        <div class="row  bg-secondary bg-opacity-25 py-2">
                            <div class="form-group col-11 col-md-5">
                                <label class="form-label" for="nameValuesInput">@Language.GetString("tbl_SpecificationValues")</label>
                                <input type="text" class="form-control" id="nameValuesInput" placeholder='@Language.GetString("specificationName_placeHolder")'>

                            </div>
                            <div class=" form-group col-1" style="text-align:center;margin:auto;">
                                <div class="float-end">
                                    <button type="button" class="btn btn-success bg-gradient btn-sm mt-3 mb-3" onclick="addToValueList();">
                                        <i class="fa fa-plus pt-1"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="form-group col-6 col-md-5">
                                <span data-val-result="SpecificationNameValues" class="text-danger"></span>
                                <ul class="list-group" id="nameValuesList"></ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-3">
                        <div class="d-flex justify-content-center">
                            @*<div class="float-end">*@
                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addToTable();">
                                <i class="fa fa-plus pt-1"></i>
                                @Language.GetString("btn_Add")
                            </button>
                        @*</div>*@
                        </div>
                    </div>

                </div>

                <div class="row mt-1">
                    <div class="card-body table-bordered  table-responsive p-0">
                        <table class="table table-hover">
                            <thead>
                                <tr style="text-align:center;">
                                    <th>@Language.GetString("tbl_GroupName")</th>
                                    <th style="display:none"></th>
                                    <th>@Language.GetString("LanguageName")</th>
                                    <th>@Language.GetString("tbl_SpecificationName")</th>
                                    <th>@Language.GetString("tbl_SpecificationValues")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="multiLingualList">
                                @foreach (var item in Model.SpecificationNameValues)
                                {
                                    <tr style="text-align:center;">
                                        <td>@item.GroupName</td>
                                        <td style="display:none;">@item.LanguageId</td>
                                        <td>@item.LanguageName</td>
                                        <td>@item.Name</td>
                                        <td>@(string.Join('|', item.NameValues))</td>
                                        <td>
                                            <button type="button" class="btn btn-danger bg-gradient" onclick="deleteFromTable(this);">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddProductSpecification" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<div aria-hidden="true" aria-labelledby="confirmLabel" class="modal fade" id="showModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="confirmLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="confirmBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="onConfirmDialog();" type="button">
                    @Language.GetString("btn_Confirm")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_NotConfirm")
                </button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        var globalSender;
        function onConfirmDialog() {
            $(globalSender).closest("li").remove();
        }
        $(document).ready(function () {

            if ('@ViewBag.LangId' != "") {
                $("#languageId").val('@ViewBag.LangId');
                $("#languageId").selectpicker("refresh");
            }
            if ('@Model.ProductSpecificationId' != "") {
                debugger;
                $("#ControlType").val(@selectedVal);
                $("#ControlType").selectpicker("refresh");

            }

            $("#AssociatedDomainId").change(function(){

                var langId = $("#languageId").val();
                var did = $("#AssociatedDomainId").val();

                if (langId != "-1") {
                    $.ajax({
                        url: '@Url.Action("GetSpecificationGroupList", "ProductSpecificationGroup")' + "?lid=" + langId + "&did=" + did,
                        type: 'Get',
                        dataType: 'json',
                        success: function (result) {
                            debugger;
                            var options = "<option value=''> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                            if (result.status === "success") {
                                debugger;
                                if (result.data.length != 0) {
                                    (result.data).forEach(function (item) {
                                        var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                        options += op;
                                    });

                                    $("#SpecificationGroupId").html(options);
                                    $("#SpecificationGroupId").val('@Model.SpecificationGroupId');
                                    $("#SpecificationGroupId").selectpicker("refresh");
                                }
                            }else
                            {
                                showError(result.message);
                            }
                        },
                        //error: function (xhr, ajaxOptions, thrownError) {
                        //    alert("@error");
                        //    alert(xhr.status);
                        //    alert(thrownError);
                        //}
                    });
                }

            });
            $("#languageId").change(function () {
                debugger;
                var langId = $("#languageId").val();
                var did = $("#AssociatedDomainId").val();

                if (langId != "-1") {
                    $.ajax({
                        url: '@Url.Action("GetSpecificationGroupList", "ProductSpecificationGroup")' + "?lid=" + langId + "&did=" + did,
                        type: 'Get',
                        dataType: 'json',
                        success: function (result) {
                            debugger;
                            var options = "<option value=''> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                            if (result.status === "success") {
                                debugger;
                                if (result.data.length != 0) {
                                    (result.data).forEach(function (item) {
                                        var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                        options += op;
                                    });

                                    $("#SpecificationGroupId").html(options);
                                    $("#SpecificationGroupId").val('@Model.SpecificationGroupId');
                                    $("#SpecificationGroupId").selectpicker("refresh");
                                }
                            }else
                            {
                                showError(result.message);
                            }
                        }//,
                        //error: function (xhr, ajaxOptions, thrownError) {
                        //    alert("@error");
                        //    alert(xhr.status);
                        //    alert(thrownError);
                        //}
                    });
                }

            });

            $("#btnAddProductSpecification").click(function () {
                debugger;
                var flag = false;

                if ($("#SpecificationGroupId").val() == "") {
                    $("span[data-val-result='specificationGroupId']").html('@Language.GetString("AlertAndMessage_SelectSpecificationGroup")');
                }

                if ($("#multiLingualList tr").length == 0) {
                    $("span[data-val-result='SpecificationNameValues']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                    flag = true;
                }
                if($("#AssociatedDomainId").val() == "")
                {
                    $("span[data-val-result='AssociatedDomainId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
                }
                if (!flag) {
                    var dataModel = FillDataToSend();
                    $.ajax({
                        url: "@Model.ProductSpecificationId" != "" ? '@Url.Action("Edit", "ProductSpecification")' : '@Url.Action("Add", "ProductSpecification")',
                        data: dataModel,
                        contentType: 'application/json',
                        data: JSON.stringify(dataModel),
                        type: 'Post',
                        beforeSend: function () {
                            /* AddLoading($("#addEditProductSpecificationCard"));*/
                        },
                        success: function (result) {
                            debugger;
                            if (result.status === "Success") 
                            {

                                document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>' + result.message;
                                document.getElementById('mainToastBody').classList.add('alert-success');
                                $("#toastPanel").show();
                                var bsAlert = new bootstrap.Toast($("#mainToast"));
                                bsAlert.show();
                                setTimeout(function () {
                                    $("#toastPanel").hide();
                                    window.location.href = '@Url.Action("List")';
                                }, 3000);
                                    
                            } 
                            else
                            if (result.status === "ModelError")
                            {
                                    var spanErrorList = $('span[data-val-result]');
                                    if (spanErrorList.length > 1)
                                    {
                                        spanErrorList.each(function ()
                                        {
                                            $(this).html("");
                                            $(this).parent().removeClass("has-error");
                                        });
                                    } 
                                    else 
                                    {
                                        spanErrorList.html("");
                                        spanErrorList.parent().removeClass("has-error");
                                    }
                                    if (result.modelStateErrors != null && result.modelStateErrors.length > 0)
                                    {
                                        result.modelStateErrors.forEach(function (value, index) {
                                            $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                            $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                        });
                                    }
                                    else 
                                    {
                                        showError(result.message);
                                    }
                            }
                            else
                            if(result.status == "Error")
                            {
                                showError(result.message);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("@error");
                            alert(xhr.status);
                            alert(thrownError);
                        },
                        complete: function () {
                            /* removeLoading($("#addEditProductSpecificationCard"));*/
                        }
                    });
                }
            });
        });


        function addToValueList() {
            debugger;
            if ($("#nameValuesInput").val() != "") {
                var val = $("#nameValuesInput").val();
                var li = "";

                li = "<li class='list-group-item'>" + val + "<i class='fa fa-times-circle'" +
                    "onclick='deleteValue(this);' style='font-size:1rem;color:red;' class='float-end'></i></li>";

                $("#nameValuesList").append(li);
                $("#nameValuesInput").val("");
            } else {

                showError('@Language.GetString("AlertAndMessage_FillSpecificationValue")');
            }
        }
        function deleteValue(sender) {
            debugger;
            globalSender = sender;
            document.getElementById('confirmLabel').innerHTML = '@Language.GetString("AlertAndMessage_AreYouSure")';
            document.getElementById('confirmBody').innerHTML = '@Language.GetString("AlertAndMessage_DeleteSpecificationValue")';
            $('#showModal').modal('show');
        }
        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.SpecificationNameValues = [];

            obj.AssociatedDomainId = $("#AssociatedDomainId").val();
            if ($("#ProductSpecificationId").val() != "")
                obj.ProductSpecificationId = $("#ProductSpecificationId").val();

            obj.SpecificationGroupId = $("#SpecificationGroupId").val();
            obj.ControlType = parseInt($("#ControlType").val());

            $("#multiLingualList tr").each(function () {
                debugger;

                var innerModel = {};
                innerModel.NameValues = [];
                innerModel.GroupName = $(this).find("td:eq(0)").text();
                innerModel.Name = $(this).find("td:eq(3)").text();
                innerModel.LanguageId = $(this).find("td:eq(1)").text();
                var joinedValues = $(this).find("td:eq(4)").text();
                innerModel.NameValues = joinedValues.split("|");

                obj.SpecificationNameValues.push(innerModel);
            });
            return obj;
        }

        function deleteFromTable(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        function addToTable() {
            debugger;
            var flag = false;
            var selectedLang = $('#languageId').val();
            if (isUnique(selectedLang, 'multiLingualList', 1, '@Language.GetString("AlertAndMessage_LangUniqueness")')) {
            if ($("#name").val() == "") {
                $("span[data-val-result='name']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#languageId").val() == "-1") {
                $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#nameValuesList li").length == 0) {
                $("span[data-val-result='SpecificationNameValues']").html('@Language.GetString("AlertAndMessage_FillList")');
                flag = true;
            }
            if (!flag) {
                var valuesArray = [];
                $("#nameValuesList li").each(function () {
                    valuesArray.push($(this).text())
                });
                var joinedValues = valuesArray.join('|');
                var tr = "<tr style='text-align:center;'><td>" + $("#SpecificationGroupId option:selected").text() +
                    "</td><td style='display:none;'>" + $("#languageId").val() +
                    "</td><td>" + $('#languageId option:selected').text() +
                    "</td><td >" + $("#name").val() +
                    "</td><td>" + joinedValues +
                    "</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromTable(this);'>" +
                    "<i class='fa fa-trash' ></i></button></td></tr>";

                $("#multiLingualList").append(tr);
                $("#name").val("");
                $("#languageId").val("@ViewBag.LangId");
                $("#languageId").selectpicker("refresh");
                $("#nameValuesList").html("");
                $("#ControlType").val("-1");
                $("#ControlType").selectpicker("refresh");


                clearMessages();
            }
            }
        }
        function clearMessages() {
            $("span[data-val-result]").each(function () {
                $(this).html("");
            });
        }
    </script>
}




