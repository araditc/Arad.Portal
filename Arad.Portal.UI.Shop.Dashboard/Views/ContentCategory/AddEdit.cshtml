@model Arad.Portal.DataLayer.Models.ContentCategory.ContentCategoryDTO
@{
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <style>
        .text-danger {
            font-size: 12px;
        }

    </style>
}

<h4>  @Language.GetString("Menu_ContentCategory") </h4>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addContentCategoryCardTitle">
            <div class="card-header">
                <h5 class="card-title" data-toggle="tab">@(!string.IsNullOrWhiteSpace(Model.ContentCategoryId) ? Language.GetString("EditContentCategory_Title") : Language.GetString("AddContentCategory_Title"))</h5>
            </div>

            <div class="card-body" id="addContentCategoryCardBody">
                <input type="hidden" value="@Model.ContentCategoryId" asp-for="ContentCategoryId" />

                @if (@ViewBag.IsSysAcc)
                {
                    <div class="row">
                        <div class="form-group col-12 col-md-3">
                            <label asp-for="AssociatedDomainId" class="form-label">@Language.GetString("AssociatedDomain")</label>
                            <select class="form-control selectpicker" data-live-search="true"
                                asp-for="@Model.AssociatedDomainId" asp-items="@(new SelectList(ViewBag.Domains,"Value","Text", Model.AssociatedDomainId))">
                            </select>
                            <span data-val-result="AssociatedDomainId" class="text-danger"></span>
                        </div>
                    </div>
                }
                else
                {
                    <input type="hidden" value="@Model.AssociatedDomainId" asp-for="AssociatedDomainId" />
                }

                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" asp-for="@Model.ParentCategoryId">@Language.GetString("ParentGroup")</label>
                        <select class="form-control selectpicker" asp-for="@Model.ParentCategoryId" asp-items="@(new SelectList(ViewBag.CategoryList,"Value","Text"))" data-live-search="true">
                        </select>
                        <span data-val-result="ParentId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" asp-for="CategoryTypeId">@Language.GetString("Enum_ContentCategoryType")</label>
                        <select class="form-control selectpicker" id="categoryTypeId" data-live-search="true"
                                asp-items="@(new SelectList(ViewBag.CategoryTypes,"Value","Text", (int)Model.CategoryType))">
                        </select>
                        <span data-val-result="categoryTypeId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" asp-for="CategoryCode">@Language.GetString("tbl_ContentCategoryCode")</label>
                        <input type="text" class="form-control" asp-for="@Model.CategoryCode" value="@Model.CategoryCode" disabled />
                        <span data-val-result="CategoryCode" class="text-danger"></span>
                    </div>

                </div>

                <div class="row">
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="languageId">@Language.GetString("LanguageName")</label><br />
                        <select class="form-control selectpicker" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))" data-live-search="true">
                        </select>
                        <span data-val-result="languageId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-12 col-md-3">
                        <label class="form-label" for="categoryName">@Language.GetString("tbl_CategoryName")</label><br />
                        <input type="text" class="form-control" id="categoryName" placeholder=" ">
                        <span data-val-result="categoryName" class="text-danger"></span>
                    </div>
                     <div class="form-group col-11 col-md-3">
                        <label class="form-label" for="urlFriend">@Language.GetString("UrlFriend")</label><br />
                        <input type="text" class="form-control" id="urlFriend" placeholder=" ">
                        <span data-val-result="urlFriend" class="text-danger"></span>
                    </div>

                    <div class="form-group col-1" style="text-align:center;margin:auto;">
                        <span data-val-result="MultiLingualProperties" class="text-danger"></span>
                        <div style="margin:auto;display:inline-block;">
                            <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addToTable();">
                                <i class="fa fa-plus pt-1"></i>
                            </button>
                        </div>
                    </div>
                    <div class="form-group col-12 col-md-5"></div>

                </div>

                <div class="row" style="margin-top:1%;">
                    <div class="card-body table-bordered  table-responsive p-0">
                        <table class="table table-hover">
                            <thead>
                                <tr style="text-align:center;">
                                    <th>@Language.GetString("tbl_CategoryName")</th>
                                    <th>@Language.GetString("LanguageName")</th>
                                    <th style="display:none"></th>
                                    <th>@Language.GetString("UrlFriend")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="multiLingualList">
                                @foreach (var item in Model.CategoryNames)
                                {
                                    <tr style="text-align:center;">
                                        <td>@item.Name</td>
                                        <td>@item.LanguageName</td>
                                        <td style="display:none;">@item.LanguageId</td>
                                        <td dir="ltr">@(!string.IsNullOrWhiteSpace(item.UrlFriend) ? item.UrlFriend.Replace("/category/", "") : item.UrlFriend)</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-danger bg-gradient" onclick="deleteFromTable(this);">
                                                <i class="fa fa-trash" ></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-12 col-md-4 offset-md-8 col-12">
                        <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                        <input type="button" id="btnAddContentCategory" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {
          
            $("#languageId").val('@ViewBag.LangId');
             $("#languageId").selectpicker();

            if ("@Model.ContentCategoryId" != "" && "@Model.ParentCategoryId" != "")
            {
                $("#ParentCategoryId").val("@Model.ParentCategoryId");
                $("#ParentCategoryId").selectpicker("refresh");
            }

            $("#AssociatedDomainId").change(function(){
                var domainId = $(this).val();
                var langId = $("#languageId").val();

                $.ajax({
                    url: `@Url.Action("GetContentCategoryList", "ContentCategory")?lid=${langId}&did=${domainId}`,
                    type: 'Get',
                    dataType: 'json',
                    success: function (result) {
                        debugger;
                        var options = "";
                        if (result.status === "success") {
                            debugger;
                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });

                                $("#ParentCategoryId").html(options);
                                $("#ParentCategoryId").selectpicker("refresh");
                            }
                        }else
                        {
                            showError(result.message);
                        }
                    }//,
                    //error: function (xhr, ajaxOptions, thrownError) {
                    //    alert("@error");
                    //    alert(xhr.status);
                    //    alert(thrownError);
                    //}
                });
            })

            $("#btnAddContentCategory").click(function () {
                debugger;
                var flag = false;

                if ($("#multiLingualList tr").length == 0) {
                    $("span[data-val-result='MultiLingualProperties']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                    flag = true;
                }
                if($("#AssociatedDomainId").val() == "")
                {
                    $("span[data-val-result='AssociatedDomainId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
                }
                if (!flag) 
                {

                var dto = FillDataToSend();
                    $.ajax({
                        url: "@Model.ContentCategoryId" != "" ? '@Url.Action("Edit","ContentCategory")' : '@Url.Action("Add","ContentCategory")',
                        contentType: 'application/json',
                        data: JSON.stringify(dto),
                    type: 'Post',
                    beforeSend: function () {
                    },
                    success: function (result) {
                        debugger;
                        if (result.status === "Success") {
                           
                            document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                            document.getElementById('mainToastBody').classList.add('alert-success');
                            var bsAlert = new bootstrap.Toast($("#mainToast"));
                            $("#toastPanel").show();
                            bsAlert.show();
                            setTimeout(function()
                            {
                                $("#toastPanel").hide();
                                 window.location.href = '@Url.Action("List")';
                            },
                            3000);
                        }
                        else
                        if (result.status === "ModelError") 
                        {
                            var spanErrorList = $('span[data-val-result]');
                            if (spanErrorList.length > 1)
                            {
                                spanErrorList.each(function()
                                {
                                    $(this).html("");
                                    $(this).parent().removeClass("has-error");
                                });
                            } else
                            {
                                spanErrorList.html("");
                                spanErrorList.parent().removeClass("has-error");
                            }
                            if (result.modelStateErrors !== null && result.modelStateErrors.length > 0)
                            {
                                  result.modelStateErrors.forEach(function (value, index) {
                                    $('[data-val-result=' + value.key + ']').html(value.errorMessage);
                                    $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                  });
                            }
                        }
                        else
                        if(result.status == "Error")
                        {
                            showError(result.message);
                        }
                    },
                    @*error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    },*@
                    complete: function () {
                       /* removeLoading($("#addContentCategoryCardBody"));*/
                    }
                    });
                }

            });
        });

        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.CategoryNames = [];
            obj.AssociatedDomainId = $("#AssociatedDomainId").val();
            obj.ContentCategoryId = $("#ContentCategoryId").val();
            if ($("#ParentCategoryId").val() != "-1") {
                obj.ParentCategoryId = $("#ParentCategoryId").val();
            }
            
            obj.CategoryTypeId = parseInt($("#categoryTypeId").val());
            obj.CategoryCode = Number($("#CategoryCode").val());
            $("#multiLingualList tr").each(function () {
                debugger;
                var innerModel = {};
                innerModel.Name = $(this).find("td:eq(0)").text();
                innerModel.LanguageName = $(this).find("td:eq(1)").text();
                innerModel.LanguageId = $(this).find("td:eq(2)").text();
                innerModel.urlFriend = $(this).find("td:eq(3)").text();

                obj.CategoryNames.push(innerModel);
        });
            return obj;
        }

        function deleteFromTable(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        function addToTable() {
            var flag = false;
            $("span[data-val-result='categoryName']").html("");
            $("span[data-val-result='languageId']").html("");
            $("span[data-val-result='urlFriend']").html("");

            debugger;
            var selectedLang = $('#languageId').val();
            if (isUnique(selectedLang, 'multiLingualList', 2, '@Language.GetString("AlertAndMessage_LangUniqueness")')) {
                if ($("#categoryName").val() == "") {
                    $("span[data-val-result='categoryName']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                    flag = true;
                }
                if ($("#languageId").val() == "-1") {
                    $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                    flag = true;
                }
                var arr = $("#urlFriend").val().split(" ");
                var urlFriend = arr.join("-");

                var catId = '@Model.ContentCategoryId' == '' ? "" : '@Model.ContentCategoryId';
                if (!flag) {
                    $.ajax({
                            url: `@Url.Action("CheckUrlFriendUniqueness", "ContentCategory")?id=${catId}&url=${urlFriend}`, 
                            type: 'Get',
                            dataType: 'json',
                            success: function (result) {

                                if(result.status ==="Success")
                                {
                                   var urlFriend ="";
                                    if($("#urlFriend").val() != "")
                                    {
                                        urlFriend = "/category/" + arr.join("-");
                                    }
                                   var tr = "<tr style='text-align:center;'><td>" + $("#categoryName").val() +
                                        "</td><td>" + $('#languageId option:selected').text() +
                                        "</td><td style='display:none;'>" + $("#languageId").val() +
                                        "</td><td dir='ltr'>"+ urlFriend +"</td><td><button type='button' class='btn btn-sm btn-danger bg-gradient' onclick='deleteFromTable(this);'>" +
                                        "<i class='fa fa-trash' ></i></button></td></tr>";

                                        $("#multiLingualList").append(tr);
                                        $("#categoryName").val("");
                                        $("#urlFriend").val("");
                                        $("#languageId").val("@ViewBag.LangId");
                                        $("#languageId").selectpicker("");
                                 }
                                 else
                                 {
                                     $("span[data-val-result='urlFriend']").html('@Language.GetString("AlertAndMessage_UrlFriendIsNotUnique")');
                                 }

                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                return false;
                            }
                        });
                    
                }
            }
        }
    </script>
}




