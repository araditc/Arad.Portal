@using System.Web
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Content;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model PagedItems<ContentViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    var filter ="";
    var catId = "";
    var error = Language.GetString("AlertAndMessage_Error");
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["LanguageId"]) 
           || !string.IsNullOrWhiteSpace(queryString["filter"])
           || !string.IsNullOrWhiteSpace(queryString["catId"]);
        if (isSearch)
        {
            if(queryString["LanguageId"] != null)
            langId = queryString["LanguageId"].ToString();
            if(queryString["filter"] != null)
            filter = queryString["filter"].ToString();
            if(queryString["catId"] != null)
            catId = queryString["catId"].ToString();
        }
        queryString.Remove("page");
    }
    if(langId == "")
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "collapse show" : "collapse";
    var baseAdd = Config["BaseAddress"];
}

<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>

    <div id="searchCollapse" class="@searchCollapseClass">
        <div class="card-body">

            <div class="row">

                <div class="form-group col-12 col-md-3">
                    <label class="form-label">@Language.GetString("LanguageName")</label>
                    <select class="form-control selectpicker" id="cmbLangIdFilter" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))" data-live-search="true">
                    </select>
                </div>
                <div class="form-group col-12 col-md-3">
                    <label class="form-label">@Language.GetString("Menu_ContentCategory")</label>
                    <select class="form-control data-live-search="true"" id="contentCategoryId" asp-items="@(new SelectList(ViewBag.CatList,"Value","Text"))" data-live-search="true">
                    </select>
                </div>
                <div class="form-group col-12 col-md-3">
                    <label class="form-label">@Language.GetString("Filter")</label>
                    <input type="text" class="form-control" id="filter" />
                </div>
            </div>

        </div>
        <div class="card-footer">
            <button id="btnSearch" class="btn btn-sm btn-primary bg-gradient float-end" type="button">
                <i style="position: relative; left: 5px; top: 1px;" class="fa fa-search"></i>
                @Language.GetString("btn_Search")
            </button>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-6 col-md-3">
                <h5 class="card-title">@Language.GetString("Menu_Content")</h5>
            </div>
            <div class="col-6 col-md-3  offset-md-6">
                <div class="card-tools float-end">
                        <a asp-action="AddEdit" asp-controller="Content" class="btn btn-sm btn-success bg-gradient btn-sm">
                            <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus pt-1"></i>&nbsp; @Language.GetString("btn_Add")
                        </a>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body table-responsive" id="contentListCard">
        <table class="table table-bordered table-striped align-middle">
            <thead>
                <tr style="text-align:center;">
                    <th>@Language.GetString("tbl_RowName")</th>
                    <th>@Language.GetString("Menu_ContentCategory")</th>
                    <th>@Language.GetString("RelatedLanguage")</th>
                    <th>@Language.GetString("Entities_Title")</th>
                    <th>@Language.GetString("Entities_SubTitle")</th>
                    <th>@Language.GetString("SeoTitle")</th>
                    <th>@Language.GetString("SeoDescription")</th>
                    <th>@Language.GetString("UrlFriend")</th>
                    <th>@Language.GetString("SourceType")</th>
                   @* <th>@Language.GetString("StartShowDate")</th>
                    <th>@Language.GetString("EndShowDate")</th>*@
                    <th>@Language.GetString("ContentProviderName")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {

                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ListCell">@(++i)</td>
                            <td class="ListCell">@item.ContentCategoryName</td>
                            <td class="ListCell">@item.LanguageName</td>
                            <td class="ListCell">@item.Title</td>
                            <td class="ListCell">@item.SubTitle</td>
                            <td class="ListCell">@item.SeoTitle</td>
                            <td class="ListCell">@item.SeoDescription</td>
                            <td class="ListCell">@item.UrlFriend</td>
                            <td class="ListCell">@item.SourceType</td>
                           @* <td class="ListCell" dir="ltr">@item.StartShowDate</td>
                            <td class="ListCell" dir="ltr">@item.EndShowDate</td>*@
                            <td class="ListCell">@item.ContentProviderName</td>
                            <td>
                                
                                    <a asp-action="AddEdit" asp-controller="Content" asp-route-id="@item.ContentId" class="btn btn-sm btn-warning bg-gradient">
                                        <i  class="fa fa-edit"></i>@Language.GetString("btn_Edit")
                                    </a>
                                
                                @if (!item.IsDeleted)
                                {
                                    <button onclick="EntityDelete('@item.ContentId')" class="btn btn-sm btn-danger bg-gradient">
                                        <i  class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                    </button>
                                }
                                @if (item.IsDeleted)
                                {
                                    <button id="restoreRecord" data-id="@item.ContentId" onclick="EntityRestore('@item.ContentId')" class="btn btn-sm btn-secondary bg-gradient">
                                        <i  class="fa fa-refresh"></i>
                                        @Language.GetString("btn_Restore")
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="13" class="ListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
        {
            CurrentPage = Model.CurrentPage,
            ItemsCount = Model.ItemsCount,
            PageSize = Model.PageSize,
            Navigation = Url.Action("List", "Content"),
            QueryParams = Model.QueryString
        })
    </div>

</div>


@section Scripts{
    <script>
        $(document).ready(function () {
           
            if ("@langId" != "") {
                $("#cmbLangIdFilter").val("@langId");
                 $("#cmbLangIdFilter").selectpicker("refresh");
            }
            if('@filter' != "")
            {
                $("#filter").val("@filter");
            }

            if("@catId" != "")
            {
                $("#contentCategoryId").val("@catId");
                $("#contentCategoryId").selectpicker("refresh");
            }

            $("#cmbLangIdFilter").change(function () {
            debugger;
                var langId = $("#cmbLangIdFilter").val();
            if (langId != "-1") {
                $.ajax({
                    url: `@Url.Action("GetContentCategoryList", "ContentCategory")/${langId}`, 
                    type: 'Get',
                    dataType: 'json',
                    success: function (result) {
                        debugger;
                        var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                        if (result.status === "success") {
                            debugger;
                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });

                                $("#contentCategoryId").html(options);
                            }
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
                });
            }
        });

             $("#btnSearch").click(function () {
                debugger;
                 var queryString = "?LanguageId=" + $("#cmbLangIdFilter").val();
                 if ($("#contentCategoryId").val() != "-1") {
                     if (queryString != "") {
                         queryString += "&catId=" + $("#contentCategoryId").val();
                     } else {
                         queryString += "?catId=" + $("#contentCategoryId").val();
                     }
                 }
                 if ($("#filter").val() != "") {
                     if (queryString != "") {
                         queryString += "&filter=" + $("#filter").val();
                     }
                     else {
                         queryString += "?filter=" + $("#filter").val();
                     }
                 }
                window.location.href = '@Url.Action("List", "Content")' + queryString;
            });
        });
        function EntityDelete(id) {
            entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = `@Url.Action("Delete", "Content")/${id}`,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Delete")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_DeletionSureness")';
			$('#confirmModal').modal('show');
        }
        function EntityRestore(id) {
             entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = `@Url.Action("Restore", "Content")/${id}`,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Restore")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_RestorationSureness")';
			$('#confirmModal').modal('show');
        }
    </script>
}
