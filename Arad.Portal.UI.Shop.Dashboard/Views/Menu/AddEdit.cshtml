@model Arad.Portal.DataLayer.Models.Menu.MenuDTO
@{
   
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
     var baseAdd = Config["BaseAddress"];
}
@section Styles{
    <link href="@Url.Content($"~/lib/bootstrap-iconpicker/css/bootstrap-iconpicker.css")" rel="stylesheet" />
    <style>
        .text-danger {
            font-size: 12px;
        }
        .ltr {
            direction: ltr;
        }
    </style>
}

<h4>  @Language.GetString("Menu_StoreMenues") </h4>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card" id="addStoreMenuCard">
            <form>
                <div class="card-header">
                    <h5 class="card-title" data-toggle="tab">@(!string.IsNullOrWhiteSpace(Model.MenuId) ? Language.GetString("EditMenu_Title") : Language.GetString("AddMenu_Title"))</h5>
                </div>

                <div class="card-body">
                    <input type="hidden" value="@Model.MenuId" asp-for="MenuId" />
                      <div class="row">
                        @if(ViewBag.IsSysAcc)
                        {
                            <div class="form-group col-12 col-md-3">
                                <label asp-for="AssociatedDomainId" class="form-label" >@Language.GetString("AssociatedDomain")</label>
                                <select class="form-control selectpicker"  asp-for="AssociatedDomainId"
                                    asp-items="@(new SelectList(ViewBag.DomainList,"Value","Text", Model.AssociatedDomainId))" data-live-search="true">
                                    </select>
                                <span data-val-result="AssociatedDomainId" class="text-danger"></span>
                            </div>
                        }else
                        {
                            <input type="hidden" value="@Model.AssociatedDomainId" asp-for="AssociatedDomainId" />
                        }
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label">@Language.GetString("Order")</label>
                            <input type="number" class="form-control" asp-for="@Model.Order" />
                            <span data-val-result="Order" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12 col-md-3">
                            <input type="hidden" value="@(string.IsNullOrWhiteSpace(Model.Icon) ? "fas fa-bomb" : Model.Icon)" asp-for="Icon" id="iconPick" />

                            <label class="form-label" asp-for="Icon">@Language.GetString("Menu_Icon")</label><br />
                            <button id="iconPicktarget" class="btn btn-primary bg-gradient"></button>
                        </div>
                        
                        <div class="form-group col-12 col-md-3 invisible" id="urlSection">
                            <label class="form-label" asp-for="Url">@Language.GetString("Url")</label>
                            <input type="text" class="form-control ltr" asp-for="@Model.Url" />
                            <span data-val-result="Url" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label" asp-for="@Model.ParentId">@Language.GetString("ParentMenu")</label>
                            <select class="form-control selectpicker" value="@Model.ParentId" data-live-search="true" asp-for="@Model.ParentId" asp-items="@(new SelectList(ViewBag.Menues,"Value","Text"))">
                            </select>
                            <span data-val-result="ParentId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label" asp-for="@Model.MenuType">@Language.GetString("MenuType")</label>
                            <select class="form-control selectpicker" value="@Model.MenuType" data-live-search="true" asp-for="@Model.MenuType" asp-items="@(new SelectList(ViewBag.MenuTypes,"Value","Text"))">
                            </select>
                            <span data-val-result="MenuType" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3 invisible" id="groupSection">
                            <label class="form-label">@Language.GetString("tbl_GroupName")</label>
                            <select class="form-control selectpicker" id="categoryId" data-live-search="true">
                            </select>
                            <span data-val-result="categoryId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3 invisible" id="productOrContentSection">
                            <label class="form-label" id="lblProductOrContent"></label>
                            <select class="form-control selectpicker" id="ContentOrProductId" data-live-search="true">
                            </select>
                            <span data-val-result="ContentOrProductId" class="text-danger"></span>
                        </div>
                    </div>
                  


                    <div class="row border-top mt-3" >
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label" for="languageId">@Language.GetString("LanguageName")</label><br />
                            <select class="form-control selectpicker" id="languageId" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))" data-live-search="true">
                            </select>
                            <span data-val-result="languageId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3">
                            <label class="form-label" for="groupName">@Language.GetString("tbl_MenuTitle")</label><br />
                            <input type="text" class="form-control" id="menuTitle" placeholder=" ">
                            <span data-val-result="menuTitle" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3" style="text-align:center;margin:auto;">
                            <span data-val-result="MultiLingualProperties" class="text-danger"></span>
                            <div style="margin:auto;display:inline-block;">
                                <button type="button" class="btn btn-success bg-gradient btn-sm" onclick="addToTable();">
                                    <i class="fa fa-plus pt-1" ></i>
                                </button>
                            </div>
                        </div>

                    </div>

                    <div class="row" style="margin-top:1%;">
                        <div class="card-body table-bordered  table-responsive p-0">
                            <table class="table table-hover">
                                <thead>
                                    <tr style="text-align:center;">
                                        <th>@Language.GetString("tbl_MenuTitle")</th>
                                        <th>@Language.GetString("LanguageName")</th>
                                        <th style="display:none"></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="multiLingualList">
                                    @foreach (var item in Model.MenuTitles)
                                    {
                                        <tr style="text-align:center;">
                                            <td>@item.Name</td>
                                            <td>@item.LanguageName</td>
                                            <td style="display:none;">@item.LanguageId</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-danger bg-gradient" onclick="deleteFromTable(this);">
                                                    <i class="fa fa-trash" ></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>

                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-4 offset-md-8 col-12">
                            <a asp-action="List" class="btn btn-secondary btnBack bg-gradient float-end m-2">@Language.GetString("btn_Back")</a>
                            <input type="button" id="btnAddMenu" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient float-end m-2" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script src="@Url.Content($"~/lib/bootstrap-iconpicker/js/bootstrap-iconpicker.bundle.min.js")"></script>
    <script>

        $(document).ready(function () {
            //$("#toastAlert").hide();

            if ("@Model.MenuId" != "") {
                LoadData();
            
            } else if("@Model.MenuId" == ""){
                $("#MenuType").val("-1");
                $("#MenuType").selectpicker("refresh");
            }
            $("#languageId").val("@ViewBag.DefLangId");
            $("#languageId").selectpicker("refresh");

             $('#iconPicktarget').iconpicker({
                align: 'center', // Only in div tag
                arrowClass: 'btn-info',
                arrowPrevIconClass: 'fas fa-angle-right',
                arrowNextIconClass: 'fas fa-angle-left',
                cols: 10,
                footer: true,
                header: true,
                icon: '@(!string.IsNullOrWhiteSpace(Model.Icon) ? Model.Icon: "fas fa-bomb")',
                iconset: 'fontawesome5',

                placement: 'bottom', // Only in button tag
                rows: 5,
                search: true,
                searchText: '@(Language.GetString("Search"))',
                selectedClass: 'btn-warning',
                unselectedClass: ''
            });

            $("#AssociatedDomainId").change(function(){
                debugger;
                if($(this).val() != "-1")
                {
                    var domId = $(this).val();
                    $.ajax({
                         url: `@Url.Action("GetRelatedMenues", "Menu")?domainId=${domId}`, //"/Menu/GetRelatedMenues/?domainId=" + $(this).val(),
                            type: 'Get',
                            dataType : 'json',
                            success: function (result) {
                                if (result.status === "success") {
                                    debugger;
                                    if (result.data.length != 0)
                                    {
                                        var options = "";
                                        (result.data).forEach(function (item) {
                                            var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                            options += op;
                                        });
                                        debugger;
                                        $("#ParentId").html(options);
                                        $("#ParentId").selectpicker("refresh");
                                    }
                                }else
                                {
                                    showError(result.message);
                                }
                            }//,
                            //error: function (xhr, ajaxOptions, thrownError) {
                            //    alert("@error");
                            //    alert(xhr.status);
                            //    alert(thrownError);
                            // }
                      });
                }
            });

            $('#iconPicktarget').on('change',
                function(e) {
                    $('#iconPick').val(e.icon);
                });
            $("#MenuType").change(function () {
                debugger;
                var type = $("#MenuType").val();
                if (type != "-1" && type != "4" && type != "5") {
                    fillCategory(type)
                } else if (type == "4") {
                    $("#urlSection").removeClass("invisible");
                }
            });
            $(document).on("change", "#categoryId", function () {
                debugger;
                if ($("#categoryId").val() != "-1")
                {
                    if ($("#MenuType").val() == "1") {
                        fillProductList($("#categoryId").val(), "");
                    }
                    else if ($("#MenuType").val() == "3") {
                        fillContentList($("#categoryId").val(), "");
                    }
                }
            });
            $("#btnAddMenu").click(function () {
            debugger;
            clearFormValidation();
                var flag = false;
                if ($("#multiLingualList tr").length == 0) {
                    $("span[data-val-result='MultiLingualProperties']").html('@Language.GetString("AlertAndMessage_FillMultiLingualProperty")');
                    flag = true;
                }
                if ($("#MenuType").val() == "-1") {
                    $("span[data-val-result='MenuType']").html('@Language.GetString("AlertAndMessage_OptionEssential")');
                    flag = true;
                }
                if (($("#MenuType").val() == "0" || $("#MenuType").val() == "1" ||
                     $("#MenuType").val() == "2" || $("#MenuType").val() == "3") && $("#categoryId").val() == "-1") {
                    $("span[data-val-result='categoryId']").html('@Language.GetString("AlertAndMessage_OptionEssential")');
                    flag = true;
                }
                if (($("#MenuType").val() == "1" || $("#MenuType").val() == "3") && $("#ContentOrProductId").val() == "-1")
                {
                    $("span[data-val-result='ContentOrProductId']").html('@Language.GetString("AlertAndMessage_OptionEssential")');
                    flag = true;
                }
                if ($("#MenuType").val() == "4" && $("#Url").val() == "") {
                     $("span[data-val-result='Url']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
                }
                if("@ViewBag.IsSysAcc" == "True" && $("#AssociatedDomainId").val() == "")
                {
                    $("span[data-val-result='AssociatedDomainId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
                }

                if (!flag) {
                    var dto = FillDataToSend();
                    $.ajax({
                        url: "@Model.MenuId" != "" ? '@Url.Action("Edit", "Menu")': '@Url.Action("Add", "Menu")',
                        contentType: 'application/json',
                        data: JSON.stringify(dto),
                        type: 'Post',
                        beforeSend: function () {
                            debugger;
                           /* AddLoading($("#addStoreMenuCard"));*/
                        },
                        success: function (result) {
                            debugger;
                            if (result.status === "Success") 
                            {
                                document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i>'+result.message;
                                document.getElementById('mainToastBody').classList.add('alert-success');
                                 var bsAlert = new bootstrap.Toast($("#mainToast"));
                                 $("#toastPanel").show();
                                 bsAlert.show();
                                    setTimeout(function()
                                    {
                                        $("#toastPanel").hide();
                                       window.location.href = '@Url.Action("List")';
                                    },
                                    3000);
                            }
                            else
                            if (result.status === "ModelError") 
                            {
                                 clearFormValidation();
                                if (result.modelStateErrors != null && result.modelStateErrors.length > 0)
                                {
                                   debugger;
                                    result.modelStateErrors.forEach(function(value, index) {
                                    $('[data-val-result=' + value.key + ']').append(value.errorMessage);
                                    $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                                    });
                                }
                                else
                                {
                                    showError(result.message);
                                }
                             }
                             else 
                             if(result.status == "Error")
                             {
                                 showError(result.message);
                             }
                        },
                        //error: function (xhr, ajaxOptions, thrownError) {
                        //    alert("@error");
                        //    alert(xhr.status);
                        //    alert(thrownError);
                        //},
                        complete: function () {
                            /*removeLoading($("#addStoreMenuCard"));*/
                        }
                        });
                }
            });
        });
        function fillCategory(menuType) {
            var options = "";
            switch (menuType) {
                        case "0":
                        case "1":
                            //productGroup and product
                            var list = @Json.Serialize(ViewBag.ProductGroupList) ;
                            (list).forEach(function (item) {
                                var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                options += op;
                            });
                            $("#categoryId").html(options);
                            $("#categoryId").selectpicker("refresh");
                            $("#groupSection").removeClass("invisible");
                            $("#productOrContentSection").addClass("invisible");
                            break;
                        case "2":
                        case "3":
                            //content and contentCtaegory
                            var list = @Json.Serialize(ViewBag.ContentCategoryList);
                            (list).forEach(function (item) {
                                var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                options += op;
                            });
                            $("#categoryId").html(options);
                            $("#categoryId").selectpicker("refresh");
                            $("#groupSection").removeClass("invisible");
                            $("#productOrContentSection").addClass("invisible");
                            break;
                        case "4":
                        case "5":
                            //link and module
                            $("#groupSection").addClass("invisible");
                            $("#productOrContentSection").addClass("invisible");
                            break;
                            }
        }
        function LoadData() {
            debugger;
            if($("#AssociatedDomainId") != undefined)
            {
                $("#AssociatedDomainId").val('@Model.AssociatedDomainId');
                $("#AssociatedDomainId").selectpicker("refresh");
            }


            if ("@Model.ParentId" != "") {
                $("#ParentId").val('@Model.ParentId');
            }
            fillCategory($("#MenuType").val());
            if ($("#MenuType").val() != "4" && $("#MenuType").val() != "5")
            {
                $("#categoryId").val('@Model.SubGroupId');
                $("#categoryId").selectpicker("refresh");
                $("#groupSection").removeClass("invisible");
                if ($("#MenuType").val() == "1") {
                    fillProductList('@Model.SubGroupId', '@Model.SubId');
                }
                else if ($("#MenuType").val() == "3") {
                    fillContentList('@Model.SubGroupId', '@Model.SubId');
                } 
            }else if($("#MenuType").val() == "4")
            {
                 $("#Url").val("@Model.Url");
                 $("#urlSection").removeClass("invisible");
            }
            $("#Order").val("@Model.Order");
            $("#iconPicker").iconpicker("setIcon", "@Model.Icon");
        }
        function fillContentList(categoryId, selectedVal) {
            debugger;
            $.ajax({
                url: '@Url.Action("GetContentList", "Menu")'+"?categoryId=" + categoryId,
                type: 'Get',
                dataType : 'json',
                success: function (result) {
                    debugger;
                    var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                    if (result.status === "success") {
                        debugger;
                        if (result.data.length != 0) {
                            (result.data).forEach(function (item) {
                                var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                options += op;
                            });
                            debugger;
                            $("#ContentOrProductId").html(options);
                            if (selectedVal != "") {
                                $("#ContentOrProductId").val(selectedVal);
                            }
                            $("#ContentOrProductId").selectpicker("refresh");
                            $("#lblProductOrContent").text('@Language.GetString("Content")');
                            $("#productOrContentSection").removeClass("invisible");
                        }
                    }else
                    {
                        showError(result.message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("@error");
                    alert(xhr.status);
                    alert(thrownError);
                }
                });
        }

        function fillProductList(groupId, selectedVal) {
            debugger;
             $.ajax({
                 url:`@Url.Action("GetProductList", "Menu")?groupId=${groupId}`,  
                    type: 'Get',
                    dataType : 'json',
                    success: function (result) {
                        debugger;
                        var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                        if (result.status === "success") {
                            debugger;
                            if (result.data.length != 0) {
                                (result.data).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });
                                debugger;
                                $("#ContentOrProductId").html(options);
                                if (selectedVal != "") {
                                    $("#ContentOrProductId").val(selectedVal);
                                }
                                $("#ContentOrProductId").selectpicker("refresh");
                                $("#lblProductOrContent").text('@Language.GetString("Product")');
                                $("#productOrContentSection").removeClass("invisible");
                            }
                        }else
                        {
                            showError(result.message);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                         }
                    });
        }


        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.MenuTitles = [];
            obj.MenuId = $("#MenuId").val();
            if ($("#ParentId").val() != null && $("#ParentId").val() != "-1") {
                obj.ParentId = $("#ParentId").val();
                obj.ParentName = $("#ParentId option:selected").text();
            }
           obj.AssociatedDomainId = $("#AssociatedDomainId").val();
          
          
            $("#multiLingualList tr").each(function ()
            {
                debugger;
                var innerModel = {};
                innerModel.Name = $(this).find("td:eq(0)").text();
                innerModel.LanguageId = $(this).find("td:eq(2)").text();
                obj.MenuTitles.push(innerModel);
            });

            obj.MenuTypeId = $("#MenuType").val();
            obj.Order = parseInt($("#Order").val());
            obj.Icon = $("#iconPick").val();
            if ($("#MenuType").val() == "4") {
                obj.Url = $("#Url").val();
            }
            if ($("#MenuType").val() != "4" && $("#MenuType").val() != "5") {
                obj.SubGroupId = $("#categoryId").val();
                obj.SubGroupName = $("#categoryId option:selected").text();
                if ($("#MenuType").val() != "1" || $("#MenuType").val() != "3") {
                    obj.SubId = $("#ContentOrProductId").val();
                    obj.SubName = $("#ContentOrProductId option:selected").text();
                }
            }
            return obj;
        }

        function deleteFromTable(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }
        function addToTable() {
            var flag = false;
            debugger;

            if ($("#menuTitle").val() == "") {
                $("span[data-val-result='menuTitle']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }
            if ($("#languageId").val() == "-1") {
                 $("span[data-val-result='languageId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                flag = true;
            }

            if (!flag) {
                var tr = "<tr style='text-align:center;'><td>" + $("#menuTitle").val() +
                    "</td><td>" + $('#languageId option:selected').text() +
                    "</td><td style='display:none;'>" + $("#languageId").val() +
                    "</td><td><button type='button' class='btn btn-sm btn-danger' onclick='deleteFromTable(this);'>" +
                    "<i class='fa fa-trash' ></i></button></td></tr>";

                $("#multiLingualList").append(tr);
                $("#menuTitle").val("");
                $("#languageId").val("-1");
                $("#languageId").selectpicker("refresh");
            }
        }
    </script>
}




