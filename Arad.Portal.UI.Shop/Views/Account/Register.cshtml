@inject Arad.Portal.DataLayer.Contracts.General.SystemSetting.ISystemSettingRepository _systemSettingRepository
@using System.Globalization
@model Arad.Portal.DataLayer.Models.User.RegisterDTO
@{
    Layout = null;
    
    Arad.Portal.DataLayer.Entities.General.SystemSetting.SystemSetting systemSetting =
        (await _systemSettingRepository.GetAll()).FirstOrDefault();
      
     var direction = HelpersMethods.GetDirection(CultureInfo.CurrentCulture);
    var lang = HelpersMethods.GetHtmlLang(CultureInfo.CurrentCulture);
}
<!DOCTYPE html>
<html dir="@direction" lang="@lang">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible"
          content="IE=edge">

    <link rel="shortcut icon"
          href="~/@(string.IsNullOrWhiteSpace(systemSetting?.CompanyLogoUrl) ? "favicon.ico"
        : $"SystemIcon/{systemSetting.SystemIcon}")"
          type="image/x-icon" />

    <title>@systemSetting?.SystemTitle - @Language.GetString("Action_Register")</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    @if (direction == "ltr")
    {
         <link href="~/lib/bootstrap5/css/bootstrap.min.css" rel="stylesheet" />
    }
    else
    {
          <link href="~/lib/bootstrap5/css/bootstrap.rtl.min.css" rel="stylesheet" />
          <link href="~/Fonts/IranSans/css/fontiran.css" rel="stylesheet" />
    }
    <link href="~/lib/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href="~/lib/intl-tel-input/css/intlTelInput.css" rel="stylesheet" />
    <style>
        input::placeholder { text-align: center; }

        input { border-color: #9e9e9e !important; }

        #imgcpatcha::placeholder {
            font-size: 12px;
            text-align: center;
        }
        .iti__selected-flag { direction: ltr; }

        body {
            align-content: center;
            background-color: white !important;
            display: flex;
            font-family: @(CultureInfo.CurrentCulture.Name == "fa-IR" ? "IRANSansWeb" : null);
            font-size: 14px;
            justify-content: center;
            padding-top: 80px;
        }

        .loginSignUpSeparator {
            border-top: 1px solid #cbd2d6;
            margin: 25px 0 10px;
            position: relative;
            text-align: center;
        }

        .loginSignUpSeparator .textInSeparator {
            background-color: #fff;
            color: #6c7378;
            padding: 0 .5em;
            position: relative;
            top: -.7em;
        }
    </style>
</head>

<body style="font-family: IransansWeb">

    <div id="loading" class="text-center">
        <div class="spinner-border text-danger" style="width: 4rem; height: 4rem;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
     <div class="position-fixed left-50 top-0 p-5" id="toastPanel" style="z-index: 11;">
            <div aria-atomic="true" aria-live="assertive" class="toast" id="mainToast" role="alert" autohide="false">
                @* width: calc(100% - 400px);top: 40%; left: 200px;position: absolute;*@
                <div class="toast-body p-3 fs-5 rounded-3 text-center" id="mainToastBody">
                </div>
            </div>
        </div>

    <div style="width: 400px;">
        <div class="card card-outline">
            <!-- /.login-logo -->
            <div class="card-body">
               
                <div class="text-center">
                    <img src="@(string.IsNullOrWhiteSpace(systemSetting?.CompanyLogoUrl)
                            ? "/imgs/logo.png" : $"~/Logo/{systemSetting.CompanyLogoUrl}")"
                         height="100"
                         width="100" />
                </div>
                <br />

                <form id="register"
                      role="form"
                      method="post"
                      asp-action="Register">
                      @*<input type="hidden" id="FullCellPhoneNumber" name="FullCellPhoneNumber"/>*@
                    <div class="input-group mb-3 step1"
                         style="margin-bottom: 12px !important;">
                        <input placeholder="@Language.GetString("TextAndPlaceholder_Mobile_UserName")"
                               type="tel"
                               class="form-control"
                               id="CellPhone"
                               style="width: 317px !important"
                               dir="ltr">

                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-mobile-alt"
                                      style="width: 16px;">
                                </span>
                            </div>
                        </div>

                    </div>

                    <div style="text-align: center">
                        <span data-val-result="CellPhoneNumber"
                              class="text-danger">
                        </span>
                    </div>

                    <div class="input-group mb-3 step2">
                        <input type="text"
                               class="form-control"
                               id="SecurityCode"
                               oninput="onChangeSecurityCode()"
                               placeholder="@Language.GetString("TextAndPlaceholder_SecurityCode")"
                               autocomplete="off"
                               asp-for="SecurityCode">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-envelope"></span>
                            </div>
                            <button type="button"
                                    onclick="resendCode()"
                                    id="btnResendCode"
                                    style="width: 165px;"
                                    class="btn btn-primary bg-gradient">
                                @Language.GetString("Action_ResendCode")
                            </button>
                        </div>
                    </div>

                    <div style="text-align: center">
                        <span data-val-result="SecurityCode"
                              class="text-danger">
                        </span>
                    </div>

                    <div class="input-group mb-3"
                         style="margin-bottom: 12px !important; margin-top: 15px;">

                        <img alt="Captcha"
                             id="imgcpatcha"
                             src="@Url.Action("CaptchaImage", "Captcha")"
                             style="border: 1px solid #9e9e9e" />
                        <input asp-for="Captcha"
                               type="text"
                               class="form-control"
                               id="inlineFormInputGroup"
                               placeholder="@Language.GetString("TextAndPlaceholder_Captcha")"
                               style="text-align: center">

                        <div style="cursor: pointer"
                             class="input-group-prepend">
                            <div class="input-group-text">
                                <i onclick="refreshCaptcha()"
                                   class="fas fa-sync-alt">
                                </i>
                            </div>
                        </div>

                        <span id="captValidation"
                              data-val-result="Captcha"
                              class="text-danger">
                        </span>
                    </div>

                    <div class="row step1">
                        <button type="button"
                                onclick="receiveCode()"
                                id="btnReceiveCode"
                                class="btn btn-primary bg-gradient">
                            @Language.GetString("Action_Next")
                        </button>
                    </div>

                    <div class="row step2">
                        <button type="submit"
                                class="btn btn-primary bg-gradient"
                                disabled="disabled"
                                id="btnSubmit">
                            @Language.GetString("Action_Register")
                        </button>
                    </div>
                </form>
                <div class="loginSignUpSeparator">
                    <span class="textInSeparator">@Language.GetString("TextAndPlaceholder_Or")</span>
                </div>
                <a asp-action="Login"
                   class="btn btn-primary bg-gradient">
                    @Language.GetString("Action_AlreadyUserName")
                </a>
            </div>
        </div>
    </div>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap5/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap-select/bootstrap-select.min.js"></script>
    <script src="~/lib/bootstrap-select/js/i18n/defaults-@(CultureInfo.CurrentCulture.Name.Replace('-', '_')).js"></script>
    <script src="~/lib/intl-tel-input/js/intlTelInput.js"></script>
    <script src="~/lib/intl-tel-input/js/utils.js"></script>

    <script>

    var cell = document.querySelector("#CellPhone");
    var cellPhoneInit = window.intlTelInput(cell,
        {
            initialCountry: "IR",
            placeholderNumberType: "MOBILE",
            separateDialCode: true,
            nationalMode: true,
            hiddenInput: "FullCellPhoneNumber"
        });

    function onChangeSecurityCode()
    {
        debugger;
        if (document.getElementById("SecurityCode").value.length === 6)
        {
            document.getElementById("btnSubmit").disabled = false;
        }
    }

    window.addEventListener("beforeunload",
        function()
        {
            $("#loading").addClass('is-active');
        });

    $(document)
        .ready(function()
        {
            debugger;
            $(".step2").hide();
        });

    function resendCode()
    {
        debugger;
        $(".step2").hide();
        $(".step1").show();
        refreshCaptcha();
    }

    var tmpSetInterval;

    function startTimer()
    {
        debugger;
        var timer = 180, minutes, seconds;
        tmpSetInterval = setInterval(function()
            {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? `0${minutes}` : minutes;
                seconds = seconds < 10 ? `0${seconds}` : seconds;

                document.getElementById("btnResendCode").innerHTML = minutes + ":" + seconds;
                document.getElementById("btnResendCode").disabled = true;

                if (--timer < 0)
                {
                    clearInterval(tmpSetInterval);
                    document.getElementById("btnResendCode").innerHTML = "@Language.GetString("Action_ResendCode")";
                    document.getElementById("btnResendCode").disabled = false;
                    timer = 180;
                }
            },
            1000);
    }

    function receiveCode()
    {
        debugger;
        const cellPhone = cellPhoneInit.getNumber(intlTelInputUtils.numberFormat.E164);

        if (!cellPhone)
        {
            document.getElementById('mainToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${'@Language.GetString("Validation_EnterMobileNumber")'}`;
            $('#mainToastBody').removeClass("alert-success");
            $('#mainToastBody').addClass("alert-danger");
            var toastDiv = $("#mainToast");
            $("#toastPanel").show();
            var toast = new bootstrap.Toast(toastDiv);
            toast.show();

            setTimeout(function(){
                    $("#toastPanel").hide();
            }, 3000);
            return;
        }

        const captcha = $("#inlineFormInputGroup").val();

        $.ajax({
            type: 'Get',
            url: `@Url.Action("CheckCaptcha")?captcha=${captcha}`,
            success: function(resultData)
            {
                if (resultData.status === "error")
                {
                    document.getElementById('mainToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${'@Language.GetString("AlertAndMessage_CaptchaIncorrectOrExpired")'}`;
                        $('#mainToastBody').removeClass("alert-success");
                        $('#mainToastBody').addClass("alert-danger");
                    var toastDiv = $("#mainToast");
                    $("#toastPanel").show();
                    var toast = new bootstrap.Toast(toastDiv);
                    toast.show();

                    setTimeout(function(){
                            $("#toastPanel").hide();
                    }, 3000);
			        bsAlert.show();
                }
                else
                {    
                    $.ajax({
                            type: 'Get',
                            url: `@Url.Action("AlreadyRegisteredCellPhoneNumber")?cellPhoneNumber=${cellPhone}`,
                            beforeSend: function()
                            {
                                $("#loading").addClass('is-active');
                            },
                            success: function(resultData)
                            {
                                debugger;
                                $("#loading").removeClass('is-active');
                                if (resultData.status === "Success") {
                                    $.ajax({
                                        type: 'Get',
                                        url: `@Url.Action("SendSecurityCode")?cellPhoneNumber=${cellPhone}`,
                                        beforeSend: function() {
                                            $("#loading").addClass('is-active');
                                        },
                                        success: function(resultData) {
                                            $("#loading").removeClass('is-active');
                                            if (resultData.status === "Success") {
                                                $(".step1").hide();
                                                $(".step2").show();
                                                refreshCaptcha();
                                                startTimer();
                                                $("#SecurityCode").val('');

                                                $('#mainToastBody').html(`<i class="far fa-check-circle"></i> ${resultData.message}`);
                                                $('#mainToastBody').removeClass('alert-danger');
                                                $('#mainToastBody').addClass('alert-success');
                                                $("#toastPanel").show();
                                                var toast = new bootstrap.Toast($("#mainToast"));
                                                toast.show();
                                                setTimeout(function() {
                                                    $("#toastPanel").hide();
                                                }, 2500);
                                            }
                                            else
                                                if (resultData.status === "Error") {
                                                    $('#mainToastBody').html(`<i class="far fa-check-circle"></i> ${resultData.message}`);
                                                    $('#mainToastBody').removeClass('alert-success');
                                                    $('#mainToastBody').addClass('alert-danger');
                                                    $("#toastPanel").show();
                                                    var toast = new bootstrap.Toast($("#mainToast"));
                                                    toast.show();
                                                    setTimeout(function() {
                                                        $("#toastPanel").hide();
                                                    }, 2500);
                                                }
                                        }
                                    });
                                }
                                else
                                if (resultData.status === "Error")
                                {
                                    $('#mainToastBody').html(`<i class="far fa-check-circle"></i> ${resultData.message}`);
                                        $('#mainToastBody').removeClass('alert-success');
                                    $('#mainToastBody').addClass('alert-danger');
                                    $("#toastPanel").show();
                                    var toast = new bootstrap.Toast($("#mainToast"));
                                    toast.show();
                                    setTimeout(function() {
                                        $("#toastPanel").hide();
                                    }, 2500);
                                }
                            }
                                });
                }
            }
        });
    }

    function refreshCaptcha()
    {
        $("#imgcpatcha").attr('src', `@Url.Action("CaptchaImage", "Captcha")?${new Date().getTime()}`);
        $("#inlineFormInputGroup").val('');
        $("#inlineFormInputGroup").focus();
        $('#captValidation').empty();
    }

    $("#register")
        .submit(function(e)
        {
            debugger;
            e.preventDefault();
            const myForm = document.getElementById('register');
            const form = new FormData(myForm);
            $("#btnSubmit").prop('disabled', true);

            $.ajax({
                url: $(this).attr('action'),
                data: form,
                type: 'Post',
                processData: false,
                contentType: false,
                beforeSend: function()
                {
                    $("#loading").addClass('is-active');
                },
                statusCode: {
                    200: function(result)
                    {
                        $("#loading").removeClass('is-active');
                        if (result.status === "Success")
                        {
                            $('#mainToastBody').html(`<i class="far fa-check-circle"></i> ${result.message}`);
                            $('#mainToastBody').removeClass('alert-danger');
                            $('#mainToastBody').addClass('alert-success');
                            $("#toastPanel").show();
                            var toast = new bootstrap.Toast($("#mainToast"));
                            toast.show();
                            setTimeout(function(){
                                    $("#toastPanel").hide();
                                window.location.href = '@Url.Action("Index", "Home")';
                            }, 2500);
                        }
                        if (result.status === "ModelError")
                        {
                            const spanErrorList = $('span[data-val-result]');
                            if (spanErrorList.length > 1)
                            {
                                spanErrorList.each(function()
                                {
                                    $(this).html("");
                                    $(this).parent().removeClass("has-error");
                                });
                            }
                            else
                            {
                                spanErrorList.html("");
                                spanErrorList.parent().removeClass("has-error");
                            }

                            if (result.modelStateErrors !== null)
                            {
                                result.modelStateErrors.forEach(function(value, index)
                                {
                                    $(`[data-val-result=${value.key}]`).html(value.errorMessage);
                                    $(`[data-val-result=${value.key}]`).parent().addClass("has-error");
                                });
                            }
                            $("#btnSubmit").prop('disabled', false);
                        }
                        if (result.status === "Error")
                        {
                           

                             document.getElementById('mainToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${result.message}`;
                                $('#mainToastBody').removeClass("alert-success");
                                $('#mainToastBody').addClass("alert-danger");
                                var toastDiv = $("#mainToast");
                                $("#toastPanel").show();
                                var toast = new bootstrap.Toast(toastDiv);
                                toast.show();

                                setTimeout(function(){
                                        $("#toastPanel").hide();
                                }, 1500);

                            $("#btnSubmit").prop('disabled', false);
                        }
                    },
                    401: function()
                    {
                        $("#loading").removeClass('is-active');
                        window.location.href = '@Url.Action("Login")';
                    }
                }
            });
        });
    </script>
</body>
</html>